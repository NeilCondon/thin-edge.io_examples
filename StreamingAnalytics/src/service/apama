#!/bin/bash

### BEGIN INIT INFO
# Provides:             apama
# Required-Start:       $remote_fs $syslog
# Required-Stop:        $remote_fs $syslog
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Apama correlator with thin-edge connectivity
# Description:
# Starts a correlator with a thin-edge project
# Does nothing if /etc/tedge/apama/project doesn't exist
### END INIT INFO

set -e

APAMAHOME=/opt/softwareag/Apama
APAMAPROJECT=/etc/tedge/apama/project
PIDFILE=/var/run/correlator.pid
LOGFILE=/var/log/apama/correlator.log

if [[ ! -d "$APAMAPROJECT" ]];
then
    echo "No project located in /etc/tedge/apama/project.  To use this service ensure there is an Apama project located in that directory."
    exit 1
fi

. /lib/lsb/init-functions

# Are we running from init?
run_by_init() {
    ([ "$previous" ] && [ "$runlevel" ]) || [ "$runlevel" = S ]
}

case "$1" in
  start)
        echo "Attempting to start correlator"
        if start-stop-daemon --start --quiet --oknodo --background --exec ${APAMAHOME}/bin/apama_env -- correlator --pidfile ${PIDFILE} --config ${APAMAPROJECT} --logfile ${LOGFILE} ; then
            echo "Success"
            log_end_msg 0
        else
            echo "Project is already running. Did not start."
            log_end_msg 1
        fi
        ;;
  stop)
        echo "Stopping correlator"
        if start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile ${PIDFILE}; then
            log_end_msg 0
            if [ -f "${PIDFILE}" ]; then
                rm -f ${PIDFILE}
            fi
            echo "Success"
        else
            log_end_msg 1
        fi
        ;;
  restart|force-reload)
        echo "Attempting to restart correlator"
        if start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile ${PIDFILE}; then
            if [ -f "${PIDFILE}" ]; then
                rm -f ${PIDFILE}
            fi
            echo "Stopped running correlator"
        fi
        if start-stop-daemon --start --quiet --oknodo --background --exec ${APAMAHOME}/bin/apama_env -- correlator --pidfile ${PIDFILE} --config ${APAMAPROJECT} --logfile ${LOGFILE}; then
            echo "Started new correlator"
            log_end_msg 0
        else
            log_end_msg 1
        fi
        ;;
  status)
        status_of_proc -p ${PIDFILE} ${APAMAHOME}/bin/correlator correlator && exit 0 || exit $?
        ;;
  *)
        log_action_msg "Usage: service apama {start|stop|force-reload|restart|status}"
        exit 1
esac
exit 0
