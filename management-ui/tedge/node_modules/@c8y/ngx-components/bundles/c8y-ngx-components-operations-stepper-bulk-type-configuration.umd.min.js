!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@angular/core"),require("@angular/forms"),require("@c8y/ngx-components"),require("@c8y/ngx-components/repository"),require("@c8y/ngx-components/operations/bulk-operation-stepper"),require("@c8y/ngx-components/operations/bulk-operations-service"),require("@ngx-translate/core"),require("lodash-es"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/operations/stepper-bulk-type-configuration",["exports","@angular/core","@angular/forms","@c8y/ngx-components","@c8y/ngx-components/repository","@c8y/ngx-components/operations/bulk-operation-stepper","@c8y/ngx-components/operations/bulk-operations-service","@ngx-translate/core","lodash-es","rxjs","rxjs/operators"],n):n(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"].operations=e.c8y["ngx-components"].operations||{},e.c8y["ngx-components"].operations["stepper-bulk-type-configuration"]={}),e.ng.core,e.ng.forms,e.c8y["ngx-components"],e.c8y["ngx-components"].repository,e.c8y["ngx-components"].operations["bulk-operation-stepper"],e.c8y["ngx-components"].operations["bulk-operations-service"],e.core$1,e.lodashEs,e.rxjs,e.rxjs.operators)}(this,(function(e,n,t,o,i,r,c,a,s,l,p){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var u=function(e,n){return(u=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,n){e.__proto__=n}||function(e,n){for(var t in n)n.hasOwnProperty(t)&&(e[t]=n[t])})(e,n)};function f(e,n,t,o){var i,r=arguments.length,c=r<3?n:null===o?o=Object.getOwnPropertyDescriptor(n,t):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)c=Reflect.decorate(e,n,t,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(c=(r<3?i(c):r>3?i(n,t,c):i(n,t))||c);return r>3&&c&&Object.defineProperty(n,t,c),c}function y(e,n,t,o){return new(t||(t=Promise))((function(i,r){function c(e){try{s(o.next(e))}catch(e){r(e)}}function a(e){try{s(o.throw(e))}catch(e){r(e)}}function s(e){var n;e.done?i(e.value):(n=e.value,n instanceof t?n:new t((function(e){e(n)}))).then(c,a)}s((o=o.apply(e,n||[])).next())}))}function d(e,n){var t,o,i,r,c={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(r){return function(a){return function(r){if(t)throw new TypeError("Generator is already executing.");for(;c;)try{if(t=1,o&&(i=2&r[0]?o.return:r[0]?o.throw||((i=o.return)&&i.call(o),0):o.next)&&!(i=i.call(o,r[1])).done)return i;switch(o=0,i&&(r=[2&r[0],i.value]),r[0]){case 0:case 1:i=r;break;case 4:return c.label++,{value:r[1],done:!1};case 5:c.label++,o=r[1],r=[0];continue;case 7:r=c.ops.pop(),c.trys.pop();continue;default:if(!(i=c.trys,(i=i.length>0&&i[i.length-1])||6!==r[0]&&2!==r[0])){c=0;continue}if(3===r[0]&&(!i||r[1]>i[0]&&r[1]<i[3])){c.label=r[1];break}if(6===r[0]&&c.label<i[1]){c.label=i[1],i=r;break}if(i&&c.label<i[2]){c.label=i[2],c.ops.push(r);break}i[2]&&c.ops.pop(),c.trys.pop();continue}r=n.call(e,c)}catch(e){r=[6,e],o=0}finally{t=i=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,a])}}}function g(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var o,i,r=t.call(e),c=[];try{for(;(void 0===n||n-- >0)&&!(o=r.next()).done;)c.push(o.value)}catch(e){i={error:e}}finally{try{o&&!o.done&&(t=r.return)&&t.call(r)}finally{if(i)throw i.error}}return c}var v=function(e){function t(n,t,i){var r=e.call(this)||this;return r.bulkOperationService=n,r.repositoryService=t,r.translate=i,r.NO_DEVICE_TYPE_AVAILABLE=o.gettext("Undefined`device type`"),r.elementCount=0,r.DD_LOW_COUNT=10,r.textFilter$=new l.BehaviorSubject(""),r.configType$=new l.BehaviorSubject(""),r.configTypes=[],r.selectedConfigType={name:""},r.configurations$=l.combineLatest(r.textFilter$,r.configType$).pipe(p.switchMap((function(e){var n=g(e,2),t=n[0],o=n[1];return r.getConfiguration(t,o)})),p.shareReplay(1)),r.DD_LOW_COUNT=r.bulkOperationService.DD_LOW_COUNT,r.loadConfigurationTypes(),r}return function(e,n){function t(){this.constructor=e}u(e,n),e.prototype=null===n?Object.create(n):(t.prototype=n.prototype,new t)}(t,e),t.prototype.loadConfigurationTypes=function(){var e=this;this.configTypeSubscription=this.configType$.pipe(p.debounceTime(300),p.distinctUntilChanged(),p.switchMap((function(n){var t={configurationType:"*"+n+"*"};return l.from(e.repositoryService.listRepositoryEntries(i.RepositoryType.CONFIGURATION,{query:t}))}))).subscribe((function(n){var t=n.data;e.configTypes=s.uniqWith(t.map((function(e){return{name:e.configurationType}})),s.isEqual)}))},t.prototype.ngOnDestroy=function(){this.configTypeSubscription.unsubscribe()},t.prototype.selectConfiguration=function(e){this.selectedConfiguration=e},t.prototype.goToSecondStep=function(e){e.stepper.next(),this.getConfigBinary(),this.deviceTypes=this.selectedConfiguration.deviceType},t.prototype.getConfigBinary=function(){return y(this,void 0,void 0,(function(){var e;return d(this,(function(n){switch(n.label){case 0:return this.selectedConfiguration.url?(e=this.selectedConfiguration,[4,this.repositoryService.getBinaryText(this.selectedConfiguration.url,{allowExternal:!0,noAlerts:!0})]):[3,2];case 1:e.binary=n.sent(),n.label=2;case 2:return[2]}}))}))},t.prototype.getDeviceTypeTitle=function(e){return s.get(e,"deviceType",this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE))},t.prototype.retrieveOperationPrototype=function(){var e={type:this.selectedConfiguration.configurationType,url:this.selectedConfiguration.url};return{name:o.gettext("Configuration update"),description:s.get(this.selectedConfiguration,"name"),prototype:{description:"Update configuration to: "+this.selectedConfiguration.name+".",c8y_DownloadConfigFile:e}}},t.prototype.getConfiguration=function(e,n){var t=e?{name:"*"+e+"*"}:{};return n&&(t.__or=[{configurationType:n},{__not:{__has:"configurationType"}}]),this.repositoryService.listRepositoryEntries(i.RepositoryType.CONFIGURATION,{query:t})},t.ctorParameters=function(){return[{type:c.BulkOperationsService},{type:i.RepositoryService},{type:a.TranslateService}]},t=f([n.Component({selector:"c8y-stepper-bulk-type-configuration",template:'<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep="\n      \'Select configuration\' | translate;\n      completed: !!selectedConfiguration;\n      buttonsDisabled: !selectedConfiguration;\n      onNext: goToSecondStep.bind(this)"\n  >\n    <div class="card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12">\n      <div class="row p-b-16">\n        <div class="col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3">\n          <h4 class="text-center m-b-16">{{ \'Select configuration\' | translate }}</h4>\n          <div class="row">\n            <div class="col-md-6">\n              <div class="input-group input-group-search">\n                <input\n                  type="search"\n                  class="form-control"\n                  title="{{ \'Filter…\' | translate }}"\n                  placeholder="{{ \'Filter…\' | translate }}"\n                  [ngModel]="textFilter$ | async"\n                  (ngModelChange)="textFilter$.next($event)"\n                />\n                <span class="input-group-addon">\n                  <i c8yIcon="filter" *ngIf="(textFilter$ | async).length === 0"></i>\n                  <i\n                    c8yIcon="times"\n                    class="text-muted"\n                    *ngIf="(textFilter$ | async).length > 0"\n                    (click)="textFilter$.next(\'\')"\n                  ></i>\n                </span>\n              </div>\n            </div>\n            <div class="col-xs-12 p-b-8 visible-xs visible-sm"></div>\n            <div class="col-md-6">\n              <c8y-form-group class="m-0">\n                <c8y-typeahead\n                  name="configType"\n                  [(ngModel)]="selectedConfigType"\n                  placeholder="{{ \'Type to filter configuration types…\' | translate }}"\n                  (onSearch)="configType$.next($event)"\n                >\n                  <c8y-li\n                    class="p-l-8 p-r-8 c8y-list__item--link"\n                    (click)="selectedConfigType = { name: \'\' }; configType$.next(\'\')"\n                  >\n                    <span>{{ \'All configuration types\' | translate }}</span>\n                  </c8y-li>\n                  <c8y-li\n                    *ngFor="let configType of configTypes"\n                    class="p-l-8 p-r-8 c8y-list__item--link"\n                    (click)="selectedConfigType = configType; configType$.next(configType.name)"\n                    [active]="selectedConfigType === configType"\n                  >\n                    <c8y-highlight\n                      [text]="configType.name"\n                      [pattern]="configType$ | async"\n                    ></c8y-highlight>\n                  </c8y-li>\n                </c8y-typeahead>\n              </c8y-form-group>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class="col-xs-12 flex-grow no-gutter">\n      <div class="card-inner-scroll fit-h">\n        <div class="card-block p-t-0 p-b-0">\n          <c8y-list-group [ngClass]="{ \'dd-low\': elementCount < DD_LOW_COUNT }">\n            <c8y-li #listItem *c8yFor="let configuration of configurations$ | async">\n              <c8y-li-radio (onSelect)="selectConfiguration(configuration)"></c8y-li-radio>\n              <c8y-li-icon icon="gears"></c8y-li-icon>\n              <c8y-li-body class="content-flex-60">\n                <div class="col-5">\n                  <div class="text-truncate" title="{{ configuration.name || \'-\' }}">\n                    <c8y-highlight\n                      [text]="configuration.name || \'-\'"\n                      [pattern]="textFilter$ | async"\n                    ></c8y-highlight>\n                  </div>\n                </div>\n                <div class="col-4">\n                  <div\n                    class="text-truncate"\n                    title="{{ \'Device type\' | translate }}: {{ getDeviceTypeTitle(configuration) }}"\n                  >\n                    <span translate class="text-label-small m-r-4">Device type</span>\n                    {{ configuration.deviceType }}\n                    <em class="text-muted" *ngIf="!configuration.deviceType">\n                      {{ \'Undefined`device type`\' | translate }}\n                    </em>\n                  </div>\n                </div>\n                <div class="col-3">\n                  <span\n                    class="label label-info"\n                    *ngIf="configuration.configurationType"\n                    title="{{ \'Configuration type\' | translate }}: {{\n                      configuration.configurationType\n                    }}"\n                  >\n                    <c8y-highlight\n                      [text]="configuration.configurationType"\n                      elementClass="text-gray-lighter"\n                      [pattern]="configType$ | async"\n                    ></c8y-highlight>\n                  </span>\n                  <span\n                    class="label label-default"\n                    *ngIf="!configuration.configurationType"\n                    title="{{ \'Configuration type\' | translate }}: {{ \'Undefined\' | translate }}"\n                  >\n                    {{ \'Undefined\' | translate }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n  <ng-container *customStep="\'Preview configuration\' | translate">\n    <div class="d-contents">\n      <div class="card-block p-t-0 flex-no-shrink separator-bottom">\n        <div class="row">\n          <div class="col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3">\n            <h4 class="text-center m-b-16">\n              {{ \'Preview configuration\' | translate }}\n            </h4>\n            <div class="row no-gutter">\n              <div class="col-xs-6">\n                <div class="text-right text-truncate" title="{{ selectedConfiguration?.name }}">\n                  <strong>{{ selectedConfiguration?.name }}</strong>\n                </div>\n                <span class="label label-primary" *ngIf="selectedConfiguration?.configurationType">\n                  {{ selectedConfiguration.configurationType }}\n                </span>\n                <span class="label label-default" *ngIf="!selectedConfiguration?.configurationType">\n                  {{ \'Undefined\' | translate }}\n                </span>\n              </div>\n              <div class="col-xs-6 text-right">\n                <div class="text-truncate" title="{{ \'Device type\' | translate }}: {{ getDeviceTypeTitle(selectedConfiguration) }}">\n                  <span translate class="text-label-small m-r-4">\n                    Device type\n                  </span>\n                  {{ selectedConfiguration?.deviceType }}\n                  <em class="text-muted" *ngIf="!selectedConfiguration?.deviceType" translate>\n                    Undefined`device type`\n                  </em>\n                </div>\n                <p>\n                  <span translate class="text-label-small m-r-4">Updated</span>\n                  <small>{{ selectedConfiguration?.lastUpdated | c8yDate }}</small>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="col-xs-12 flex-grow no-gutter">\n        <div class="card-inner-scroll fit-h">\n          <div class="card-block p-t-0">\n            <div class="row">\n              <div class="col-md-8 col-md-offset-2">\n                <div class="legend form-block" translate>Preview</div>\n                <div\n                  class="c8y-empty-state text-left"\n                  *ngIf="!this.selectedConfiguration?.binary; else binaryPreview"\n                >\n                  <h1 [c8yIcon]="\'file-code-o\'"></h1>\n                  <p>\n                    <strong translate>No preview available.</strong><br />\n                    <small translate>Could not fetch the file.</small>\n                  </p>\n                </div>\n                <ng-template #binaryPreview>\n                  <pre\n                    style="min-height: 98px;"\n                  ><code>{{ this.selectedConfiguration?.binary }}</code></pre>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n'})],t)}(r.BaseStepperComponent),m={type:c.BulkOperationType.CONFIGURATION,c8yIcon:"cogs",name:o.gettext("Configuration update"),path:c.baseUrl+"configuration",component:v,fragments:["c8y_DownloadConfigFile","c8y_Configuration"],selected:!1},h=function(){function e(){}return e=f([n.NgModule({declarations:[v],imports:[o.CoreModule,o.FormsModule,t.ReactiveFormsModule,r.BulkOperationStepperModule,i.RepositoryModule],providers:[{provide:c.HOOK_LIST_BULK_TYPE,useValue:m,multi:!0}],entryComponents:[v],exports:[v]})],e)}();e.StepperBulkTypeConfigurationComponent=v,e.StepperBulkTypeConfigurationModule=h,e.ɵ0=m,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-operations-stepper-bulk-type-configuration.umd.min.js.map