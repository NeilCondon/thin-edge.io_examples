!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@c8y/ngx-components"),require("@c8y/ngx-components/repository"),require("@ngx-translate/core"),require("lodash-es"),require("rxjs"),require("rxjs/operators"),require("@angular/forms"),require("@c8y/ngx-components/operations/bulk-operation-stepper"),require("@c8y/ngx-components/operations/bulk-operations-service")):"function"==typeof define&&define.amd?define("@c8y/ngx-components/operations/stepper-bulk-type-software",["exports","@angular/core","@c8y/ngx-components","@c8y/ngx-components/repository","@ngx-translate/core","lodash-es","rxjs","rxjs/operators","@angular/forms","@c8y/ngx-components/operations/bulk-operation-stepper","@c8y/ngx-components/operations/bulk-operations-service"],t):t(((e=e||self).c8y=e.c8y||{},e.c8y["ngx-components"]=e.c8y["ngx-components"]||{},e.c8y["ngx-components"].operations=e.c8y["ngx-components"].operations||{},e.c8y["ngx-components"].operations["stepper-bulk-type-software"]={}),e.ng.core,e.c8y["ngx-components"],e.c8y["ngx-components"].repository,e.core$1,e.lodashEs,e.rxjs,e.rxjs.operators,e.ng.forms,e.c8y["ngx-components"].operations["bulk-operation-stepper"],e.c8y["ngx-components"].operations["bulk-operations-service"])}(this,(function(e,t,n,o,s,r,i,a,c,l,p){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var y=function(e,t){return(y=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function f(e,t,n,o){var s,r=arguments.length,i=r<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var a=e.length-1;a>=0;a--)(s=e[a])&&(i=(r<3?s(i):r>3?s(t,n,i):s(t,n))||i);return r>3&&i&&Object.defineProperty(t,n,i),i}function d(e,t,n,o){return new(n||(n=Promise))((function(s,r){function i(e){try{c(o.next(e))}catch(e){r(e)}}function a(e){try{c(o.throw(e))}catch(e){r(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,a)}c((o=o.apply(e,t||[])).next())}))}function u(e,t){var n,o,s,r,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return r={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function a(r){return function(a){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,o&&(s=2&r[0]?o.return:r[0]?o.throw||((s=o.return)&&s.call(o),0):o.next)&&!(s=s.call(o,r[1])).done)return s;switch(o=0,s&&(r=[2&r[0],s.value]),r[0]){case 0:case 1:s=r;break;case 4:return i.label++,{value:r[1],done:!1};case 5:i.label++,o=r[1],r=[0];continue;case 7:r=i.ops.pop(),i.trys.pop();continue;default:if(!(s=i.trys,(s=s.length>0&&s[s.length-1])||6!==r[0]&&2!==r[0])){i=0;continue}if(3===r[0]&&(!s||r[1]>s[0]&&r[1]<s[3])){i.label=r[1];break}if(6===r[0]&&i.label<s[1]){i.label=s[1],s=r;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(r);break}s[2]&&i.ops.pop(),i.trys.pop();continue}r=t.call(e,i)}catch(e){r=[6,e],o=0}finally{n=s=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,a])}}}function v(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,s,r=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(o=r.next()).done;)i.push(o.value)}catch(e){s={error:e}}finally{try{o&&!o.done&&(n=r.return)&&n.call(r)}finally{if(s)throw s.error}}return i}var m=function(){function e(e,o){var s=this;this.repositoryService=e,this.translate=o,this.software=new t.EventEmitter,this.textFilter$=new i.BehaviorSubject(""),this.deviceType$=new i.BehaviorSubject(""),this.deviceTypes=[],this.selectedDeviceType={name:""},this.isLegacy=this.repositoryService.isLegacyEntry.bind(this.repositoryService),this.software$=i.combineLatest(this.textFilter$,this.deviceType$).pipe(a.switchMap((function(e){var t=v(e,2),n=t[0],o=t[1];return s.getSoftware(n,o)})),a.shareReplay(1)),this.NO_DEVICE_TYPE_AVAILABLE=n.gettext("No device type available"),this.loadDeviceTypes()}return e.prototype.getBaseVersionsCount$=function(e){return this.repositoryService.getBaseVersionsCount$(e).pipe(a.shareReplay(1))},e.prototype.getVersions=function(e){return this.repositoryService.listAllVersions(e)},e.prototype.getDeviceTypeTitle=function(e){return r.get(e,"c8y_Filter.type",this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE))},e.prototype.loadDeviceTypes=function(){var e=this;this.deviceTypeSubscription=this.deviceType$.pipe(a.debounceTime(300),a.distinctUntilChanged(),a.switchMap((function(t){var n={"c8y_Filter.type":"*"+t+"*"};return i.from(e.repositoryService.listRepositoryEntries(o.RepositoryType.SOFTWARE,{query:n}))}))).subscribe((function(t){var n=t.data;e.deviceTypes=r.uniqWith(n.map((function(e){return{name:e.c8y_Filter.type}})),r.isEqual)}))},e.prototype.ngOnDestroy=function(){this.deviceTypeSubscription.unsubscribe()},e.prototype.resetSelection=function(){this.radioButtons.map((function(e){return e.reset()}))},e.prototype.selectSoftware=function(e){var t=e.option,n=e.software;n.selectedId=t.id,t.action="install",this.emitSoftware({option:t,software:n})},e.prototype.emitSoftware=function(e){var t=e.option,n=e.software,o=Object.assign({},{software:n},{version:t},{action:t.action});this.software.emit(o)},e.prototype.getSoftware=function(e,t){var n=e?{name:"*"+e+"*"}:{};return t&&(n.__or=[{"c8y_Filter.type":t},{__not:{__has:"c8y_Filter.type"}}]),this.repositoryService.listRepositoryEntries(o.RepositoryType.SOFTWARE,{query:n})},e.ctorParameters=function(){return[{type:o.RepositoryService},{type:s.TranslateService}]},f([t.Output()],e.prototype,"software",void 0),f([t.ViewChildren(n.ListItemRadioComponent)],e.prototype,"radioButtons",void 0),f([n.memoize(r.property("id"))],e.prototype,"getBaseVersionsCount$",null),f([n.memoize(r.property("id"))],e.prototype,"getVersions",null),e=f([t.Component({selector:"c8y-select-software-step",template:'<div class="card-block p-t-0 overflow-visible flex-no-shrink separator-bottom col-xs-12">\n  <div class="row p-b-16">\n    <div class="col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3">\n      <h4 class="text-center m-b-16">{{ \'Select software\' | translate }}</h4>\n      <div class="row">\n        <div class="col-md-6">\n          <div class="input-group input-group-search">\n            <input\n              type="search"\n              class="form-control"\n              title="{{ \'Filter software…\' | translate }}"\n              placeholder="{{ \'Filter software…\' | translate }}"\n              [ngModel]="textFilter$ | async"\n              (ngModelChange)="textFilter$.next($event)"\n            />\n            <span class="input-group-addon">\n              <i c8yIcon="filter" *ngIf="(textFilter$ | async).length === 0"></i>\n              <i\n                c8yIcon="times"\n                class="text-muted"\n                *ngIf="(textFilter$ | async).length > 0"\n                (click)="textFilter$.next(\'\')"\n              ></i>\n            </span>\n          </div>\n        </div>\n        <div class="col-xs-12 p-b-8 visible-xs visible-sm"></div>\n        <div class="col-md-6">\n          <c8y-form-group class="m-0">\n            <c8y-typeahead\n              name="deviceType"\n              [(ngModel)]="selectedDeviceType"\n              placeholder="{{ \'Type to filter device types…\' | translate }}"\n              (onSearch)="deviceType$.next($event)"\n              [allowFreeEntries]="false"\n            >\n              <c8y-li\n                class="p-l-8 p-r-8 c8y-list__item--link"\n                (click)="selectedDeviceType = {name: \'\'}; deviceType$.next(\'\')"\n              >\n                <span>{{\'All device types\' | translate }}</span>\n              </c8y-li>\n              <c8y-li\n              *ngFor="let deviceType of deviceTypes"\n              class="p-l-8 p-r-8 c8y-list__item--link"\n              (click)="selectedDeviceType = deviceType; deviceType$.next(deviceType.name)"\n              [active]="selectedDeviceType === deviceType"\n              >\n              <c8y-highlight\n              [text]="deviceType.name"\n              [pattern]="deviceType$ | async"\n              ></c8y-highlight>\n              </c8y-li>\n            </c8y-typeahead>\n            <c8y-messages\n            ><c8y-message\n              name="notExisting"\n              [text]="\'Select one of the existing device types.\' | translate"\n            ></c8y-message>\n            </c8y-messages>\n          </c8y-form-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<div class="col-xs-12 flex-grow no-gutter">\n  <div class="card-inner-scroll fit-h">\n    <div class="card-block p-t-0 p-b-0">\n      <c8y-list-group [ngClass]="{ \'dd-low\': (software$ | async)?.data.length < 10 }">\n        <c8y-li *c8yFor="let software of software$ | async; loadMore: \'auto\'">\n          <c8y-li-icon>\n            <i c8yIcon="c8y-tools"></i>\n          </c8y-li-icon>\n          <c8y-li-body class="content-flex-60">\n            <div class="col-5">\n              <div class="text-truncate" title="{{ software.name }}">\n                {{ software.name }}\n              </div>\n            </div>\n            <div class="col-3">\n              <div class="text-truncate" title="{{ \'Device type\' | translate }}: {{ getDeviceTypeTitle(software) }}">\n                <span class="text-label-small m-r-8" translate>\n                  Device type\n                </span>\n                <span *ngIf="software.c8y_Filter?.type; else noType">\n                  {{ software.c8y_Filter?.type }}\n                </span>\n                <ng-template #noType>\n                  <small><em class="text-muted" translate>Undefined`device type`</em></small>\n                </ng-template>\n              </div>\n            </div>\n            <div class="col-2">\n              <span *ngIf="isLegacy(software)" class="label label-warning flex-item-right-sm">\n                <span translate>Legacy</span>\n              </span>\n              <span *ngIf="!isLegacy(software)">\n                <span *ngIf="(getBaseVersionsCount$(software) | async) === null">\n                  <span class="label label-info">\n                    <i c8yIcon="circle-o-notch" class="icon-spin"></i>\n                  </span>\n                </span>\n                <span *ngIf="(getBaseVersionsCount$(software) | async) !== null">\n                  <span [ngPlural]="getBaseVersionsCount$(software) | async">\n                    <ng-template ngPluralCase="=0">\n                      <span class="label label-default flex-item-right-sm">\n                        <span translate>No versions</span>\n                      </span>\n                    </ng-template>\n                    <ng-template ngPluralCase="=1">\n                      <span class="label label-info"><span translate>1 version</span></span>\n                    </ng-template>\n                    <ng-template ngPluralCase="other">\n                      <span class="label label-info">\n                        <span\n                          ngNonBindable\n                          translate\n                          [translateParams]="{\n                            count: (getBaseVersionsCount$(software) | async) || \'\'\n                          }"\n                          >{{ count }} versions</span\n                        >\n                      </span>\n                    </ng-template>\n                  </span>\n                </span>\n              </span>\n            </div>\n          </c8y-li-body>\n          <c8y-li-collapse>\n            <c8y-list-group>\n              <c8y-li *c8yFor="let option of getVersions(software) | async">\n                <c8y-li-radio\n                  [name]="software.id"\n                  (onSelect)="selectSoftware({ option: option, software: software })"\n                ></c8y-li-radio>\n                <c8y-li-body class="content-flex-40 p-r-16">\n                  <div class="col-4">\n                    {{ option.c8y_Software.version }}\n                  </div>\n                  <div class="col-5">\n                    <div class="text-truncate" title="{{ option.c8y_Software.url }}">\n                      <span class="text-label-small m-r-4" translate> File </span>\n                      <span>{{ option.c8y_Software.url }}</span>\n                    </div>\n                  </div>\n                  <div class="col-3" *ngIf="option.id === software.selectedId">\n                    <div class="c8y-select-wrapper d-inline-block" style="margin: -4px 0;">\n                      <select\n                        id="action"\n                        class="form-control input-sm"\n                        [(ngModel)]="option.action"\n                        (change)="emitSoftware({ option: option, software: software })"\n                      >\n                        <option [ngValue]="\'install\'">{{ \'Install/update`software`\' | translate }}</option>\n                        <option [ngValue]="\'delete\'">{{ \'Remove`software`\' | translate }}</option>\n                      </select>\n                      <span></span>\n                    </div>\n                  </div>\n                </c8y-li-body>\n              </c8y-li>\n            </c8y-list-group>\n          </c8y-li-collapse>\n        </c8y-li>\n      </c8y-list-group>\n    </div>\n  </div>\n</div>\n'})],e)}(),g=function(){function e(){}return e.prototype.ngOnChanges=function(e){if(e.selectedItems){var t=this.deviceTypes;this.title=t&&t.length?t.join(", "):n.gettext("Undefined`device type`")}},Object.defineProperty(e.prototype,"selectedToInstall",{get:function(){return this.selectedItems.filter((function(e){return"install"===e.action}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"selectedToDelete",{get:function(){return this.selectedItems.filter((function(e){return"delete"===e.action}))},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"deviceTypes",{get:function(){return r.uniq(this.selectedItems.filter((function(e){return r.has(e,["software","c8y_Filter","type"])})).map((function(e){return e.software.c8y_Filter.type})))},enumerable:!0,configurable:!0}),f([t.Input()],e.prototype,"selectedItems",void 0),e=f([t.Component({selector:"c8y-confirm-software-selection-step",template:'<div class="card-block p-t-0 flex-no-shrink separator-bottom col-xs-12">\n  <div class="row p-b-16">\n    <div class="col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4">\n      <h4 class="text-center text-gray">{{ \'Confirm selection\' | translate }}</h4>\n    </div>\n  </div>\n</div>\n<div class="col-xs-12 flex-grow no-gutter">\n  <div class="card-inner-scroll fit-h">\n    <div class="card-block">\n      <div class="row p-b-16">\n        <div class="col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4">\n          <div class="text-truncate" title="{{ this.title }}">\n            <span class="legend form-block" translate>Device type</span>\n            <ng-container *ngIf="deviceTypes.length > 0; else noType">\n              <span *ngFor="let deviceType of deviceTypes; let last = last">{{ deviceType }}{{ last ? \'\' : \', \' }}</span>\n            </ng-container>\n            <ng-template #noType>\n              <em class="text-muted" translate>Undefined`device type`</em>\n            </ng-template>\n          </div>\n        </div>\n      </div>\n      <div class="row p-b-16" *ngIf="selectedToInstall.length">\n        <div class="col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4">\n          <span class="legend form-block" translate>Installations/updates`software`</span>\n          <c8y-list-group>\n            <c8y-li *ngFor="let selectedItem of selectedToInstall">\n              <c8y-li-icon>\n                <i c8yIcon="c8y-tools"></i>\n              </c8y-li-icon>\n              <c8y-li-body class="content-flex-10">\n                <div class="col-6 text-truncate" title="{{ selectedItem.software.name }}">\n                  {{ selectedItem.software.name }}\n                </div>\n                <div class="col-6 text-right">\n                  <span class="text-label-small m-r-4" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedItem.version.c8y_Software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n      <div class="row p-b-16" *ngIf="selectedToDelete.length">\n        <div class="col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4">\n          <span class="legend form-block" translate>Removals`software`</span>\n          <c8y-list-group>\n            <c8y-li *ngFor="let selectedItem of selectedToDelete">\n              <c8y-li-icon>\n                <i c8yIcon="c8y-tools"></i>\n              </c8y-li-icon>\n              <c8y-li-body class="content-flex-10">\n                <div class="col-6">\n                  {{ selectedItem.software.name }}\n                </div>\n                <div class="col-6 text-right">\n                  <span class="text-label-small m-r-8" translate>\n                    Version\n                  </span>\n                  <span>\n                    {{ selectedItem.version.c8y_Software.version }}\n                  </span>\n                </div>\n              </c8y-li-body>\n            </c8y-li>\n          </c8y-list-group>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n'})],e)}(),h=function(e){function o(t,o){var s=e.call(this)||this;return s.modal=t,s.translate=o,s.descriptionTemplateSingle=n.gettext("Update software to: {{ name }} (version {{ version }})"),s.descriptionTemplateOneOther=n.gettext("Update software to: {{ name }} (version {{ version }}) and one other"),s.descriptionTemplateMultiple=n.gettext("Update software to: {{ name }} (version {{ version }}) and {{ count }} others"),s.selectedSoftware=[],s}return function(e,t){function n(){this.constructor=e}y(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(o,e),o.prototype.onSoftwareSelected=function(e){this.selectedSoftware=this.selectedSoftware.filter((function(t){return t.software.id!==e.software.id})),this.selectedSoftware.push(e)},o.prototype.confirmSoftwareSelection=function(e){return d(this,void 0,void 0,(function(){var t;return u(this,(function(o){switch(o.label){case 0:if(t=this.getUniqueDeviceTypes(),this.deviceTypes=t,!(t.length>1))return[3,5];o.label=1;case 1:return o.trys.push([1,3,,4]),[4,this.modal.confirm(n.gettext("Selected software for various device types"),n.gettext("Operation may fail due to unsupported software. Do you want to proceed?"),n.Status.WARNING,{ok:n.gettext("Confirm"),cancel:n.gettext("Cancel")})];case 2:return o.sent(),e.stepper.next(),[3,4];case 3:return o.sent(),this.selectedSoftware=[],this.selectSoftware.resetSelection(),[3,4];case 4:return[3,6];case 5:e.stepper.next(),o.label=6;case 6:return[2]}}))}))},o.prototype.retrieveOperationPrototype=function(){var e,t=this.selectedSoftware.map((function(e){return{name:e.software.name,version:e.version.c8y_Software.version,url:e.version.c8y_Software.url,action:e.action}})),o={name:t[0].name,version:t[0].version,count:t.length-1};switch(t.length){case 1:e=this.translate.instant(this.descriptionTemplateSingle,o);break;case 2:e=this.translate.instant(this.descriptionTemplateOneOther,o);break;default:e=this.translate.instant(this.descriptionTemplateMultiple,o)}return{name:n.gettext("Software update"),prototype:{description:e,c8y_SoftwareUpdate:t}}},o.prototype.getUniqueDeviceTypes=function(){return r.uniq(this.selectedSoftware.map((function(e){return e.software.c8y_Filter&&e.software.c8y_Filter.type})).filter((function(e){return!!e})))},o.ctorParameters=function(){return[{type:n.ModalService},{type:s.TranslateService}]},f([t.ViewChild(m,{static:!1})],o.prototype,"selectSoftware",void 0),o=f([t.Component({selector:"c8y-stepper-bulk-type-software",template:'<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep="\n      \'Select software\' | translate; \n      completed: !!selectedSoftware.length;\n      buttonsDisabled: !selectedSoftware.length; \n      onNext: confirmSoftwareSelection.bind(this)"\n  >\n    <c8y-select-software-step\n      (software)="onSoftwareSelected($event)"\n      class="d-contents"\n    ></c8y-select-software-step>\n  </ng-container>\n  <ng-container *customStep="\'Confirm selected software\' | translate">\n    <c8y-confirm-software-selection-step\n      class="d-contents"\n      [selectedItems]="selectedSoftware"\n    ></c8y-confirm-software-selection-step>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n'})],o)}(l.BaseStepperComponent),w={type:p.BulkOperationType.SOFTWARE,c8yIcon:"c8y-tools",name:n.gettext("Software update"),path:p.baseUrl+"software",component:h,fragments:["c8y_SoftwareList","c8y_SoftwareUpdate"],selected:!1},b=function(){function e(){}return e=f([t.NgModule({declarations:[h,g,m],imports:[n.CoreModule,n.FormsModule,c.ReactiveFormsModule,l.BulkOperationStepperModule,o.RepositoryModule],providers:[{provide:p.HOOK_LIST_BULK_TYPE,useValue:w,multi:!0}],entryComponents:[h],exports:[h]})],e)}();e.ConfirmSoftwareSelectionStepComponent=g,e.SelectSoftwareStepComponent=m,e.StepperBulkTypeSoftwareComponent=h,e.StepperBulkTypeSoftwareModule=b,e.ɵ0=w,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=c8y-ngx-components-operations-stepper-bulk-type-software.umd.min.js.map