{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@c8y/ngx-components/core/common/extension-hooks.ts","ng://@c8y/ngx-components/core/common/state-service.abstract.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.service.ts","ng://@c8y/ngx-components/core/action-bar/action-bar-item.component.ts","ng://@c8y/ngx-components/core/common/ApplicationOptions.ts","ng://@c8y/ngx-components/core/common/options.service.ts","ng://@c8y/ngx-components/core/common/throttle.decorator.ts","ng://@c8y/ngx-components/core/common/ui-state.service.ts","ng://@c8y/ngx-components/core/i18n/languages.ts","ng://@c8y/ngx-components/core/i18n/locale.path.ts","ng://@c8y/ngx-components/core/i18n/patterns-message.hook.ts","ng://@c8y/ngx-components/core/i18n/pattern-messages.service.ts","ng://@c8y/ngx-components/core/i18n/missing-translation-custom.handler.ts","ng://@c8y/ngx-components/core/i18n/gettext.ts","ng://@c8y/ngx-components/core/i18n/pattern-messages.data.ts","ng://@c8y/ngx-components/core/i18n/cached-locale-dictionary.service.ts","ng://@c8y/ngx-components/core/i18n/translate.loader.ts","ng://@c8y/ngx-components/core/i18n/translate.parser.ts","ng://@c8y/ngx-components/core/i18n/c8y-translate.directive.ts","ng://@c8y/ngx-components/core/i18n/c8y-translate.pipe.ts","ng://@c8y/ngx-components/core/i18n/c8y-translate.module.ts","ng://@c8y/ngx-components/core/i18n/i18n.module.ts","ng://@c8y/ngx-components/core/i18n/parse-module.ts","ng://@c8y/ngx-components/core/i18n/load-locale.ts","ng://@c8y/ngx-components/core/i18n/translate.service.ts","ng://@c8y/ngx-components/core/common/date.pipe.ts","ng://@c8y/ngx-components/core/common/load-more.component.ts","ng://@c8y/ngx-components/core/common/forOf.directive.ts","ng://@c8y/ngx-components/core/common/humanize-app-name.pipe.ts","ng://@c8y/ngx-components/core/common/humanize.pipe.ts","ng://@c8y/ngx-components/core/common/icon.directive.ts","ng://@c8y/ngx-components/core/common/memoize.decorator.ts","ng://@c8y/ngx-components/core/common/permissions.service.ts","ng://@c8y/ngx-components/core/common/if-allowed.directive.ts","ng://@c8y/ngx-components/core/common/loading.component.ts","ng://@c8y/ngx-components/core/common/map-function.pipe.ts","ng://@c8y/ngx-components/core/common/outlet.directive.ts","ng://@c8y/ngx-components/core/common/progress-bar.component.ts","ng://@c8y/ngx-components/core/common/shorten-user-name.pipe.ts","ng://@c8y/ngx-components/core/common/tenant-ui.service.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences-storage-local.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences-store-inventory.ts","ng://@c8y/ngx-components/core/common/user-preferences/user-preferences.service.ts","ng://@c8y/ngx-components/core/common/common.module.ts","ng://@c8y/ngx-components/core/common/status.model.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.component.ts","ng://@c8y/ngx-components/core/action-bar/action-bar.module.ts","ng://@c8y/ngx-components/core/action/action.service.ts","ng://@c8y/ngx-components/core/action/action-outlet.component.ts","ng://@c8y/ngx-components/core/action/action.component.ts","ng://@c8y/ngx-components/core/action/action.module.ts","ng://@c8y/ngx-components/core/alert/alert.service.ts","ng://@c8y/ngx-components/core/alert/alert-details.component.ts","ng://@c8y/ngx-components/core/alert/alert.component.ts","ng://@c8y/ngx-components/core/alert/alert-outlet.component.ts","ng://@c8y/ngx-components/core/alert/alert-text.component.ts","ng://@c8y/ngx-components/core/alert/alert.module.ts","ng://@c8y/ngx-components/core/navigator/navigator-node.ts","ng://@c8y/ngx-components/core/navigator/navigator-node-root.ts","ng://@c8y/ngx-components/core/navigator/navigator.service.ts","ng://@c8y/ngx-components/core/header/header.service.ts","ng://@c8y/ngx-components/core/tabs/tabs.service.ts","ng://@c8y/ngx-components/core/bootstrap/bootstrap.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb-item.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb-outlet.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.service.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.component.ts","ng://@c8y/ngx-components/core/breadcrumb/breadcrumb.module.ts","ng://@c8y/ngx-components/core/navigator/navigator-entry.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-icon.component.ts","ng://@c8y/ngx-components/core/modal/popover-confirm.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-node.component.ts","ng://@c8y/ngx-components/core/header/right-drawer/right-drawer.component.ts","ng://@c8y/ngx-components/core/header/title/title-outlet.component.ts","ng://@c8y/ngx-components/core/header/title/title.component.ts","ng://@c8y/ngx-components/core/search/search.service.ts","ng://@c8y/ngx-components/core/user/user-menu.service.ts","ng://@c8y/ngx-components/core/docs/defaults.items.ts","ng://@c8y/ngx-components/core/docs/docs.models.ts","ng://@c8y/ngx-components/core/docs/docs.service.ts","ng://@c8y/ngx-components/core/header/header-bar/header-bar.component.ts","ng://@c8y/ngx-components/core/header/application/app-switcher.component.ts","ng://@c8y/ngx-components/core/header/application/app-icon.component.ts","ng://@c8y/ngx-components/core/navigator/navigator-outlet.component.ts","ng://@c8y/ngx-components/core/login/login.model.ts","ng://@c8y/ngx-components/core/modal/modal-confirm.component.ts","ng://@c8y/ngx-components/core/modal/modal.component.ts","ng://@c8y/ngx-components/core/modal/modal.service.ts","ng://@c8y/ngx-components/core/modal/modal.module.ts","ng://@c8y/ngx-components/core/navigator/navigator.module.ts","ng://@c8y/ngx-components/core/bootstrap/cookie-banner/cookie-banner.service.ts","ng://@c8y/ngx-components/core/product-experience/gainsight.service.ts","ng://@c8y/ngx-components/core/product-experience/product-experience.directive.ts","ng://@c8y/ngx-components/core/product-experience/product-experience.module.ts","ng://@c8y/ngx-components/core/search/search-outlet.component.ts","ng://@c8y/ngx-components/core/search/search.component.ts","ng://@c8y/ngx-components/core/search/highlight.component.ts","ng://@c8y/ngx-components/core/search/search-result-empty.component.ts","ng://@c8y/ngx-components/core/search/search.module.ts","ng://@c8y/ngx-components/core/user/user-menu-item.component.ts","ng://@c8y/ngx-components/core/user/user-edit-modal.component.ts","ng://@c8y/ngx-components/core/login/login.service.ts","ng://@c8y/ngx-components/core/authentication/password-confirm-modal.component.ts","ng://@c8y/ngx-components/core/authentication/password.service.ts","ng://@c8y/ngx-components/core/user/user-totp-setup.component.ts","ng://@c8y/ngx-components/core/user/user-edit.component.ts","ng://@c8y/ngx-components/core/user/user-menu-outlet.component.ts","ng://@c8y/ngx-components/core/authentication/password-check-list.component.ts","ng://@c8y/ngx-components/core/authentication/password-confirm.directive.ts","ng://@c8y/ngx-components/core/authentication/password-strength-checker.service.ts","ng://@c8y/ngx-components/core/authentication/password-strength.component.ts","ng://@c8y/ngx-components/core/authentication/new-password.component.ts","ng://@c8y/ngx-components/core/forms/phone-validation.directive.ts","ng://@c8y/ngx-components/core/forms/validation-pattern.ts","ng://@c8y/ngx-components/core/forms/default-validation.directive.ts","ng://@c8y/ngx-components/core/forms/min-validation.directive.ts","ng://@c8y/ngx-components/core/forms/max-validation.directive.ts","ng://@c8y/ngx-components/core/forms/message.directive.ts","ng://@c8y/ngx-components/core/forms/messages.component.ts","ng://@c8y/ngx-components/core/forms/form-group.component.ts","ng://@c8y/ngx-components/core/forms/input-group-list.component.ts","ng://@c8y/ngx-components/core/forms/input-group-list-container.directive.ts","ng://@c8y/ngx-components/core/forms/json-validation-prettifier.directive.ts","ng://@c8y/ngx-components/core/forms/text-area-row-height.directive.ts","ng://@c8y/ngx-components/core/forms/required-input-placeholder.directive.ts","ng://@c8y/ngx-components/core/forms/ip-range-input-list.component.ts","ng://@c8y/ngx-components/core/forms/filter-input.component.ts","ng://@c8y/ngx-components/core/forms/emails-validator.directive.ts","ng://@c8y/ngx-components/core/forms/forms.module.ts","ng://@c8y/ngx-components/core/authentication/totp-challenge.component.ts","ng://@c8y/ngx-components/core/authentication/sms-challenge.component.ts","ng://@c8y/ngx-components/core/authentication/totp-setup.component.ts","ng://@c8y/ngx-components/core/drop-area/drop-area.component.ts","ng://@c8y/ngx-components/core/authentication/provide-phone-number.component.ts","ng://@c8y/ngx-components/core/authentication/authentication.module.ts","ng://@c8y/ngx-components/core/user/user-totp-revoke.component.ts","ng://@c8y/ngx-components/core/user/user.module.ts","ng://@c8y/ngx-components/core/header/header.module.ts","ng://@c8y/ngx-components/core/login/change-password.component.ts","ng://@c8y/ngx-components/core/login/credentials.component.ts","ng://@c8y/ngx-components/core/login/login.component.ts","ng://@c8y/ngx-components/core/login/recover-password.component.ts","ng://@c8y/ngx-components/core/login/totp-auth.component.ts","ng://@c8y/ngx-components/core/login/strength-validator-service.ts","ng://@c8y/ngx-components/core/login/password-strength-validator.directive.ts","ng://@c8y/ngx-components/core/login/login.module.ts","ng://@c8y/ngx-components/core/tabs/tab.component.ts","ng://@c8y/ngx-components/core/tabs/tabs-outlet.component.ts","ng://@c8y/ngx-components/core/tabs/conditional-tabs-outlet.component.ts","ng://@c8y/ngx-components/core/tabs/tabs.module.ts","ng://@c8y/ngx-components/core/bootstrap/cookie-banner/cookie-banner-preferences-modal/cookie-banner-preferences-modal.component.ts","ng://@c8y/ngx-components/core/bootstrap/cookie-banner/cookie-banner.component.ts","ng://@c8y/ngx-components/core/bootstrap/bootstrap.module.ts","ng://@c8y/ngx-components/core/drop-area/drop-area.module.ts","ng://@c8y/ngx-components/core/router/router.models.ts","ng://@c8y/ngx-components/core/file-picker/file-picker.component.ts","ng://@c8y/ngx-components/core/file-picker/file-picker.module.ts","ng://@c8y/ngx-components/core/date-picker/date-picker.component.ts","ng://@c8y/ngx-components/core/date-picker/date-picker.module.ts","ng://@c8y/ngx-components/core/router/router-tabs.resolver.ts","ng://@c8y/ngx-components/core/router/view-context.service.ts","ng://@c8y/ngx-components/core/router/context-route.service.ts","ng://@c8y/ngx-components/core/router/router.service.ts","ng://@c8y/ngx-components/core/router/context-route.component.ts","ng://@c8y/ngx-components/api/api.service.ts","ng://@c8y/ngx-components/api/data.module.ts","ng://@c8y/ngx-components/core/router/context-route.guard.ts","ng://@c8y/ngx-components/core/router/empty.component.ts","ng://@c8y/ngx-components/core/router/router.module.ts","ng://@c8y/ngx-components/core/device-status/device-availability.ts","ng://@c8y/ngx-components/core/device-status/device-status.component.ts","ng://@c8y/ngx-components/core/device-status/device-status.module.ts","ng://@c8y/ngx-components/core/docs/guide-href.directive.ts","ng://@c8y/ngx-components/core/docs/guide-docs.component.ts","ng://@c8y/ngx-components/core/docs/docs.module.ts","ng://@c8y/ngx-components/core/dynamic-forms/array/array.type.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/checkbox/checkbox.type.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/file/file.type.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/form-field/form-field.wrapper.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/input/input.type.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/object/object.type.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/radio/radio.type.component.ts","ng://@c8y/ngx-components/core/dynamic-forms/dynamic-forms-ui-theme.module.ts","ng://@c8y/ngx-components/core/dynamic-forms/i18n/translate.extension.ts","ng://@c8y/ngx-components/core/dynamic-forms/i18n/i18n.module.ts","ng://@c8y/ngx-components/core/dynamic-forms/json-schema/c8y-json-schema.service.ts","ng://@c8y/ngx-components/core/dynamic-forms/validation/validation-config.factory.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.model.ts","ng://@c8y/ngx-components/core/dynamic-forms/validation/validation.module.ts","ng://@c8y/ngx-components/core/dynamic-forms/dynamic-forms.module.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.model.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.service.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.component.ts","ng://@c8y/ngx-components/core/dynamic-component/dynamic-component.module.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-action.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-title.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child-change.ts","ng://@c8y/ngx-components/core/dashboard/dashboard-child.component.ts","ng://@c8y/ngx-components/core/dashboard/widgets-dashboard.component.ts","ng://@c8y/ngx-components/core/dashboard/dashboard.module.ts","ng://@c8y/ngx-components/core/stepper/stepper-icon.directive.ts","ng://@c8y/ngx-components/core/stepper/stepper.component.ts","ng://@c8y/ngx-components/core/stepper/stepper-progress.component.ts","ng://@c8y/ngx-components/core/stepper/stepper-buttons.component.ts","ng://@c8y/ngx-components/core/stepper/stepper.module.ts","ng://@c8y/ngx-components/core/list-group/list-item-action.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-collapse.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-footer.component.ts","ng://@c8y/ngx-components/core/list-group/list-item.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-body.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-radio.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-timeline.component.ts","ng://@c8y/ngx-components/core/list-group/list-group.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-icon.component.ts","ng://@c8y/ngx-components/core/list-group/list-item-checkbox.component.ts","ng://@c8y/ngx-components/core/list-group/list-group.module.ts","ng://@c8y/ngx-components/core/audit-log/audit-log.component.ts","ng://@c8y/ngx-components/core/audit-log/audit-log.module.ts","ng://@c8y/ngx-components/core/data-grid/column/cell-renderer.ts","ng://@c8y/ngx-components/core/data-grid/column/filtering-form-renderer.ts","ng://@c8y/ngx-components/core/data-grid/column/column.directive.ts","ng://@c8y/ngx-components/core/data-grid/grid-data-source.ts","ng://@c8y/ngx-components/core/select-modal/select-modal.model.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.component.ts","ng://@c8y/ngx-components/core/data-grid/column/cell-renderer.component.ts","ng://@c8y/ngx-components/core/data-grid/column/filtering-form-renderer.component.ts","ng://@c8y/ngx-components/core/data-grid/data-grid.module.ts","ng://@c8y/ngx-components/core/help/help.component.ts","ng://@c8y/ngx-components/core/help/help.module.ts","ng://@c8y/ngx-components/core/realtime/realtime-button.component.ts","ng://@c8y/ngx-components/core/realtime/realtime.module.ts","ng://@c8y/ngx-components/core/select-modal/select-modal.component.ts","ng://@c8y/ngx-components/core/select-modal/select-modal-filter.pipe.ts","ng://@c8y/ngx-components/core/select-modal/select-modal.module.ts","ng://@c8y/ngx-components/core/select/select.component.ts","ng://@c8y/ngx-components/core/select/typeahead.component.ts","ng://@c8y/ngx-components/core/select/select.module.ts","ng://@c8y/ngx-components/core/range-display/range-display.component.ts","ng://@c8y/ngx-components/core/range-display/range-display.module.ts","ng://@c8y/ngx-components/core/core.module.ts","ng://@c8y/ngx-components/core/quicklink/quick-link.component.ts","ng://@c8y/ngx-components/core/quicklink/quick-link.module.ts","ng://@c8y/ngx-components/core/provider-configuration/provider-configuration-hook.ts","ng://@c8y/ngx-components/core/provider-configuration/provider-configuration-node.factory.ts","ng://@c8y/ngx-components/core/provider-configuration/service/provider-configuration.service.ts","ng://@c8y/ngx-components/core/provider-configuration/service/provider-definitions.service.ts","ng://@c8y/ngx-components/core/provider-configuration/provider-configuration.component.ts","ng://@c8y/ngx-components/core/provider-configuration/provider-configuration-route.factory.ts","ng://@c8y/ngx-components/core/provider-configuration/provider-configuration-tab.factory.ts","ng://@c8y/ngx-components/core/provider-configuration/provider-configuration.module.ts","ng://@c8y/ngx-components/core/realtime/realtime.model.ts","ng://@c8y/ngx-components/core/realtime/realtime.service.ts","ng://@c8y/ngx-components/core/realtime/operation-bulk-realtime.service.ts","ng://@c8y/ngx-components/core/realtime/managed-object-realtime.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","__values","o","m","__read","ar","error","__spread","concat","fromTrigger","router","refresh","factories","events","pipe","filter","evt","NavigationEnd","merge","startWith","switchMap","fromFactories","withFirstEmpty","isArray","of","defer","factoryObservables","resolveInjectedFactories","map","factoryResult","observable","isObservable","forceObservable","from","withEmptyFirst","race","item","toObservable","isFunction","get","getActivatedRoute","combineLatest","results","sortByPriority","flatten","stateToFactory","componentsState","components$","componentSet","items","sortBy","routerState","root","route","firstChild","StateService","mappedProperty","state$","distinctUntilChanged","emitNewState","state","HOOK_ACTION_BAR","InjectionToken","ActionBarService","_super","injector","_this","refreshTrigger","Subject","BehaviorSubject","Set","items$","shareReplay","tslib_1.__extends","add","remove","delete","Injector","Router","Injectable","providedIn","ActionBarItemComponent","actionBarService","placement","priority","itemClass","ngAfterViewInit","viewInitTimeout","setTimeout","ngOnDestroy","clearTimeout","tslib_1.__decorate","Input","ViewChild","static","Component","selector","template","ApplicationOptions","HOOK_OPTIONS","OptionsService","options","systemOptionsService","tenantOptionService","setupOptions","optionKey","defaultValue","camelCase","set","getSupportUrl","getTenantOption","url","_c","isUndefined","supportUrl","_a","getSystemOption","_b","getActivateSupportUser","category","getOptionFromService","forEach","optionMap","keys","service","detail","data","parseOptionRawValue","rawValue","JSON","parse","Optional","type","Inject","args","SystemOptionsService","TenantOptionsService","tslib_1.__param","throttle","wait","fnName","descriptor","fn","_i","throttledFnName","_throttle","AppStateService","applicationService","apiService","fetchClient","tenantLoginOptionsService","app","name","contextPath","getCurrentContextPath","lang","langs","getLangs","langsDetail","languages","loginOptions","activateSupportUserAvailable","undefined","versions","backend","ui","ngx","hidePowered","isLoading","showRightDrawer","rightDrawer","loginExtraLink","newsletter","currentSupportUserName","currentUser","currentTenant","calls","test","phase","scan","count","subscribe","assignApplicationKeyToDefaultHeaders","isDevMode","defaultHeaders","X-Cumulocity-Application-Key","k","version","ng1","loadManifest","application","manifest","loadDefaultOptions","refreshLoginOptions","isApplicationAvailable","listByUser","pageSize","some","setUser","userInfo","supportUserName","user","match","window","location","pathname","_d","showIncompatibleVersionsError","ex","uiVersion","backendVersion","uiVersionArray","replace","split","Number","beVersionArray","multiplier","Math","pow","ceil","log10","max","sumReducer","acc","cur","calculateVersionMapper","curr","idx","reduce","errorContent","console","log","ApplicationService","ApiService","FetchClient","TenantLoginOptionsService","trailing","LANGUAGES","LOCALE_PATH","HOOK_PATTERN_MESSAGES","PatternMessagesService","patterns","pipes","absoluteDate","date","formatDate","translateService","currentLang","translate","instant","each","pattern","message","translation","translateWithPatterns","translatedMessage","patternCfg","globalMatch","globalRegExp","RegExp","exec","localMatch","placeholderValues","mapValues","placeholders","placeholder","expr","capture","replacement","translateWithParams","params","defaultLang","compiler","translations","store","defaultTranslations","originalKey","gettext","originalValue","interpolateParams","noPatternMessages","pipeRegex","paramName","pipeName","compile","MissingTranslationCustomHandler","parser","patternMessagesService","cache","handle","messageKey","getFromCache","patternMessageTranslation","getPatternMessageTranslation","interpolate","addToCache","getCacheKey","stringify","TranslateParser","str","bulkOperationAuditLogTextPlaceholders","updatesList","status='(.+?)'","status","generalStatus='(.+?)'","generalStatus","progress='(.+?)'","progress","note=(.+?)","note","MESSAGES","^Access is denied$","^Alarm created$","^Alarm updated$","^API is not available with the new domain$","^Application with given name already exist$","^Application with id (.+?) is already assigned to the tenant (.+?)$","tenant","^Apply software changes: (.+?)\\.?$","softwareChanges","install \"(.+?)\" \\(version: (.+?)\\)","softwareName","softwareVersion","install \"([^\"]+)\"(?! \\(version: .+?\\))","delete \"(.+?)\" \\(version: (.+?)\\)","delete \"([^\"]+)\"(?! \\(version: .+?\\))","^Assign device profile (.+?) to device (.+?)$","profileName","deviceName","^(.+)pplication for tenant (.+) with properties \\( (.+?) \\) already exists$","valuesList","^Authentication failed! : User account is locked$","^Availability monitoring record$","^Can not activate a certificate which is either expired or not yet valid$","^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.","fingerprint","^Cannot change password. : Provided token does not exist.$","^Cannot deploy module (.*)$","errorMessage","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) \\[([\\S\\s]+?)\\]$","moduleName","expression","incorrectExpression","line","column","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+) near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$","keyword","^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\d+) column (\\d+), please check the where clause \\[([\\S\\s]+?)\\]$","^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\((.+?)\\) \\[([\\S\\s]+?)\\]$","scriptName","scriptDialect","missingSyntax","affectedStatement","^Cannot execute bulk operation on empty group. Group with id='(\\d+?)' doesn't have child assets.$","groupId","^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\d+?)' doesn't have child assets$","^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$","failureReason","^Cannot reschedule bulk operation. All its operations are successful$","^Cannot reset user password : Cannot find user with such email.$","^Cannot update/delete application binary via this endpoint$","^Can't delete user because it is used by another managed object$","^Cep module created$","^Cep module updated$","^Cep module deleted$","^Cep module \"(.+?)\" created$","^Cep module \"(.+?)\" updated$","^Cep module \"(.+?)\" deleted$","^Command state is invalid: (.+)$","violations","(\\w+?) - may not be null","field","^Could not connect to endpoint (.+)\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\. If you expected that key, please remove the previous one from configuration to allow for connection\\.$","endpointName","keyType","host","port","^Could not login to ssh server on endpoint \"(.+)\"\\. Provided credential for user \"(.+)\" is incorrect\\.$","userName","^Could not save object remoteAccessUpdate: (.+)$","errorMessages","Could not recognize host-key format","Could not recognize key-pair format","^Could not update user. : Error persisting user (.+?)!$","username","ˆCreate bulk operation$","^Create bulk operation: (.+)$","^Creation ramp must be greater than (\\d+?)$","minSeconds","^Created container$","^Created pod: (.+)$","imageName","^CSV file contained empty dataset$","^Cycle detected for route (.+?)!$","^Data broker processing is currently overloaded and may stop forwarding your data\\. Please contact support\\.$","^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\. Please contact support\\.$","^Delete bulk operation$","^Delete bulk operation: (.+)$","^Device id '(.+?)' contains '(.+?)' character which is not permitted.$","deviceId","invalidCharacter","^Device name: '(.+?)', alarm text: '(.+?)'$","alarmText","^Display name$","^Domain name in uploaded certificate differs from the one in use$","^Domain name is already in use by another tenant!$","^Duplicated connector for instanceUrl (.+?)!$","targetUrl","^Duplicated connector for name (.+?)!$","^Entry is outside of the target dir: (.+)$","path","^Error during password validation. : Password must have at least (\\d+?) characters and no more than (\\d+?) and must contain only Latin1 characters.$","minCharactersCount","maxCharactersCount","^Error during password validation. : Your password has been used already. Choose another.$","^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\[([\\S\\s]+?)\\]$","statementNumber","^External id not found; external id = ID \\[type=(.+?), value=(.+?)\\]$","^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\d+)$","applicationId","^Http status code: 404\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}","^Failed to delete application.  : Cannot remove application assigned to other tenants.$","^Failed to extract certificate from PKCS12$","^Failed to update domain at the platform$","^Finding device data from database failed : No managedObject for id '(.+?)'!$","^Following mandatory fields should be included: (.+?)$","fields","^Global Role updated$","^Global Role (.+?) updated$","^Global Role (.+?) updated: (.+)$","applications \\[([^\\]]+?)\\] added","list","applications \\[([^\\]]+?)\\] removed","roles \\[([^\\]]+?)\\] added","roles \\[([^\\]]+?)\\] removed","^Global Roles$","^Operation updated: (.+)$","description='(.+?)'","description","device name='(.+?)'","failure reason='(.+?)'","^ID \\[type=(.+?), value=(.+?)\\] was already bound to different Global ID.$","^Invalid credentials! : Bad credentials$","^Invalid credentials! : No phone number provided$","^Inventory Role removed$","^Inventory Role (.+?) removed","^Inventory Role updated$","^Inventory Role (.+?) updated","^I/O error: Connection refused; nested exception is Connection refused : Connection refused","^I/O error: Read timed out; nested exception is Read timed out : Read timed out","^Log file requested$","^Managed object deleted$","^Managed object \"(.+?)\" deleted$","^Maximum file size exceeded$","^Message with ID (.+?) doesn't exist in smart rest template (.+?)$","messageId","templateId","^NewDeviceRequest for id = (.+?) already exists.$","id","^No communication with device since (.+?)$","timestamp","^No data received from device within required interval.$","^No LoRa provider settings are found. Please configure the connectivity settings.$","^Not within any context!$","^Maximum age cannot be bigger than 10 years.$","^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\d+) characters.$","maxLength","^Microservice not available.*$","^Operation created$","^Operation updated$","^Operation created: status='(.+?)'.","^Option created$","^Option \"(.+?)\" created$","option","^Option deleted$","^Option \"(.+?)\" deleted$","^Owner field error. : Cannot introduce cyclic dependency.","^Password change is temporary blocked.$","^Password cipher does not match","^Platform application cannot be added to, nor removed from any tenant.$","^Private key must be provided in KEY_PAIR credentials$","^Private key cipher does not match","^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$","protocol","credentialsType","^pulling image \"(.+)\"$","^Real-time event processing is currently overloaded and may stop processing your events\\. Please contact support\\.$","^Resource ID \\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\] for this request not found.$","^Retrieve configuration snapshot from device (.+?)","^Retrieve (.+?) configuration snapshot from device (.+?)","configurationType","^Scaled up replica set (.+) to (\\d+)$","replicaSetName","scaleNumber","^Send configuration snapshot (.+?) of configuration type (.+?) to device (.+?)","snapshotName","^Send configuration snapshot (.+?) to device (.+?)","^Simulator state is invalid: (.+)$","(\\w+?) - must be less than or equal to (\\d+)","maxValue","(\\w+?) - should not contain null values","^Smart rest template (.+?) doesn't exist$","^Smart rule created$","^Smart rule updated$","^Smart rule enabled$","^Smart rule disabled$","^Smart rule deleted$","^Smart rule \"(.+?)\" created$","^Smart rule \"(.+?)\" updated$","^Smart rule \"(.+?)\" enabled$","^Smart rule \"(.+?)\" disabled$","^Smart rule \"(.+?)\" deleted$","^Started container$","^Successfully assigned (.+) to (.+)$","address","^Successfully pulled image \"(.+)\"$","^Tenant creation failed. : Tenant with given id already exists.$","^Tenant id cannot be a reserved sql keyword \"(.+?)\".$","tenantId","^Tenant \"(.+?)\" activated$","^Tenant (.+?) has sub-tenants, please remove them first!$","^Tenant activated$","^Tenant \"(.+?)\" created$","^Tenant created$","^Tenant \"(.+?)\" deleted$","^Tenant deleted$","^Tenant \"(.+?)\" suspended$","^Tenant suspended$","^Tenant \"(.+?)\" updated: (.+?)$","properties","^Tenant updated$","^Too Many Requests$","^User alias equals username '(.+)'$","^User created$","^User (.+?) created$","^User deleted$","^User (.+?) deleted$","^User updated$","^User (.+?) updated: (.+)$","delegatedBy='(.+?)'","delegate","owner='(.+?)'","owner","inventory assignment \\[(.+?)\\] added","inventoryAssignment","inventory assignment \\[(.+?)\\] removed","applications \\[(.+?)\\] added$","applicationsList","applications \\[(.+?)\\] removed$","global roles \\[(.+?)\\] added$","globalRolesList","global roles \\[(.+?)\\] removed$","^User with username '(.+?)' already exists! : Duplicated: (.+?)$","^User with username or alias '(.+)' already exists! : Duplicated: (.+)$","usernameOrAlias","^User with email '(.+?)' already exists! : Duplicated: (.+?)$","email","^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$","^unable to find option with given key (.+?) : There is no system property for key (.+?)$","^Write failed with error code 16733 and error message 'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"'$","^Write failed with error code 17280 and error message 'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }'$","^You have reached devices limit. No more devices can be registered.$","^(.+) succeeded for volume \"(.+)\"","operation","volume","^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\[(.+)\\] for statement '(.+)': (.+) : (.+)$","methodName","classPath","parameters","statement","exceptionType","exceptionMessage","^No nodes are available that match all of the predicates: (.+).$","predicates","^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$","requestMethod","uri","^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\(Client.Timeout exceeded while awaiting headers\\)$","^Error syncing pod$","^Failed create pod sandbox.$","^Exception on tenant (.+) in statement '(.+)': Http status code: (\\d+) \\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\}$","httpStatusCode","^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$","^Added new child device to \"(.+)\" \\(ID: (.+)\\).$","parentDeviceName","parentDeviceId","^Updated child device of \"(.+)\" \\(ID: (.+)\\).$","^Added child device \"(.+)\" \\(ID: (.+)\\).$","^Removed child device \"(.+)\" \\(ID: (.+)\\).$","^Change value of \"(.+)\" to (.+) (.+).$","unit","^Change value of \"(.+)\" to (.+).$","^Change status of \"(.+)\" to \"(.+)\".$","^Send message \"(.+)\".$","^Close relay (.+).$","number","^Open relay (.+).$","^Change trace status to (.+).$","^Change relay status to (.+).$","^Closing relay (.+).$","^Opening relay (.+).$","^Update bulk operation$","^Update bulk operation: (.+)$","^Update firmware to: \"?(.+?)\"? \\(version: (.+)\\)\\.?$","^Update firmware to: \"?(.+?)\"?\\.?$","^Update configuration to (.+).$","^Apply device profile: (.+).?$","^Execute generic command: (.+).?$","command","^Failed to refresh application. : Cannot refresh non local-hosted application.$","^Failed to refresh application. : Cannot refresh application without active version id.$","^Scaled down replica set (.+) to (\\d+)$","^Deleted pod: (.+)$","^Container image \"(.+)\" already present on machine$","^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$","CachedLocaleDictionaryService","cachedDictionary","TranslateCustomLoader","http","optionsService","cachedLocaleDictionaryService","getTranslation","langsDetails","tap","dictionary","getDictionaryWithTrimmedKeys","catchError","mapKeys","trimTranslationKey","HttpClient","trim","TranslateParserCustom","getValue","trimmedKey","translated","TranslateDefaultParser","C8yTranslateDirective","element","_ref","htmlUpdateEvent","EventEmitter","checkNodes","forceUpdate","isElementSimpleTextType","isElementInnerHtmlEmpty","isLookupKeyMissing","_elementRef","nativeElement","lookupKey","getLookupKey","translateAndUpdateHtmlContent","emit","complete","innerHTML","childNodes","nodeType","lookupKeyExist","_translateService","currentParams","TranslateService","ElementRef","ChangeDetectorRef","Directive","TranslateDirective","C8yTranslatePipe","Pipe","pure","TranslatePipe","C8yTranslateModule","NgModule","declarations","exports","TranslateModule","require","angularLocalesLanguageMap","en","en-EN","translateLoaderFactory","httpClient","localePath","localePathFactory","languagesFactory","localeId","appStateService","getAngularLocalesLanguageString","toLowerCase","toString","language","I18nModule","providers","provide","LOCALE_ID","useFactory","deps","useValue","multi","TranslateLoader","TranslateCompiler","useClass","TranslateFakeCompiler","MissingTranslationHandler","TranslateStore","NgxTranslateService","USE_STORE","USE_DEFAULT_LANG","USE_EXTEND","DEFAULT_LANGUAGE","forRoot","ngModule","I18nModule_1","imports","HttpClientModule","moduleSrc","src","l","Boolean","join","Function","Map","loadLocale","moduleLang","has","fetch","res","text","module","catch","ngxTranslate","DEFAULT_SEPARATOR","queryStringLang","saveInLocalStorage","localStorage","getItem","TranslateService_1","SAVE_LANGUAGE_KEY","switchToLanguage","loadLocales","lessSpecificModuleLang","shift","e_1","setLanguage","registerLocaleData","default","setDefaultLang","use","firstSupportedLanguage","preferredLanguage","localStorageLang","browserLangs","find","getSupported","convertToLanguageCodePO","sep","indexOf","langMain","langSpecific","getNativeLanguage","nativeName","setItem","exact","getLessSpecific","startsWith","getQueryParameter","isString","navigator","property","propertyLanguages","queryKey","search","substring","pair","DatePipe","locale","transform","format","timezone","valueInBounds","valueBefore","valueBeyond","isNaN","min","NgDatePipe","LoadMoreComponent","useIntersection","hidden","class","maxIterations","hideNoMoreDataHint","onLoad","counter","hasNoMoreData","LOAD_SAME_PAGE_THRESHOLD","destroyed","hasMore","paging","totalPages","currentPage","nextPage","ngAfterContentInit","intersectionObserver","IntersectionObserver","event","buttonInView","container","observe","shouldShowNoMoreDataHint","disconnect","unobserve","loadUntilIntersected","loadMore","stopPropagation","intersectionLoading","getLoadingThreshold","shouldSwitchMode","noMoreDataHint","isIntersecting","Output","HostBinding","ForOfDirective","tpl","vcr","componentFactoryResolver","cachedData","loadMoreMode","dataPipe","unsubscribe$","fetchData","obs$","notFoundTemplate","loadingTemplate","loadNextLabel","source","realtime","comparator","ngOnInit","handleRealtime","ngOnChanges","changes","c8yForPipe","c8yForOf","unsubscribePaging","reRender_1","hasMoreData","pagingSub","render","onCreate$","takeUntil","insert","onUpdate$","update","onDelete$","coerceNumberProperty","reRender","clear","index","context","$implicit","loadMoreComponent","createEmbeddedView","shouldUseLoadMoreButton","createLoadMoreButtonComponent","append","loadMoreData","componentFactory","resolveComponentFactory","instance","createComponent","checkForDuplicates","comparisionResult","view","itemB","splice","viewRef","updatedItem","forMatchingEmbeddedViewRef","markForCheck","idToRemove","NaN","destroy","callback","cached","unsubscribe","TemplateRef","ViewContainerRef","ComponentFactoryResolver","HumanizeAppNamePipe","internalApps","administration","cockpit","devicemanagement","appNameOrApp","appName","getAppName","isPublicApp","stream","getFirstDefined","values","negate","HumanizePipe","humanize","upperFirst","HumanizePipe_1","IconDirective","el","renderer","c8yMatch","klasses","currentClasses","icon","updateIcon","isC8y","getClasses","classes","_icon","newClasses","klass","removeClass","addClass","Renderer2","ICONS","memoize","resolver","memoizedFnName","_memoize","Permissions","appState","inventory","canEdit","roleIds","mo","checkIfCanEdit","hasRole","roleId","Error","hasAllRoles","hasAnyRole","checkIfOwner","currentUserName","checkWithRequest","moName","partialUpdateObject","success","err","InventoryService","UserService","IfAllowedDirective","permissions","allowAny","rolesIds","LoadingComponent","MapFunctionPipe","mappingFunction","OutletDirective","viewContainer","_element","Element","removeChild","parentElement","parent_1","parentNode","insertBefore","factory","component","_parent","ProgressBarComponent","ShortenUserNamePipe","firstName","lastName","parsedFirstName","substr","parsedLastName","TenantUiService","tenantService","isManagementTenant","current","isEnterpriseTenant","hasApp","hasBranding","hasSslManagement","hasUserHierarchy","hasDataBroker","isAvailable","TenantService","UserPreferencesStorageLocal","LOCAL_STORAGE_KEY","jsonStore","saveJsonStore","UserPreferencesStorageInventory","TYPE","fragmentType","updateMo","out","UserPreferencesService","storage","local","first","getForUser","setForUser","rawKey","getRawKey","getStorage","initializeServices","userPreferences","queryStringLanguage","firstLanguage","u","Status","ICON_LIST","CommonModule","DataModule","C8Y_APP","APP_INITIALIZER","CommonModule_1","NgCommonModule","TooltipModule","entryComponents","ActionBarComponent","navigatorOpen","hasTabs","isTabsHorizontal","isPageToolbarExpanded","uiActionBar","getSortedItems","byPriority","ActionBarModule","BsDropdownModule","CollapseModule","RouterModule","forChild","HOOK_ACTION","ActionService","ActionOutletComponent","getByPriority","invoke","action","ActionComponent","actionService","disabled","ActionModule","AlertService","MAX_ALERTS","ALERT_TIMEOUT","alert","addAlert","addByText","txt","detailedData","changeAlerts","areSame","fieldsToUpdate","removeLastDanger","firstDangerAlert","reverse","saveSuccess","savedObject","createSuccess","createdObject","clearAll","danger","info","warning","addServerFailure","hasRelevantMessage","statusText","alert1","alert2","isEqual","onClose","onDetail","newAlerts","hideAutomaticallyIfNeeded","removeOldestIfMax","isSuccess","noDetails","alertTimeout","timeout","firstRemoved","slice","AlertDetailsComponent","AlertComponent","alertService","containDetailsComponent","ContentChild","AlertOutletComponent","position","detailDisplayedAlert","isStatic","getClass","close","showDetails","mode","setDetailsContent","hasDetails","closeDetails","isDetailsShow","isTemplateRef","content","contents","Attribute","AlertTextComponent","AlertModule","NavigatorNode","children","parents","routerLinkExact","open","draggable","droppable","dragged","draggedHover","confirm","_priority","snakeCase","childrenPriorities","openOnStart","node","updateChildren","ix","pix","updateHidden","predicate","compareLabel_1","toLocaleLowerCase","matches","found","child","empty","click","drop","$event","expandDragTimeout","dragStart","dataTransfer","setData","dragEnd","clearData","dragEnter","preventDefault","expand","dragLeave","expander","traverse","sort","a","NavigatorNodeRoot","addRoot","nodeData","duplicate","preventDuplicates","parent","localParent","createNode","HOOK_NAVIGATOR_NODES","NavigatorService","firstUrl","rootNode","nodes","noParent","withParent","sortedNodes","openOnFirstUrl","isActive","HeaderService","navigatorService","DELAY_TO_AVOID_FLICKERING_ON_ASYNC_NODES","hasItemsInNavigator$","delay","title","nav","header$","header","navigatorOpen$","hasItems","titleReference","document","querySelector","elementRef","innerText","hideNavigator","documentElement","clientWidth","largeWidth","navigatorHiddenOnStartup","toggleNavigator","closeNavigator","configNavigator","config","changeTitle","newTitle","pageTitleUpdate","changePageTitle","verifyIfNavOpen","debounceTime","shouldToggle","shouldShowBreadcrumbs","breadcrumbs","HOOK_TABS","TabsService","tabs","prepareTabs","orientation$","firstTabWithDefinedOrientation","tab","orientation","tabsHorizontal","sortTabs","self","findIndex","priorityOrder","aTranslatedLabel","bTranslatedLabel","translatedLabelOrder","localeCompare","BootstrapComponent","actionBar","headerService","showPoweredBy","noAppsMargin$","hiddenOnStartup","tabsOrientation","BreadcrumbItemComponent","BreadcrumbOutletComponent","showAll","normalizePath","HOOK_BREADCRUMB","BreadcrumbService","sortByPreferredPath","selectPreferredByPath","preferredPath","bc","BreadcrumbComponent","breadcrumbService","contentChildItems","toArray","ContentChildren","BreadcrumbModule","NavigatorItemComponent","iconTemplate","NavigatorIconComponent","PopoverConfirmComponent","buttons","isOpen","containerClass","outsideClick","show","buttonStatus","handleOutsideClick","PopoverDirective","NavigatorNodeComponent","nodeClick","childrenNodes","expandParentIfActive","expandCollapse","routerLinkActive","handleExpandCollapse","recursive","forNode","updateIconTemplate","updateIconComponent","componentType","iconComponent","iconSlot","iconComponentFactory","read","RouterLinkActive","ViewChildren","NavigatorNodeComponent_1","RightDrawerComponent","quickLinks","helpAndSupport","TitleOutletComponent","zone","runOutsideAngular","NgZone","TitleComponent","HOOK_SEARCH","SearchService","UserMenuService","userMenuItems","documentationItems","HOOK_DOCS","DocsService","getBaseUrl","getUserGuideLink","link","getLink","templateStr","toPromise","links","noDefault","excludeDefault","staticLinks","lnk","partialLink","prefixWithSlash","HeaderBarComponent","searchService","userMenuService","docs","canToggle$","appState$","drawerOpen","headerOpen","toggle","AppSwitcherComponent","applications","listAppsForUser","getHref","apps","orderApps","filterApps","filterVisible","filterCloud","filterDuplicates","visibleApplicationTypes","includes","noAppSwitcher","hideCloudApps","filterFn","cloud","oneCloudApps","otherApp","orderBy","AppIconComponent","model","appIcon","showIcon","iconClass","appNameAbbr","iconStyle","c8yAppIconsList","analyticsbuilder","analytics-builder","apamaepl","white","defaultIconStyle","background-repeat","background-size","height","width","iconFromAppDefinition","findStaticIcon","iconUrl","iconUrlFromAppDefinition","background-image","isEmpty","mapFontAwesomeToDelightIcons","appContextPathNormalized","cp","iconClassProperty","iconUrlProperty","iconClasses","NavigatorOutletComponent","isShown$","collapseNavigator","trackByPathOrLabel","LoginViews","statusIcons","SUCCESS","WARNING","DANGER","INFO","statusClasses","statusAlert","operationStatusIcons","OperationStatus","PENDING","EXECUTING","SUCCESSFUL","FAILED","operationStatusClasses","_e","ConfirmModalComponent","modal","_labels","ok","cancel","dismiss","hide","labels","BsModalRef","ModalComponent","onDismiss","customFooter","_dismiss","_close","onEnterKeyDown","hasOnlyOneButton","isCancelClickable","isOkClickable","HostListener","ModalService","modalService","modalLabels","initialState","acknowledge","acknowledgeLabel","BsModalService","ModalModule","BsModalModule","PopoverModule","NavigatorModule","CookieBannerService","STORAGE_KEY","COOKIE_BANNER","COOKIE_PREFERENCES_CONFIG","isCookieBannerShowed$","cookieDescriptions","required","functional","marketing","getCookiePreferencesConfig","getCookieBannerSettings","setCookies","cookiePreferences","cookiesToSet","entries","cookieName","cookieValue","shouldShowCookieBanner","cookieBannerText","getUserCookiePreferences","isConfigCookiePreferencesDefined","isFunctionalCookieEnabled","getCookieDescription","cookieType","cookieBannerConfigSettings","transformCookiePreferencesToList","isReadonly","transformCookiePreferencesListToCookiePreferences","cookiePreferencesList","cookiePref","cookie","GainsightService","cookieBannerService","userPreferencesService","tagFunction$","USER_PREFERENCES_KEY","GAINSIGHT_URL","GAINSIGHT_GLOBAL_SCOPE","SCRIPT_EXECUTION_WAIT_TIME","OPTIONS_KEY_CATEGORY","OPTIONS_KEY_NAME","isScriptLoaded","isGainsightDisabledInUserPreferences","setFunctionalCookie","cookies","getGainsightKey","gainsightKey","loadTag","identify","scriptTag","createElement","loadScriptTag","fromEvent","take","instanceId","getInstanceIdFromUrl","tagFunction","versionUI","versionBE","windowRef","userId","customProperties","externalReference","userLanguage","triggerEvent","eventName","props","shouldLoadGainsightTag","isGainsightDisabled","canEditProductExperienceSettings","gainsightEnabled","windowRef_1","firstTag","getElementsByTagName","gainsightGlobalScope_1","q","async","warn","hostName","hostname","ProductExperienceDirective","gainsightService","onClick","actionName","actionData","ProductExperienceModule","isCookieBannerShowed","SearchOutletComponent","SearchComponent","term","onSearch","HighlightComponent","elementClass","highlightedText","textNoHtml","escape","patternNoHtml","patternForRegex","escapeRegExp","SearchResultEmptyComponent","NO_RESULT_FOUND","msg","SearchModule","FormsModule","UserMenuItemComponent","userService","UserEditModalComponent","auth","client","c8yModalService","loading","showProductUsageSetting","onHide","reason","changedLang","updateUserInAppState","currentUsageTrackingState","onLanguage","onProductExperience","usageTrackingState","updateAndClose","persistLanguage","gainsightTrackingAppReload","userOrigin","updateCurrent","password","updateCredentials","reload","currentUserResult","newCredentials","BasicAuth","LoginService","basicAuth","cookieAuth","api","rememberMe","TOKEN_KEY","TFATOKEN_KEY","isFirstLogin","GREEN_MIN_LENGTH_DEFAULT","ERROR_MESSAGES","minlength","password_missmatch","maxlength","password_strength","remote_error","password_change","password_reset_token_expired","tfa_pin_invalid","pattern_phonenumber","pattern_newPassword","international_number_required","phone_number_error","pinAlreadySent","passwordConfirm","tfaExpired","SUCCESS_MESSAGES","password_changed","password_reset_requested","resend_sms","send_sms","passwordStrengthSetting","enforcePasswordStrength","greenMinLength","passwordStrengthValidity","loginModeFilters","isOauth2Internal","visibleOnLoginPage","TenantLoginOptionType","OAUTH2_INTERNAL","isBasic","BASIC","isOauth2","grantType","OAUTH2","localhostRegExp","localhostIpRegExp","showTenantRegExp","autoLogout","initLoginOptions","getTenant","loginMode","oauthOptions","redirectToOauth","initRequest","fullPath","_platformLocation","href","redirectUrl","encodeURIComponent","originUriParam","errorPattern","isTfaExpired","hookResponse","response","EMPTY","apiCall","willLogout","json","clone","logout","getGreenMinLength","getBasicAuthLoginOption","getEnforcePasswordStrength","loginOption","getPasswordStrengthValidity","strengthValidity","getPasswordStrengthEnforced","all","cleanMessages","addSuccessMessage","successKey","successMessage","getAuthStrategy","authStrategy","token","getStoredToken","tfa","getStoredTfaToken","setCredentials","useBasicAuth","credentials","login","setAuth","tenantRes","switchLoginMode","userRes","verifyAppAccess","getSupportUserName","storeBasicAuthToken","authFulfilled","isPasswordGrantLogin","generateOauthToken","cleanLocalStorage","URLSearchParams","grant_type","tfa_code","urlParams","method","headers","content-type","isSupportUser","showTenant","isLocal","isShowTenant","resData","reset","tslib_1.__read","redirect","replaceState","cleanSessionStorage","saveTFAToken","tfaToken","ex_3","saveToken","sessionStorage","removeItem","basicAuthLoginOption","getStoredCredentials","decodeToken","decodeURIComponent","atob","CookieAuth","Realtime","LocationStrategy","PasswordConfirmModalComponent","loginService","passwordConfirmedEmitter","strategy","createNewClient","baseUrl","emitSuccessAndClose","Client","PasswordService","DEFAULT_PASSWORD_MIN_LENGTH","GREEN","colorName","color","passwordStrength","PasswordStrength","YELLOW","RED","confirmPassword","hasLowerCase","hasUpperCase","hasNumbers","hasSpecialChars","getStrengthColor","getDefaultPasswordMinLength","UserTotpSetupComponent","totpSetupVerified","activateTotp","UserEditComponent","passwordService","modalConfirmService","bsModalService","isUsageTrackingEnabled","onUser","onCancel","userHasActiveTotp","userCanSetupTotp","isPhoneRequired","_user","userIsExternal","twoFactorAuthenticationEnabled","getTfaSettings","enabledOnSystemLevel","enabledOnTenantLevel","isTfaEnabled","initializeTotpSettings","setupTotp","save","saveAfterPasswordConfirmation","onNewPasswordChanged","newPassword","canUserSetupTotp","getActivityTotp","totpActivity","tfaStrategy","confirmed","UserMenuOutletComponent","copyIt","copied","handler","handleEvent","clipboardData","addEventListener","execCommand","removeEventListener","editUser","activateSupportAccess","companyName","successMsg","enableSupportUser","refreshCurrentUser","deactivateSupportAccess","textWithCompany","textWithoutCompany","isTenantAdmin","disableSupportUser","PasswordCheckListComponent","passwordStrengthChecker","minGreenLength","checklist","check","contextualColor","onPasswordChange","requirement","checked","PasswordConfirm","validate","abControl","controlToCompareWith","PasswordConfirm_1","NG_VALIDATORS","useExisting","PasswordStrengthCheckerService","PasswordStrengthComponent","passwordStrengthCheckerService","strength","NewPasswordComponent","changePassword","passwordEnforced","loadPasswordStrengthSettings","newPasswordChanged","showPasswordStrength","toggleChangePassword","viewProviders","ControlContainer","NgForm","PhoneValidationDirective","control","validateInternationalPhoneNumber","internationalPhoneNumber","numberValid","phoneNumber","parsePhoneNumberFromString","isValid","setValue","emitEvent","emitModelToViewChange","PhoneValidationDirective_1","ValidationPattern","rules","messages","domain","emails","loginAlias","opcuaBrowsePath","urlSegment","groupName","ip","DefaultValidationDirective","c8yDefaultValidation","validation","valid","minLength","DefaultValidationDirective_1","MinValidationDirective","parsedMin","parseInt","MinValidationDirective_1","MaxValidationDirective","parsedMax","MaxValidationDirective_1","MessageDirective","MessagesComponent","defaults","messageMap","customMessages","directive","changVisibility","toMessage","FormGroupComponent","hasError","hasWarning","hasSuccess","novalidation","VALIDATION_DEBOUNCE_MS","initNgModel","valueAccessor","registerOnTouched","dirty","markAsDirty","updateValueAndValidity","onlySelf","subscription","valueChanges","statusChanges","debounce","timer","customErrorMessage","errors","NgModel","InputGroupListComponent","plus","minus","onRemove","onAdd","InputGroupListContainerDirective","listProjections","last","elements","JsonValidationPrettifierDirective","ngCtrl","invalidJSON","debounceTimeInMs","abstractCtrl","clearValidationMessage","validateInputAndPrettify","closed","validJsonObject","pretty","setErrorAndValidationMessage","setErrors","invalidBodyTemplate","NgControl","TextAreaRowHeightDirective","elem","rows","minHeightPerRow","convertedValue","heightPerRow","setHeight","setStyle","RequiredInputPlaceholderDirective","translationService","shouldSkipRequiredHint","closest","ngAfterViewChecked","req","updatePlaceholder","getTextForPlaceholder","requiredText","requiredTextIndex","lastIndexOf","setAttribute","IpRangeInputListComponent","ipRangeList","cidr","FilterInputComponent","filterChange$","filterTerm","CARRIAGE_RETURN_KEY","CARRIAGE_RETURN_CODE","code","keyCode","EmailsValidatorDirective","_enabled","separator","_onChange","Validators","FormControl","registerOnValidatorChange","EmailsValidatorDirective_1","NgFormsModule","TotpChallengeComponent","users","verify","onSuccess","verifyCode","verifyTotpCode","SmsChallengeComponent","smsToken","resendTfa","verifyTFACode","useOAuthInternal","verifyCodeWithOauth","verifyCodeWithBasicAuth","resendTFASms","e_2","loginWithTFA","e_3","e_4","TotpSetupComponent","totpSecret","secretQrUrl","rawSecret","otpAuth","qrCodeImage","generateTotpSecret","ex_1","ReadAsType","ProvidePhoneNumberComponent","onChangeView","requestInProgress","sendTfa","savePhoneNumber","sendTFASms","SmsChallenge","AuthenticationModule","QRCodeModule","UserTotpRevokeComponent","revokeEmitter","revoke","totpRevokeSecret","UserModule","HeaderModule","ChangePasswordComponent","passwordPattern","newPasswordConfirm","emailReadOnly","passwordStrengthEnforced","TOKEN_PARAM","EMAIL_PARAM","passwordStrengthColor","resetPassword","Credentials","CredentialsComponent","LOGIN_VIEWS","showLoginForm","showBasicAuth","PASSWORD_RESET_HEADER_NAME","NO_PHONE_HEADER_NAME","handlePasswordReset","handleSmsChallenge","handleTotpChallenge","handleNoPhoneNumberProvided","ChangePassword","TotpSetup","TotpChallenge","ProvidePhoneNumber","LoginComponent","currentView","None","displayAlerts","getResetPasswordToken","loginAutomatically","handleLoginTemplate","onkeyup","setView","RecoverPasswordComponent","sendPasswordResetMail","TotpAuthComponent","onTotpSuccess","isSetup","StrengthValidatorService","isStrong","isPasswordGreen","PasswordStrengthValidatorDirective","forced","strengthFulfilled","PasswordStrengthValidatorDirective_1","LoginModule","LoginModule_1","C8yFormsModule","TabComponent","TabsOutletComponent","showLeft","showRight","visibleTabs","scrollSubscription","scrollSubscribe","navigateTo","navigate","scroll","direction","getDimensions","widthScroll","targetScroll","scrollLeft","unlisten","fromEventPattern","listen","updateScroll","elTabs","tabsContainer","scrollWidth","ConditionalTabsOutletComponent","tabsService","endSubscriptions$","firstTab$","navigateByUrl","replaceUrl","TabsModule","CookieBannerPreferencesModalComponent","closeSubject","configCookiePreferencesList","configCookiePreferences","modalRef","CookieBannerComponent","shouldDisable","settings","onConfigurePreferences","disableButtons","userCookiePreferences","setCookieBannerVisibility","acceptCookies","shouldShow","showBanner","BootstrapModule","DropAreaComponent","cd","loadingMessage","alwaysShow","clickToOpen","dropped","maxAllowedFiles","Infinity","isOver","onChange","onTouched","area","files","onFilesSelected","style","offsetHeight","onOver","showPicker","picker","onPick","onDrop","stopDragging","shouldShowFilesList","isFilesArrayEmpty","hasEmptyFiles","isTooManyFiles","onDelete","filesNameString","clearErrors","writeValue","detectChanges","registerOnChange","getFilesNamesAsString","droppedFiles","compose","isAnyFileEmpty","file","readAsJson","TEXT","readAsText","readAsArrayBuffer","ARRAY_BUFFER","readAsBinaryString","BINARY_STRING","readAsDataURL","DATA_URL","reader","FileReader","onload","readyState","DropAreaComponent_1","NG_VALUE_ACCESSOR","ViewContext","DropAreaModule","FilePickerComponent","onFilesPicked","uploadChoice","fileBinary","onFileDropped","clearInputFromUrl","fileUrl","fileToSave","clearSelectedFiles","dropArea","onFileUrlChange","urlStr","FilePickerModule","C8yCommonModule","DatePickerComponent","onDateSelected","fgDatePicker","FormGroup","dateFrom","dateTo","clearFilter","DatePickerModule","ReactiveFormsModule","BsDatepickerModule","RouterTabsResolver","snapshot","latestChildren","routeConfig","mergeMap","getGuards","guard","canActivate","routerStateSnapshot","every","guards","showIf","ViewContextServices","contextToService","services","Device","Group","User","Application","SubscribedApplications","Tenant","Report","ContextRouteService","tabsResolver","lastAddedTabs","init","routerSubscription","redirectToFirstTab","dataSubscription","updatedContext","updateTabs","refreshContext","serviceInstance","detailsUrlRegex","getDetailUrl","contextData","contextRegex_1","childrenRegex_1","contextChanged","childrenAffected","NEVER","needsRedirect","parseUrl","PRIMARY_OUTLET","segments","HOOK_ONCE_ROUTE","RouterService","contextRouteService","routes","addRoute","addRoutes","emptyRoute","resetConfig","tslib_1.__spread","convertRoute","initialConfig","ContextRouteComponent","refreshTabs","ActivatedRoute","callsSubject","asObservable","hookIntoClientFetch","hookFilter","hookRequest","onFinish","onStart","resolveData","cb","bind","fetchPromise","responseInterceptor","DataModule_1","ContextRouteGuard","caches","paramMap","clearDetailCached","detailCached","getCache","withChildren","EmptyComponent","SendStatus","PushStatus","SendStatusLabels","PushStatusLabels","routerService","RouterModule_1","NgRouterModule","deviceAvailabilityIconMap","sendData","_a$1","AVAILABLE","UNAVAILABLE","UNKNOWN","NOT_MONITORED","_b$1","CONNECTED","DISCONNECTED","MAINTENANCE","device","lastMessage","Date","tooltips","sendStatusConnected","ɵ0$1","sendStatusDisconnected","pushStatusConnected","pushStatusDisconnected","maintenance","DeviceStatusComponent","_mo","setStatusProperites","requiredAvailability","availabilityStatus","pushStatus","sendStatus","getMaintenanceStatus","getSendPushStatus","maintenanceStatus","tooltip","getSendStatusTooltip","getPushStatusTooltip","availability","c8y_Availability","DeviceStatusModule","GuideHrefDirective","htmlAnchor","hasAttribute","c8yGuideHref","GuideDocsComponent","destroyed$","ReplaySubject","translateDirective","replaceAnchorAttributes","findGuideAnchors","guideHref","getAttribute","nodeName","attributes","getNamedItem","searchResult","guide","baseHref","descendants","DocsModule","ArrayTypeComponent","to","fieldGroup","CONFIG","types","ArrayTypeComponent_1","FieldArrayType","FieldCheckbox","defaultOptions","templateOptions","indeterminate","formCheck","FieldCheckbox_1","extends","changeDetection","ChangeDetectionStrategy","OnPush","FieldType","FieldFile","dropAreaInputs","input","FieldFile_1","WrapperFormField","maxHelpBlockLength","showDescriptionAsPopup","wrappers","WrapperFormField_1","FieldWrapper","FieldInput","FieldInput_1","ObjectTypeComponent","ObjectTypeComponent_1","FieldRadio","FieldRadio_1","FIELD_TYPES","fieldTypeFactory","formlyConfig","typeConfig","tslib_1.__assign","DynamicFormsUIThemeModule","FormlyModule","FormlySelectModule","FORMLY_CONFIG","TranslateExtension","prePopulate","_translated","expressionProperties","templateOptions.label","templateOptions.description","templateOptions.placeholder","example","templateOptions.options","registerTranslateExtension","extensions","extension","I18nModule$1","ɵ0$2","C8yJSONSchema","toFieldConfig","schema","c8yOptions","mappedField","mapSource","const","writeOnly","autocomplete","examples","enum","contentMediaType","contentEncoding","accept","FormlyJsonschema","c8yValidationConfigFactory","validationMessages","FilteringActionType","ValidationModule","ɵ0$3","DynamicFormsModule","HOOK_COMPONENTS","HOOK_COMPONENT","DynamicComponentService","getComponentsViaDeprecatedHook","cmps","cmp","componentsViaDeprecatedHook","__MODE__","getById$","size","DynamicComponentComponent","dynamicComponentService","notFoundError","expandErrorDetails","callLifeCycleHooks","callOnBeforeSaveHook","componentId","loadComponent","dynamicComponent","configComponent","componentRef","hook","onBeforeSave","DynamicComponentModule","DashboardChildActionComponent","DashboardChildTitleComponent","DashboardComponent","sanitizer","columns","gap","dashboardChange","lastRow","DEFAULT_ROW_SIZE","dashboardRect","calculateRowSize","bypassSecurityTrustStyle","rowSize","onResize","getLastRow","updateRectSize","widget","ele","getBoundingClientRect","emitChange","DomSanitizer","forwardRef","DashboardChildComponent","DashboardChildChange","childToChange","MIN_WIDTH","MIN_HEIGHT","PIXEL_SIZE_THRESHOLD","diffX","diffY","dashboard","dragSource","moved","move","getPixelSize","resizeDimension","setPixelSize","getDimensionSize","prev","dimension","setDimension","arrangePipe","getDimensionPosition","x","findFreeDimension","getCollided","collapseUpAll","w","ds","newPosition","collapseUp","arrangeAll","arrange","spacing","origin","dimensions","notIfColliding","columnSize","pxWidth","pxHeight","moveEvent","draggedElement","rect","left","top","pointerPosition","round","pointer","resizePosition","row","nextElementSibling","doesCollide","currentDimension","actions","isResize","isDragging","_pxWidth","_pxHeight","margin","isFrozen","changeStart","changeEnd","intersected","getOrder","card","card-dashboard","on-resize","setDynamicDimension","intersectionObserver_1","childInView","resizeStarted","positioning","changeSubscription","resize$","dragStarted","drag$","observer","WidgetsDashboardComponent","isDisabled","widgetMargin","translateWidgetTitle","defaultHeight","defaultWidth","allowFullscreen","canDelete","onAddWidget","onEditWidget","onDeleteWidget","onChangeDashboard","onEditDashboard","onDeleteDashboard","onFreeze","onChangeStart","onChangeEnd","toggleFullscreen","doc","fullScreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","ALLOW_KEYBOARD_INPUT","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","DashboardModule","DragDropModule","C8yStepperIcon","templateRef","C8yStepper","disableDefaultIcons","edit","onStepChange","_iconOverrides","_stepIndex","_icons","_stepIndexSubscription","getIndicatorType","_state","_getIndicatorType","STEP_STATE","EDIT","DONE","setIndex","C8yStepper_1","CdkStepper","C8yStepperProgress","onStepClicked","stepSelected","C8yStepperButtons","stepper","pending","onNext","onBack","onCustom","showBtns","back","custom","observers","steps","stepControl","invalid","statusChangeSubscription","currentValue","selected","completed","previous","Host","CdkStep","displayDefaultIndicatorType","StepperModule","CdkStepperModule","STEPPER_GLOBAL_OPTIONS","ɵ0$4","ListItemActionComponent","ListItemCollapseComponent","collapseWay","ListItemFooterComponent","ListItemComponent","active","collapsed","selectable","collapsedChange","showFooter","showActions","showCollapse","dropdownUp","pulse$","destroy$","ACTION_ITEM_HEIGHT","classList","ngAfterContentChecked","itemActions","itemFooter","itemCollapse","showDropdownUp","dropdownDownFits","innerHeight","toggleCollapsed","pulse","ListItemBodyComponent","ListItemRadioComponent","onSelect","radio","firstChange","change","ListItemRadioComponent_1","ListItemTimelineComponent","ListGroupComponent","timeline","timelineComponent","ListItemIconComponent","ListItemCheckboxComponent","select","ListItemCheckboxComponent_1","CheckboxControlValueAccessor","ListGroupModule","AuditLogComponent","audit","withTotalPages","records","AuditService","AuditLogModule","CellRendererDefDirective","HeaderCellRendererDefDirective","FilteringFormRendererDefDirective","ColumnDirective","ratiosByColumnTypes","numeric","text-short","text-long","GridDataSource","loadingSubject","dataSourceSubject","dataStatsSubject","filteredSize","currentPageSize","firstPageSize","dataSelectionSubject","filteredDataIds","resultListSubject","loading$","data$","stats$","selection$","resultList$","connect","collectionViewer","loadData","pagination","searchText","serverSideDataCallback","selectionPrimaryKey","infiniteScroll","clientSideData$","initialData","transformedData","flow","doClientSideSearch","doClientSideFiltering","doClientSideSorting","doClientSidePagination","serverSideData$","selection","enabled","primaryKey","finalize","resolveValue","resolveFunction","normalizeNil","isNil","filterPredicate","propPaths","regexSearch","createRegexSearch","itemWithResolvedValues","pick","omitBy","cellValue","actives","sortOrder","sortingState","paths","orders","chunk","filterValue","escapeRegExpPattern","ModalSelectionMode","DataGridComponent","hostRef","cfr","loadMoreItemsLabel","loadingItemsLabel","showSearch","showChildDevices","dataSource","filteringLabelsParams","filteredItemsCount","allItemsCount","paginationLabelParams","pageFirstItemIdx","pageLastItemIdx","itemsTotal","possiblePageSizes","minPossiblePageSize","displayOptions","striped","bordered","gridHeader","rowMouseOver","rowMouseLeave","rowClick","onConfigChange","onFilter","itemsSelect","onChildDevices","columnNames","styles","tableCursor","gridTemplateColumns","gridInfiniteScrollColumn","searchText$","filteringApplied","totalPagesCount","selectedItemIds","currentPageSelectionState","allSelected","allDeselected","builtInActionType","Edit","Delete","Export","resizeHandleMouseDown$","resizeHandleContainerMouseMove$","resizeHandleContainerMouseUp$","possiblePageSize","actionControls","bulkActionControls","currentPageEmpty","isItemSelected","stats","createLoadMoreComponent","updateFilteringLabelsParams","updatePaginationLabelParams","_actionControls","updateColumns","updateGridColumnsSize","thEls","thRefs","setupResizeHandle","trackByName","resolveCellValue","changeSortOrder","columnName","updateSorting","emitConfigChange","applyFilter","dropdown","filteringModifier","updateFiltering","ApplyFilter","payload","resetFilter","ResetFilter","clearFilters","externalFilterQuery","updateFilteringApplied","isColumnFilteringApplied","filterable","updatePagination","itemsPerPage","page","recreateLoadMoreComponent","scrollToTop","loadNextPage","getCellRendererSpec","_getCellRendererSpec","getHeaderCellRendererSpec","getFilteringFormRendererSpec","getColumnRenderer","filteringFormRendererComponent","setAllItemsSelected","setItemsSelected","setAllItemsInCurrentPageSelected","itemIds","union","without","onColumnDrop","previousIndex","currentIndex","updateColumnNames","visible","gridTrackSize","loadChildDevices","specialColumn","sortable","positionFixed","withColumnDefaults","uniqBy","dataType","headerCSSClassName","cellCSSClassName","clearMouseHighlights","targetColumnName","headerBeingResized","requestAnimationFrame","wrapper","horizontalOffset","clientX","offsetLeft","_parseInt","getSelection","removeAllRanges","columnRenderer","rendererTemplate","cellRendererComponent","headerCellRendererComponent","columnRenderers","infiniteScrollContainer","loadingLabel","scrollContainer","scrollTop","CdkHeaderCell","leading","CellRendererComponent","spec","prevSpec","rendererType","Type","rendererInjector","CellRendererContext","ngDoCheck","FilteringFormRendererComponent","defaultRendererFilterText","FilteringFormRendererContext","DataGridModule","CdkTableModule","C8YCommonModule","PaginationModule","HelpComponent","docsService","isCollapsed","SUPPORTED_LANGUAGES","getUrl","parseVersion","endsWith","clean","requestContent","resolveIcon","helpContent","XMLHttpRequest","onreadystatechange","responseType","setRequestHeader","send","majorNumber","floor","sectionSplit","sectionQuery","sectionNode","allPossibleElementsToAttach","allPossibleElementsToAttach_1","tslib_1.__values","allPossibleElementsToAttach_1_1","tagName","HelpModule","RealtimeButtonComponent","stop","start","RealtimeModule","SelectModalComponent","bsModalRef","subTitle","MULTI","disableSelected","showFilter","areMoreEntries","listItems","debouncer","itemsPromise","selectedId","obj","updatePipe","updateChoice","getOutput","selectedOption","SelectModalFilterPipe","extractValues","filterContainString","SelectModalModule","SelectComponent","applyLabel","disableApplyOnNoSelection","textFilter","labelText","filteredItems","searchFilter","sizeToShowFilter","labelsForSelectAll","allFiltered","showAllLabel","itemsSelected","stopClicks","preventClick","isOpenChange","updateSelected","outterSelected","isSelected","isAllItemsSelected","isAllFilteredSelected","isNoItemSelected","applyChanges","selectAll","onChangeItem","updateItems","updateLabel","updateFiltered","search_1","getSelectAllToggleStatus","getLabel","isAllSelected","selectedLabel","BsDropdownDirective","TypeaheadComponent","allowFreeEntries","displayProperty","autoClose","onIconClick","KEYCODE_UP","KEYCODE_DOWN","KEYCODE_TAB","KEYCODE_ENTER","KEYCODE_ESC","doBlur","getDisplayProperty","onShown","searchControl","focus","handleKeyboard","blur","upOrDown","selectNextItemOnKeyboardMove","ctrl","notExisting","TypeaheadComponent_1","SelectModule","RangeDisplayComponent","fractionSize","parseFloat","toFixed","yellowRangeMin","yellowRangeMax","redRangeMin","redRangeMax","checkTarget","rulerCalc","num","trackByIndex","isRedRangeDisplayed","isRangeDisplayed","isYellowRangeDisplayed","rangeMin","rangeMax","RangeDisplayModule","CoreModule","CoreModule_1","c8yFormsModule","c8yStepperModule","QuickLinkComponent","kebabCase","QuickLinkModule","HOOK_DYNAMIC_PROVIDER_CONFIG","ProviderConfigurationNodeFactory","navigation","checkCanActivate","forkJoin","canActivateResult","ca","wrapIntoObservable","caResult","isPromise","getNodeTabPath","nodePath","tabPath","ProviderConfigurationService","activatedRoute","listUrl","ProviderConfigurationService_1","NO_DETAIL_ID","entity","Service","ProviderDefinitionsService","ProviderConfigurationComponent","providerDefinitionsService","providerConfigurationService","jsonschema","layout$","layout","formState","saveRoles","beforeSaveHook","allRoles$","deleteRoles","changeProvider$","providerInput$","form","reload$","updatedConfiguration$","allProviders$","providers$","displayName","configuration$","removeEncryptedValues","selectedProvider$","configuration","newProvider","provider","matchProvider","fieldConfig","ɵdefineHiddenProp","templateOptions.disabled","saveProviderConfiguration","modelToSave","configurationUpdatedSuccessMsg","markAsPristine","err_1","deleteProviderConfiguration","deleteConfigurationModalTitle","deleteConfigurationModalBody","deleteConfigurationModalOkBtnLabel","deleteConfigurationModalCancelBtnLabel","configurationDeletedSuccessMsg","err_2","ProviderConfigurationRouteFactory","navigationRoutes","navigationWithTabsRoutes","endpoint","ProviderConfigurationTabFactory","configForRoute","filteredRoutes","ProviderConfigurationModule","ProviderConfigurationModule_1","RealtimeService","subjects$","onAll$","entityOrId","subject$","getSubjectForChannel","channel","realtimeAction","getIdString","reference","String","getChannel","RealtimeSubject","realtimeChannel","realtimeSubscription","OperationBulkRealtimeService","ManagedObjectRealtimeService"],"mappings":"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IAAA10B,EAAAlI,KACQk9B,EAAal9B,KAAK+8B,WAAWH,GAC/BM,IAAel9B,KAAK28B,iBACtB38B,KAAK28B,eAAetrB,MAAM,MAAMtM,QAAO,SAAC5D,GAAM,OAAAA,KAAGsK,SAAQ,SAAC0xB,GACxDj1B,EAAKs0B,SAASY,YAAYl1B,EAAKq0B,GAAGhQ,cAAe4Q,MAEnDD,EAAW7rB,MAAM,MAAMtM,QAAO,SAAC5D,GAAM,OAAAA,KAAGsK,SAAQ,SAAC0xB,GAC/Cj1B,EAAKs0B,SAASa,SAASn1B,EAAKq0B,GAAGhQ,cAAe4Q,MAEhDn9B,KAAK28B,eAAiBO,6CA5BZ9P,EAAAA,kBACMkQ,EAAAA,aARpB3zB,GAAAA,CADCC,EAAAA,qCAFU0yB,EAAax7B,GAAA,CAHzBwsB,EAAAA,UAAU,CACTtjB,SAAU,eAECsyB,GAAb,GA2CaiB,GAAQ,CACZ,OACA,KACA,cACA,QACA,aACA,OACA,eACA,aACA,iBACA,QACA,YACA,UACA,SACA,SACA,SACA,SACA,OACA,YACA,SACA,cACA,UACA,MACA,OACA,WACA,MACA,OACA,SACA,QACA,OACA,OACA,MACA,OACA,SACA,MACA,OACA,QACA,UACA,WACA,SACA,WACA,eACA,iBACA,QACA,YACA,UACA,SACA,OACA,OACA,SACA,OACA,kBACA,qBACA,MACA,WACA,SACA,WACA,MACA,OACA,eACA,gBACA,YACA,UACA,WACA,QACA,cACA,QACA,gBACA,WACA,YACA,aACA,WACA,OACA,YACA,SACA,WACA,QACA,QACA,QACA,YACA,cACA,QACA,OACA,SACA,WACA,SACA,WACA,aACA,aACA,cACA,UACA,OACA,QACA,UACA,SACA,OACA,UACA,YACA,aACA,aACA,OCnJT,SAAgBC,GAAQC,GACtB,OAAO,SAACz8B,EAAQ4L,EAAQC,GACtB,IAAMC,EAAKD,EAAWxK,MACtBwK,EAAWxK,MAAQ,eAAS,IAAAiK,EAAA,GAAAS,EAAA,EAAAA,EAAArM,UAAAC,OAAAoM,IAAAT,EAAAS,GAAArM,UAAAqM,GAC1B,IAAM2wB,EAAiB,IAAI9wB,EAAM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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { flatten, isFunction, sortBy } from 'lodash-es';\nimport { combineLatest, defer, from, isObservable, Observable, of, race } from 'rxjs';\nimport { filter, map, merge, startWith, switchMap } from 'rxjs/operators';\n\nexport function fromTrigger(router, refresh, factories) {\n  return router.events.pipe(\n    filter(evt => evt instanceof NavigationEnd),\n    merge(refresh),\n    startWith(1),\n    switchMap(() => fromFactories(factories, router))\n  );\n}\nexport function fromFactories<T>(\n  factories?,\n  router?: Router,\n  withFirstEmpty = true\n): Observable<T[]> {\n  return !Array.isArray(factories) || factories.length < 1\n    ? of([])\n    : defer(() => {\n        const factoryObservables = resolveInjectedFactories(factories).map(f => {\n          return toObservable(\n            Array.isArray(f) ? f : f && isFunction(f.get) ? f.get(getActivatedRoute(router)) : [f],\n            withFirstEmpty\n          );\n        });\n        return combineLatest(...factoryObservables);\n      }).pipe(map(results => sortByPriority([].concat(...results))));\n}\n\nexport function resolveInjectedFactories(factories) {\n  return flatten(factories.map(f => (isFunction(f) ? f() : [f])));\n}\n\nexport function stateToFactory<T>(componentsState): ExtensionFactory<T> {\n  const components$ = componentsState.pipe(map((componentSet: Set<T>) => Array.from(componentSet)));\n  return { get: () => components$ };\n}\n\nexport function sortByPriority(items) {\n  return sortBy(items, 'priority');\n}\n\nfunction toObservable(factoryResult, withFirstEmpty) {\n  let observable;\n  if (!factoryResult) {\n    return of([]);\n  } else if (typeof factoryResult.then === 'function' || isObservable(factoryResult)) {\n    if (withFirstEmpty) {\n      const forceObservable = from(factoryResult);\n      const withEmptyFirst = forceObservable.pipe(startWith([]));\n      observable = race(forceObservable, withEmptyFirst);\n    } else {\n      observable = from(factoryResult);\n    }\n  } else {\n    observable = of(factoryResult);\n  }\n  return observable.pipe(\n    map(result => (Array.isArray(result) ? result : [result]).filter(item => !!item))\n  );\n}\n\n/**\n * Allows to extend the existing applications from a module.\n */\nexport interface ExtensionFactory<T> {\n  /**\n   * Allows to resolve the data of an extension point.\n   * The return value can be a Promise or Observable\n   * (allowing for asynchronous data resolution).\n   *\n   * @param activatedRoute The current activated route (if possible to resolve).\n   */\n  get(activatedRoute?: ActivatedRoute): Observable<T[] | T> | Promise<T[] | T> | T[] | T;\n}\n\n/**\n * Extension points allow to extend the application from\n * any module\n */\nexport interface ExtensionPoint<T> {\n  /**\n   * Observable that emits of array of extensions active at any give time\n   */\n  readonly items$: Observable<T[]>;\n  /**\n   * Call the extension factories to refresh them.\n   */\n  refresh();\n}\n\n/**\n * Helper function to get the activated route in\n * a service (as ActivatedRoute injection only\n * works in components). Works as long as we only use\n * a tree and no child is active at the same time.\n *\n * @param router The current router\n */\nexport function getActivatedRoute(router: Router) {\n  if (router && router.routerState && router.routerState.root) {\n    let route = router.routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    return route;\n  }\n}\n","import { Observable, BehaviorSubject } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\n/**\n * A abstract state which should be included in each state.\n * @abstract\n */\nexport abstract class StateService {\n  /**\n   * Saves the state. Should not be accessible directly. Use map or the getter to access\n   * the state. Use functions in the implementation to change the state.\n   */\n  protected abstract state$: BehaviorSubject<any> | any;\n\n  /**\n   * Should return the current state of this StateService\n   */\n  abstract get state();\n\n  /**\n   * Maps to a property and just returns that property.\n   * @param mappedProperty The property to map to.\n   */\n  map(mappedProperty: (stateProperty) => any): Observable<any> {\n    return this.state$.pipe(map(mappedProperty), distinctUntilChanged());\n  }\n\n  /**\n   * Emits a new state.\n   */\n  protected emitNewState() {\n    this.state$.next(this.state);\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n  ExtensionPoint,\n  fromTrigger,\n  sortByPriority,\n  stateToFactory\n} from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { ActionBarItem } from './action-bar.model';\n\n/**\n * A hook to add ActionBarItems using the multi provider extension concept.\n *\n * @example\n * ```typescript\n * providers: [\n *   {\n *     provide: HOOK_ACTION_BAR,\n *     useValue: [{ template: SomeComponent, priority: 10, placement: 'left' } as ActionBarItem],\n *     multi: true\n *   }\n * ]\n * ```\n *\n */\nexport const HOOK_ACTION_BAR = new InjectionToken('ActionBarFactory');\n\n/**\n * A service which defines action-bar items via the multi provider concept.\n *\n * @example\n * ```typescript\n * // preferred way, multi provider concept:\n * providers: [\n *   {\n *     provide: HOOK_ACTION_BAR,\n *     useValue: [{ template: SomeComponent, priority: 10, placement: 'left' } as ActionBarItem],\n *     multi: true\n *   }\n * ]\n *\n * // use services:\n * this.actionBarService.add({ template: SomeComponent, priority: 10, placement: 'left' });\n * ```\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionBarService extends StateService implements ExtensionPoint<ActionBarItem> {\n  items$: Observable<ActionBarItem[]>;\n  readonly refreshTrigger = new Subject();\n  protected state$ = new BehaviorSubject<Set<ActionBarItem>>(new Set<ActionBarItem>());\n\n  /**\n   * @ignore\n   */\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_ACTION_BAR, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: ActionBarItem[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<ActionBarItem> {\n    return this.state$.value;\n  }\n\n  /**\n   * Refreshes the current store.\n   */\n  refresh() {\n    this.refreshTrigger.next();\n  }\n\n  /**\n   * Adds a new item to the action bar in the header and emits a state change.\n   * @param item The item to add.\n   */\n  add(item: ActionBarItem) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action bar item from the header and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: ActionBarItem) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { ActionBarItem } from './action-bar.model';\nimport { ActionBarService } from './action-bar.service';\n\n/**\n * A <c8y-action-bar-item> can be added with content projection.\n * It allows to show items in three positions (left, right\n * or more).\n *\n * @example\n * ```html\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"addRandom()\"><i c8yIcon=\"plus-circle\"></i> Add random</button>\n * </c8y-action-bar-item>\n * ```\n */\n@Component({\n  selector: 'c8y-action-bar-item',\n  templateUrl: './action-bar-item.component.html'\n})\nexport class ActionBarItemComponent implements ActionBarItem {\n  /**\n   * Where the item should be shown. Use \"more\" to place\n   * it in a dropdown on the right.\n   */\n  @Input() placement: 'left' | 'right' | 'more' = 'left';\n\n  /**\n   * Priority for sorting the list. Higher priority means\n   * an earlier position in the list.\n   */\n  @Input() priority: number = 0;\n\n  /**\n   * Adds additional classes to the item.\n   */\n  @Input() itemClass = '';\n\n  /**\n   * @ignore\n   */\n  @ViewChild('template', { static: false }) template: any;\n\n  private viewInitTimeout;\n\n  /**\n   * @ignore\n   */\n  constructor(private actionBarService: ActionBarService) {}\n\n  /**\n   * @ignore\n   */\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() => this.actionBarService.add(this as ActionBarItem));\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.actionBarService.remove(this as ActionBarItem);\n  }\n}\n","/*\n * -----------------------------WARNING---------------------------------\n * This file has an *exact* copy in packages/cli/src/webpack.\n * Any changes to this file must be reflected there, too.\n */\nexport class ApplicationOptions {\n  /** Application name (saved to the server). */\n  name: string;\n  /** Application context path (saved to the server). */\n  contextPath: string;\n  /** Application key (saved to the server). */\n  key: string;\n  /** Set to `true` if the application is hybrid and uses Angular and AngularJS simultaneously. */\n  upgrade?: boolean;\n  /** Path to the branding entry file. */\n  brandingEntry?: string;\n  /** Path to tsccnfig.json file if TypeScript is used (default: ./tsconfig.json). */\n  tsConfigPath?: string;\n  /** Entry module for Angular compiler (only used with lazy loaded routes), e.g. `'app.module.ts#AppModule'`. */\n  entryModule?: string;\n  /** Path to custom index.html (otherwise default one will be used). */\n  indexTemplate?: string;\n  /** URL to dynamically fetched options. */\n  dynamicOptionsUrl?: string;\n  /** URL to favicon. */\n  faviconUrl?: string;\n  /** URL to *.css file which will replace default branding. */\n  brandingUrl?: string;\n  /** Object with properties that will be converted to CSS custom variables. */\n  brandingCssVars?: BrandingCssVars;\n  /**\n   * Allows for adding or overriding languages available in the application.\n   *\n   * Its keys are language codes and its values are objects with the following properties:\n   *\n   * - `name`: English name of the language,\n   * - `nativeName`: native name of the language,\n   * - `url`: full URL to JSON file with compiled translations;\n   *    if not defined, translations will be loaded from `${localePath}/${langCode}.json`.\n   *\n   * Example:\n   * ```json\n   * \"languages\": {\n   *   \"de\": {\n   *     \"name\": \"German\",\n   *     \"nativeName\": \"Deutsch\",\n   *     \"url\": \"/apps/public/ui-assets/de.json\"\n   *   }\n   * }\n   * ```\n   */\n  languages?: Languages;\n  /**\n   * Allows for adding custom translations. It is an optional property.\n   *\n   * Its keys are language codes (https://cumulocity.com/guides/users-guide/getting-started/#a-name-languages-a-available-languages)\n   * and its values are objects with key-value pairs, where the key is the original string in English and the value - its translation.\n   *\n   * - `Home`: \"Startseite\"\n   *\n   * For example you can add the translation of your custom cookie banner configured in the branding settings:\n   * ```json\n   * \"i18nExtra\": {\n   *   \"de\": {\n   *     \"About cookies on Cumulocity IoT\": \"Informationen zu Cookies in Cumulocity IoT\",\n   *     \"Click Agree and Proceed to accept cookies and go directly to the platform or click on Privacy Policy to see detailed descriptions of the used cookies.\": \"Klicken Sie auf Zustimmen und fortfahren, um Cookies zu akzeptieren und direkt zur Plattform zu gelangen, oder klicken Sie auf Datenschutzrichtlinie, um detaillierte Beschreibungen der verwendeten Cookies anzuzeigen.\"\n   *   }\n   * }\n   * ```\n   */\n  i18nExtra?: I18nExtra;\n  /** Path to the folder from which *.po files will be loaded. */\n  localePath?: string;\n  /** Array of URLs to additional *.css files to be loaded at runtime. */\n  extraCssUrls?: string[];\n  /** Documentation links settings. */\n  docs?: Docs;\n  /** Application icon to be displayed in app switcher and header bar. */\n  icon?: Icon;\n\n  // These are the old options\n  /** Hide application in app switcher (saved to the server). */\n  noAppSwitcher?: boolean;\n  /** HTML page title. */\n  globalTitle?: string;\n  /** Hide \"powered by\" and version info at the bottom of the navigator and in the user menu. */\n  hidePowered?: boolean;\n  /** URL to support page (set to `false` to hide the link). */\n  supportUrl?: boolean | string;\n  /**\n   * Replacement string for `user` field in audit logs for actions performed by a support user\n   * (available placeholders: `{{support_user}}`, `{{supported_user}}`).\n   */\n  supportUserString?: string;\n  /** Enable or disable the right drawer. */\n  rightDrawer?: boolean;\n  /** Enable or disable breadcrumbs in the header for groups and devices (default: false). */\n  breadcrumbs?: boolean;\n  /** Collapse navigator on initial load. */\n  hideNavigator?: boolean;\n  /** Show tabs horizontally or vertically. */\n  tabsHorizontal?: boolean;\n  /** Additional link to display on login screen. */\n  loginExtraLink?: LoginExtraLink;\n  /** Enable or disable storage limitation feature. */\n  storageLimitationFeatureEnabled?: boolean;\n  /** Name of company handling support requests from app users (displayed in notification message). */\n  companyName?: string;\n  /** URL template for documentation links (default: `'${docsBaseUrl}${partialUrl}'`). */\n  guideHrefTemplate?: string;\n  /** Base URL for documentation links. */\n  docsBaseUrl?: string;\n  /** CSP string to be applied to `index.html` by replacing default values. */\n  contentSecurityPolicy?: string;\n  /** Enables cloud sensor wizard */\n  sensorPhone?: boolean;\n  /** Legacy list of imported plugins. */\n  imports?: string[];\n  /** Show or hide a newsletter subscription checkbox in edit user modal. */\n  newsletter?: boolean;\n  /** Path to the root node_modules dir (useful when working in monorepo setup, e.g. yarn workspaces). */\n  rootNodeModulesPath?: string;\n  /** Cookie Banner configuration */\n  cookieBanner?: CookieBannerConfiguration;\n  /** Cookie preferences configuration. Here you can enable or disable cookie categories */\n  cookiePreferences?: CookiePreferencesConfiguration;\n  /** A key for the product experience software Gainsight. */\n  gainsightKey?: string;\n}\n\nexport interface CookieBannerConfiguration {\n  /** Here you can set the title of Cookie Banner */\n  cookieBannerTitle?: string;\n  /** Here you can set the Text of Cookie Banner */\n  cookieBannerText?: string;\n  /** Here you can set the policyUrl of Cookie Banner */\n  policyUrl?: string;\n}\n\nexport interface CookiePreferencesConfiguration {\n  /** This category includes e.g. cookies related to logging in  */\n  required?: boolean | string;\n  /** This category includes e.g. tracking cookies  */\n  functional?: boolean | string;\n  /** This category includes e.g. cookies related to advertising  */\n  marketing?: boolean | string;\n}\n\nexport interface LoginExtraLink {\n  url: string;\n  label: string;\n}\n\nexport interface Icon {\n  class?: string;\n  url?: string;\n}\n\nexport interface Docs {\n  /** Hide default links to documentation. */\n  noDefault: boolean;\n  /** List of regex strings. Matching default docs URLs will be hidden. */\n  excludeDefault: string[];\n  /** Additional links to be displayed. */\n  links: (Links)[];\n}\n\nexport interface Links {\n  /** Icon classes with `c8y-icon`, e.g. `c8y-icon c8y-icon-add-user` or `c8y-icon c8y-icon-device-connect`. */\n  icon: string;\n  label: string;\n  url: string;\n  type: 'doc' | 'quicklink';\n}\n\nexport interface I18nExtra {\n  [langCode: string]: I18nExtraLangCode;\n}\n\nexport interface I18nExtraLangCode {\n  [key: string]: string;\n}\n\nexport interface Languages {\n  [langCode: string]: LanguagesLangCode;\n}\n\nexport interface LanguagesLangCode {\n  name: string;\n  nativeName: string;\n  url: string;\n}\n\nexport interface BrandingCssVars {\n  [key: string]: string;\n}\n","import { InjectionToken, Optional, Inject, Injectable } from '@angular/core';\nimport { camelCase, isUndefined } from 'lodash-es';\nimport { ApplicationOptions } from './ApplicationOptions';\nimport { ExtensionFactory } from './extension-hooks';\nimport { SystemOptionsService, TenantOptionsService } from '@c8y/ngx-components/api';\n\nexport const HOOK_OPTIONS = new InjectionToken<ExtensionFactory<ApplicationOptions>>('App options');\n\n/**\n * A service that allows to set or get application options\n * which configure the default behavior of the UI.\n */\n@Injectable()\nexport class OptionsService extends ApplicationOptions {\n  [key: string]: any;\n  constructor(\n    @Optional() @Inject(HOOK_OPTIONS) options,\n    private systemOptionsService: SystemOptionsService,\n    private tenantOptionService: TenantOptionsService\n  ) {\n    super();\n    this.setupOptions(options);\n  }\n\n  /**\n   * Returns an application option used to configure the UI.\n   * @param optionKey The application options key.\n   * @param defaultValue A value to return if non is set.\n   */\n  get(optionKey: keyof OptionsService, defaultValue?: any) {\n    let value = this[optionKey];\n    if (typeof value === 'undefined') {\n      value = this[camelCase(optionKey)];\n    }\n    return typeof value !== 'undefined' ? value : defaultValue;\n  }\n\n  /**\n   * Sets an application option.\n   * @param key The key to set.\n   * @param value The value to set.\n   */\n  set(key: string, value: any) {\n    this[camelCase(key)] = value;\n  }\n\n  /**\n   * Gets support url from tenant options.\n   * If response returns '404 not found' it gets the support url from application options.\n   * If the support link within application options is not provided the UI will use the system options.\n   * Is the support link explicitly set to false it will be hidden.\n   *\n   * @returns Returns support url or false.\n   */\n  async getSupportUrl() {\n    let url = await this.getTenantOption('configuration', 'system.support.url');\n    if (isUndefined(url)) {\n      url = this.supportUrl;\n    }\n    this.supportUrl = isUndefined(url) ? (await this.getSystemOption('support', 'url')) || false : url;\n    return this.supportUrl;\n  }\n\n  /**\n   * Returns if the tenant allows to show the activate-support user menu entry.\n   * Note: Only if system-level support-user/enabled is false we can activate it at tenant level.\n   */\n  async getActivateSupportUser() {\n    const option = await this.getSystemOption('support-user', 'enabled', true);\n    return !option;\n  }\n\n  /**\n   * Gets a value from the system service and parses it.\n   *\n   * @param category The category for this option.\n   * @param key The key for that option.\n   * @param defaultValue The default if the option was not found.\n   */\n  async getSystemOption(category: string, key: string, defaultValue?: any) {\n    return this.getOptionFromService(category, key, this.systemOptionsService, defaultValue);\n  }\n\n  /**\n   * Gets a value from the tenant service and parses it.\n   *\n   * @param category The category for this option.\n   * @param key The key for that option.\n   * @param defaultValue The default if the option was not found.\n   */\n  async getTenantOption(category: string, key: string, defaultValue?: any) {\n    return this.getOptionFromService(category, key, this.tenantOptionService, defaultValue);\n  }\n\n  private setupOptions(options: any[] | null) {\n    if (options) {\n      if (!Array.isArray(options)) {\n        options = [options];\n      }\n      options.forEach(optionMap => {\n        if (optionMap) {\n          Object.keys(optionMap).forEach(key => {\n            this[camelCase(key)] = optionMap[key];\n          });\n        }\n      });\n    }\n  }\n\n  private async getOptionFromService(category, key, service, defaultValue) {\n    try {\n      const { data } = await service.detail({ category, key });\n      return this.parseOptionRawValue(data.value, defaultValue);\n    } catch (ex) {\n      return defaultValue;\n    }\n  }\n\n  private parseOptionRawValue(rawValue, defaultValue) {\n    let value;\n    try {\n      value = JSON.parse(rawValue);\n    } catch (e) {\n      value = isUndefined(rawValue) ? defaultValue : rawValue;\n    }\n    return value;\n  }\n}\n","import { throttle as _throttle } from 'lodash-es';\n\n/**\n * Decorator to throttle functions call.\n * @param wait throttle time.\n * @param options set triggers, eg on trailing edge or falling edge,\n * see lodash documentation for details\n */\nexport function throttle(wait?, options?) {\n  return (target, fnName, descriptor) => {\n    const fn = descriptor.value;\n    descriptor.value = function(...args) {\n      const throttledFnName = `_${fnName}Throttled`;\n      if (!this[throttledFnName]) {\n        this[throttledFnName] = _throttle(fn, wait, options);\n      }\n      return this[throttledFnName].apply(this, args);\n    };\n  };\n}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { keys } from 'lodash-es';\nimport { BehaviorSubject } from 'rxjs';\nimport { scan, distinctUntilChanged, map, filter } from 'rxjs/operators';\nimport { StateService } from './state-service.abstract';\nimport { OptionsService } from './options.service';\nimport { FetchClient, TenantLoginOptionsService } from '@c8y/client';\n\nimport { ApplicationService, IUser, ICurrentTenant } from '@c8y/client';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { throttle } from './throttle.decorator';\n\n@Injectable()\nexport class AppStateService extends StateService {\n  state$: BehaviorSubject<any> = new BehaviorSubject<any>({\n    app: {\n      name: this.options.name,\n      contextPath: this.getCurrentContextPath() || this.options.contextPath\n    },\n    supportUrl: this.options.supportUrl,\n    lang: this.options.get('defaultLanguage', 'en'),\n    langs: this.getLangs(),\n    langsDetail: this.options.languages,\n    loginOptions: this.options.loginOptions,\n    activateSupportUserAvailable: undefined,\n    versions: {\n      backend: undefined,\n      ui: this.options.versions || { ngx: undefined }\n    },\n    hidePowered: this.options.hidePowered,\n    isLoading: false,\n    showRightDrawer: this.options.rightDrawer,\n    loginExtraLink: this.options.get('login_extra_link'),\n    newsletter: this.options.newsletter\n  });\n  currentSupportUserName: BehaviorSubject<string | null> = new BehaviorSubject(null);\n  currentUser: BehaviorSubject<IUser | null> = new BehaviorSubject(null);\n  currentTenant: BehaviorSubject<ICurrentTenant | null> = new BehaviorSubject(null);\n\n  constructor(\n    private applicationService: ApplicationService,\n    public apiService: ApiService,\n    private options: OptionsService,\n    private fetchClient: FetchClient,\n    private tenantLoginOptionsService: TenantLoginOptionsService\n  ) {\n    super();\n    this.apiService.calls\n      .pipe(\n        filter(({ url }) => !/notification\\/realtime/.test(url)),\n        map(({ phase }) => (phase === 'start' ? 1 : -1)),\n        scan((count, item) => count + item, 0),\n        map(count => count > 0),\n        distinctUntilChanged()\n      )\n      .subscribe(isLoading => (this.state.isLoading = isLoading));\n\n    this.assignApplicationKeyToDefaultHeaders();\n  }\n\n  assignApplicationKeyToDefaultHeaders() {\n    if (!isDevMode()) {\n      this.fetchClient.defaultHeaders = {\n        ...(this.fetchClient.defaultHeaders || {}),\n        'X-Cumulocity-Application-Key': this.options.key\n      };\n    }\n  }\n\n  /**\n   * Returns the current state.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  getLangs() {\n    const { languages } = this.options;\n    return languages ? keys(languages).filter(k => languages[k]) : [];\n  }\n\n  /**\n   * Returns the correct UI version. In hybrid mode for angular and ngx.\n   */\n  get uiVersion() {\n    const version = this.state.versions.ui;\n    return version.ngx || version.ng1;\n  }\n\n  /**\n   * Loads the app manifest. If no access -> throw an error to verify app access.\n   */\n  async loadManifest() {\n    try {\n      const { application } = (await this.applicationService.detail(\n        `${this.state.app.contextPath}/manifest`\n      )).data as any;\n      this.state.app.manifest = application;\n      this.loadDefaultOptions();\n    } catch (ex) {\n      throw ex;\n    }\n  }\n\n  /**\n   * When this function called, it refreshes the values of loginOptions stored within ui state object.\n   * Function is throttled to execute the refresh once in a time specified by params of @throttled decorator,\n   * it should be called on leading edge of the timeout.\n   */\n  @throttle(600, { trailing: false })\n  async refreshLoginOptions() {\n    const { data: { loginOptions } } = await this.tenantLoginOptionsService.detail();\n    this.state$.next({ ...this.state, loginOptions });\n  }\n\n  /**\n   * Checks current users application list and matches it against given application name.\n   * Returns true if application is in the list.\n   * @param name application name\n   */\n  async isApplicationAvailable(name: string) {\n    const { data } = await this.applicationService.listByUser(undefined, { pageSize: 100 });\n    return data.some(app => app.name === name);\n  }\n\n  /**\n   * Sets current user (including support user).\n   * @param userInfo Info about current user and support user to be set.\n   */\n  setUser(userInfo: { user: IUser; supportUserName: string }) {\n    this.currentSupportUserName.next(userInfo.supportUserName || null);\n    this.currentUser.next(userInfo.user);\n  }\n\n  private getCurrentContextPath() {\n    const match = window.location.pathname.match(/\\/apps\\/(public\\/){0,1}(.+?)(\\/|\\?|#|$)/);\n    return match && match[2];\n  }\n\n  private async loadDefaultOptions() {\n    this.state.supportUrl = await this.options.getSupportUrl();\n    this.state.activateSupportUserAvailable = await this.options.getActivateSupportUser();\n    this.state.versions.backend = await this.options.getSystemOption('system', 'version');\n    try {\n      this.showIncompatibleVersionsError();\n    } catch (ex) {\n      // ignore this\n    }\n    this.emitNewState();\n  }\n\n  private showIncompatibleVersionsError() {\n    const uiVersion = this.state.versions.ui.ngx;\n    const backendVersion = this.state.versions.backend;\n    const uiVersionArray = uiVersion\n      .replace(/[^\\d.]/g, '')\n      .split('.')\n      .map(Number);\n    const beVersionArray = backendVersion\n      .replace(/[^\\d.]/g, '')\n      .split('.')\n      .map(Number);\n    const multiplier = Math.pow(\n      10,\n      Math.ceil(Math.log10(Math.max(...uiVersionArray, ...beVersionArray) + 1))\n    );\n    const sumReducer = (acc, cur) => acc + cur;\n    const calculateVersionMapper = (curr, idx) => curr * (multiplier / Math.pow(10, idx));\n    const uiVersionNumber = uiVersionArray.map(calculateVersionMapper).reduce(sumReducer);\n    const beVersionNumber = beVersionArray.map(calculateVersionMapper).reduce(sumReducer);\n    const showError = uiVersionNumber > beVersionNumber;\n    if (showError) {\n      const errorContent = `You are running version ${uiVersion} of the UI and version ${backendVersion} of backend!`;\n      console.log('%c ' + errorContent, 'font-weight: bold; font-size: 30px; color: red;');\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const LANGUAGES = new InjectionToken('Languages');\n","import { InjectionToken } from '@angular/core';\n\nexport const LOCALE_PATH = new InjectionToken('Locale path');\n","import { InjectionToken } from '@angular/core';\n\nexport const HOOK_PATTERN_MESSAGES = new InjectionToken('Pattern Messages');\n","import { Injectable, Inject } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { mapValues, each } from 'lodash-es';\nimport { HOOK_PATTERN_MESSAGES } from './patterns-message.hook';\nimport { formatDate } from '@angular/common';\n\n/**\n * A service to translate messages by using regexp patterns.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternMessagesService {\n  translateService: TranslateService;\n  patterns: any = {};\n  pipes = {\n    absoluteDate: (date: string|number|Date) =>\n      formatDate(date, 'medium', this.translateService.currentLang),\n    translate: (key) =>\n      this.translateService.instant(key)\n  };\n\n  constructor(\n    @Inject(HOOK_PATTERN_MESSAGES) patterns\n  ) {\n    each(patterns, (pattern) => {\n      Object.assign(this.patterns, pattern);\n    });\n  }\n\n  translate(message: string) {\n    const translation = this.translateWithPatterns(message);\n    return (translation !== message) ? translation : '';\n  }\n\n  private translateWithPatterns(message, patterns = this.patterns) {\n    let translatedMessage = message;\n\n    each(patterns, (patternCfg, pattern) => {\n      const globalRegExp = new RegExp(pattern, 'g');\n      let globalMatch;\n\n      if (!globalRegExp.test(translatedMessage)) {\n        return;\n      }\n      globalRegExp.test(''); // reset the regexp\n      globalMatch = globalRegExp.exec(translatedMessage);\n      while (globalMatch !== null) {\n        const [ localMatch ] = globalMatch;\n\n        const placeholderValues = mapValues(patternCfg.placeholders, (placeholder) => {\n          const expr = placeholder.capture || placeholder;\n          let replacement = localMatch.replace(new RegExp(pattern, 'g'), expr);\n\n          if (placeholder.translate) {\n            replacement = this.translateWithPatterns(replacement, placeholder.translate);\n          }\n\n          return replacement;\n        });\n        translatedMessage = translatedMessage.replace(\n          localMatch,\n          this.translateWithParams(patternCfg, placeholderValues)\n        );\n\n        globalMatch = globalRegExp.exec(translatedMessage);\n      }\n    });\n    return translatedMessage;\n  }\n\n  private translateWithParams(patternCfg: any, params: any = {}) {\n    const { defaultLang, currentLang, compiler } = this.translateService;\n    const translations = this.translateService.store.translations[currentLang];\n    const defaultTranslations = this.translateService.store.translations[defaultLang];\n    const originalKey = patternCfg.gettext;\n\n    let originalValue = originalKey;\n    if (translations) {\n      if (translations[originalKey]) {\n        originalValue = translations[originalKey];\n      } else if (defaultTranslations) {\n        if (defaultTranslations[originalKey]) {\n          originalValue = defaultTranslations[originalKey];\n        }\n      }\n    }\n\n    let key = originalKey;\n    let value = originalValue;\n    const interpolateParams = {\n      ...params,\n      noPatternMessages: true\n    };\n\n    let match;\n    const pipeRegex = RegExp('{{\\\\s*([^\\\\s]+)\\\\s*\\\\|\\\\s*([^\\\\s]+)\\\\s*}}', 'g');\n    // tslint:disable-next-line:no-conditional-assignment\n    while ((match = pipeRegex.exec(originalKey)) !== null) {\n      const [placeholder, paramName, pipeName] = match;\n      if (this.pipes[pipeName]) {\n        key = key.replace(placeholder, `{{${paramName}}}`);\n        value = value.replace(placeholder, `{{${paramName}}}`);\n        interpolateParams[paramName] = this.pipes[pipeName](params[paramName]);\n      }\n    }\n\n    if (translations) {\n      translations[key] = compiler.compile(value, currentLang);\n    }\n    return this.translateService.instant(key, interpolateParams);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PatternMessagesService } from './pattern-messages.service';\nimport {\n  MissingTranslationHandler,\n  MissingTranslationHandlerParams,\n  TranslateParser,\n  TranslateService\n} from '@ngx-translate/core';\n\n@Injectable()\nexport class MissingTranslationCustomHandler implements MissingTranslationHandler {\n  translateService: TranslateService;\n  cache: any = {};\n\n  constructor(\n    private parser: TranslateParser,\n    private patternMessagesService: PatternMessagesService\n  ) {}\n\n  handle(params: MissingTranslationHandlerParams) {\n    const { key: messageKey, interpolateParams, translateService } = params;\n    this.translateService = translateService;\n\n    let translation = this.getFromCache(messageKey, interpolateParams);\n\n    if (!translation) {\n      const patternMessageTranslation = this.getPatternMessageTranslation(messageKey, interpolateParams);\n      if (patternMessageTranslation) {\n        translation = patternMessageTranslation;\n      } else {\n        translation = this.parser.interpolate(messageKey, interpolateParams);\n      }\n\n      this.addToCache(messageKey, interpolateParams, translation);\n    }\n\n    return translation;\n  }\n\n  private getFromCache(messageKey: string, interpolateParams: object): string {\n    const { currentLang } = this.translateService;\n    const currentCache = this.cache[currentLang] || {};\n    const cacheKey = this.getCacheKey(messageKey, interpolateParams);\n    return currentCache[cacheKey];\n  }\n\n  private addToCache(messageKey: string, interpolateParams: object, translation: string) {\n    const { currentLang } = this.translateService;\n    const currentCache = this.cache[currentLang] = this.cache[currentLang] || {};\n    const cacheKey = this.getCacheKey(messageKey, interpolateParams);\n    currentCache[cacheKey] = translation;\n  }\n\n  private getCacheKey(messageKey: string, interpolateParams: object): string {\n    return interpolateParams ? `${messageKey} ${JSON.stringify(interpolateParams)}` : messageKey;\n  }\n\n  private getPatternMessageTranslation(messageKey: string, interpolateParams: object): string {\n    const shouldTryPatternMessages = !interpolateParams || !((interpolateParams as any).noPatternMessages);\n\n    if (shouldTryPatternMessages) {\n      if (!this.patternMessagesService.translateService) {\n        this.patternMessagesService.translateService = this.translateService;\n      }\n      return this.patternMessagesService.translate(messageKey);\n    }\n\n    return undefined;\n  }\n}\n","// Just for translation annotation\n// Note: Own file because of conflicts if put in barrel directly.\nexport const _ = (str) => str;\nexport function gettext(str) {\n          return str;\n}\n","/* tslint:disable:max-line-length */\nimport { gettext } from './gettext';\n\nconst bulkOperationAuditLogTextPlaceholders = {\n  updatesList: {\n    capture: '$1',\n    translate: {\n      \"status='(.+?)'\": {\n        gettext: gettext('status: \"{{ status | translate }}\"'),\n        placeholders: {\n          status: '$1'\n        }\n      },\n      \"generalStatus='(.+?)'\": {\n        gettext: gettext('general status: \"{{ generalStatus | translate }}\"'),\n        placeholders: {\n          generalStatus: '$1'\n        }\n      },\n      \"progress='(.+?)'\": {\n        gettext: gettext('progress: \"{{ progress }}\"'),\n        placeholders: {\n          progress: '$1'\n        }\n      },\n      'note=(.+?)': {\n        gettext: gettext('note: \"{{ note }}\"'),\n        placeholders: {\n          note: '$1'\n        }\n      }\n    }\n  }\n};\n\nexport const MESSAGES = {\n  '^Access is denied$': {\n    gettext: gettext('Access denied.')\n  },\n  '^Alarm created$': {\n    gettext: gettext('Alarm created')\n  },\n  '^Alarm updated$': {\n    gettext: gettext('Alarm updated')\n  },\n  '^API is not available with the new domain$': {\n    gettext: gettext('Could not activate custom domain. DNS setup is incorrect.')\n  },\n  '^Application with given name already exist$': {\n    gettext: gettext('Application with given name already exists.')\n  },\n  '^Application with id (.+?) is already assigned to the tenant (.+?)$': {\n    gettext: gettext('This application is already assigned to tenant \"{{tenant}}\".'),\n    placeholders: {\n      tenant: '$2'\n    }\n  },\n  '^Apply software changes: (.+?)\\\\.?$': {\n    gettext: gettext('Apply software changes: {{ softwareChanges }}'),\n    placeholders: {\n      softwareChanges: {\n        capture: '$1',\n        translate: {\n          'install \"(.+?)\" \\\\(version: (.+?)\\\\)': {\n            gettext: gettext('install \"{{ softwareName }}\" (version: {{ softwareVersion }})'),\n            placeholders: {\n              softwareName: '$1',\n              softwareVersion: '$2'\n            }\n          },\n          'install \"([^\"]+)\"(?! \\\\(version: .+?\\\\))': {\n            gettext: gettext('install \"{{ softwareName }}\"'),\n            placeholders: {\n              softwareName: '$1'\n            }\n          },\n          'delete \"(.+?)\" \\\\(version: (.+?)\\\\)': {\n            gettext: gettext('delete \"{{ softwareName }}\" (version: {{ softwareVersion }})'),\n            placeholders: {\n              softwareName: '$1',\n              softwareVersion: '$2'\n            }\n          },\n          'delete \"([^\"]+)\"(?! \\\\(version: .+?\\\\))': {\n            gettext: gettext('delete \"{{ softwareName }}\"'),\n            placeholders: {\n              softwareName: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Assign device profile (.+?) to device (.+?)$': {\n    gettext: gettext('Assign device profile {{profileName}} to device {{deviceName}}'),\n    placeholders: {\n      profileName: '$1',\n      deviceName: '$2'\n    }\n  },\n  '^(.+)pplication for tenant (.+) with properties \\\\( (.+?) \\\\) already exists$': {\n    gettext: gettext(\n      'Application for tenant \"{{tenant}}\" with the following values ({{valuesList}}) already exists.'\n    ),\n    placeholders: {\n      tenant: '$2',\n      valuesList: '$3'\n    }\n  },\n  '^Authentication failed! : User account is locked$': {\n    gettext: gettext('Authentication failed due to: user account is locked.')\n  },\n  '^Availability monitoring record$': {\n    gettext: gettext('Availability monitoring record')\n  },\n  '^Can not activate a certificate which is either expired or not yet valid$': {\n    gettext: gettext('Cannot activate a certificate which is either expired or not yet valid.')\n  },\n  '^Cannot add certificate - certificate with (.+?) fingerprint already exists. : Certificate with (.+?) fingerprint already exists.': {\n    gettext: gettext(\n      'Could not add certificate. Certificate with {{fingerprint}} fingerprint already exists.'\n    ),\n    placeholders: {\n      fingerprint: '$1'\n    }\n  },\n  '^Cannot change password. : Provided token does not exist.$': {\n    gettext: gettext('Cannot change password: provided token is invalid.')\n  },\n  '^Cannot deploy module (.*)$': {\n    gettext: gettext('Cannot deploy module due to error: \"{{ errorMessage | translate }}\".'),\n    placeholders: {\n      errorMessage: '$1'\n    }\n  },\n  \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+) \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n    gettext: gettext(\n      'Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}}.'\n    ),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6'\n    }\n  },\n  \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+) near reserved keyword '(.+?)' \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n    gettext: gettext(\n      'Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}} near reserved keyword \"{{keyword}}\".'\n    ),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6',\n      keyword: '$7'\n    }\n  },\n  \"^Cannot deploy module (.+?)! : Compilation failed in module '(.+?)' in expression '(.+?)' : Incorrect syntax near '(.+?)' at line (\\\\d+) column (\\\\d+), please check the where clause \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n    gettext: gettext(\n      'Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": incorrect syntax near \"{{incorrectExpression}}\" at line {{line}} column {{column}}, check \"where\" clause.'\n    ),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      incorrectExpression: '$4',\n      line: '$5',\n      column: '$6'\n    }\n  },\n  \"^Cannot deploy module (.+?)! : Deployment failed in module '(.+?)' in expression '(.+?)' : Exception compiling script '(.+?)' of dialect '(.+?)': missing (.+?) before statement \\\\((.+?)\\\\) \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n    gettext: gettext(\n      'Could not deploy module \"{{moduleName}}\". Compilation failed in expression \"{{expression}}\": exception compiling script \"{{scriptName}}\" of dialect \"{{scriptDialect}}\": missing \"{{missingSyntax}}\" before statement \"{{affectedStatement}}\".'\n    ),\n    placeholders: {\n      moduleName: '$1',\n      expression: '$3',\n      scriptName: '$4',\n      scriptDialect: '$5',\n      missingSyntax: '$6',\n      affectedStatement: '$7'\n    }\n  },\n  \"^Cannot execute bulk operation on empty group. Group with id='(\\\\d+?)' doesn't have child assets.$\": {\n    gettext: gettext(\n      'Could not execute bulk operation on an empty group. Group with ID \"{{groupId}}\" has no child assets.'\n    ),\n    placeholders: {\n      groupId: '$1'\n    }\n  },\n  \"^Cannot execute bulk operation on empty group. DynamicGroup with id='(\\\\d+?)' doesn't have child assets$\": {\n    gettext: gettext(\n      'Could not execute bulk operation on an empty group. Smart group with ID \"{{groupId}}\" has no child assets.'\n    ),\n    placeholders: {\n      groupId: '$1'\n    }\n  },\n  '^Cannot parse X509 certificate. : Could not parse certificate: (.+?)$': {\n    gettext: gettext('Could not parse X.509 certificate: {{ failureReason | translate }}.'),\n    placeholders: {\n      failureReason: '$1'\n    }\n  },\n  '^Cannot reschedule bulk operation. All its operations are successful$': {\n    gettext: gettext('Cannot reschedule bulk operation. All its operations are already successful.')\n  },\n  '^Cannot reset user password : Cannot find user with such email.$': {\n    gettext: gettext('Cannot reset password for user with such email: email not found.')\n  },\n  '^Cannot update/delete application binary via this endpoint$': {\n    gettext: gettext('Cannot update/delete application binary via this endpoint')\n  },\n  \"^Can't delete user because it is used by another managed object$\": {\n    gettext: gettext(\n      'Cannot delete device with associated device owner because this owner is still assigned to other device(s). Try to remove only the device.'\n    )\n  },\n  '^Cep module created$': {\n    gettext: gettext('CEP module created')\n  },\n  '^Cep module updated$': {\n    gettext: gettext('CEP module updated')\n  },\n  '^Cep module deleted$': {\n    gettext: gettext('CEP module deleted')\n  },\n  '^Cep module \"(.+?)\" created$': {\n    gettext: gettext('CEP module \"{{name}}\" created'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Cep module \"(.+?)\" updated$': {\n    gettext: gettext('CEP module \"{{name}}\" updated'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Cep module \"(.+?)\" deleted$': {\n    gettext: gettext('CEP module \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Command state is invalid: (.+)$': {\n    gettext: gettext('Command state is invalid: {{violations}}'),\n    placeholders: {\n      violations: {\n        capture: '$1',\n        translate: {\n          '(\\\\w+?) - may not be null': {\n            gettext: gettext('\"{{field}}\" must not be null'),\n            placeholders: {\n              field: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Could not connect to endpoint (.+)\\\\. Could not verify `(.+)` host key with fingerprint `(.+)` for `(.+)` on port (.+)\\\\. If you expected that key, please remove the previous one from configuration to allow for connection\\\\.$': {\n    gettext: gettext(\n      'Could not connect to endpoint \"{{endpointName}}\". Could not verify {{keyType}} host key with fingerprint {{fingerprint}} for host {{host}} on port {{port}}. If you expected this key, please remove the previous one from configuration to allow for connection.'\n    ),\n    placeholders: {\n      endpointName: '$1',\n      keyType: '$2',\n      fingerprint: '$3',\n      host: '$4',\n      port: '$5'\n    }\n  },\n  '^Could not login to ssh server on endpoint \"(.+)\"\\\\. Provided credential for user \"(.+)\" is incorrect\\\\.$': {\n    gettext: gettext(\n      'Could not access SSH server on endpoint \"{{endpointName}}\". Provided credentials for user \"{{userName}}\" are incorrect.'\n    ),\n    placeholders: {\n      endpointName: '$1',\n      userName: '$2'\n    }\n  },\n  '^Could not save object remoteAccessUpdate: (.+)$': {\n    gettext: '{{errorMessages}}',\n    placeholders: {\n      errorMessages: {\n        capture: '$1',\n        translate: {\n          'Could not recognize host-key format': {\n            gettext: gettext('Could not recognize \"Host key\" format')\n          },\n          'Could not recognize key-pair format': {\n            gettext: gettext('Could not recognize the format of \"Public key\" or \"Private key\"')\n          }\n        }\n      }\n    }\n  },\n  '^Could not update user. : Error persisting user (.+?)!$': {\n    gettext: gettext('Could not update user \"{{username}}\".'),\n    placeholders: {\n      username: '$1'\n    }\n  },\n  'ˆCreate bulk operation$': {\n    gettext: gettext('Create bulk operation')\n  },\n  '^Create bulk operation: (.+)$': {\n    gettext: gettext('Create bulk operation: {{updatesList}}'),\n    placeholders: bulkOperationAuditLogTextPlaceholders\n  },\n  '^Creation ramp must be greater than (\\\\d+?)$': {\n    gettext: gettext('Bulk operation delay must be greater than {{minSeconds}} seconds.'),\n    placeholders: {\n      minSeconds: '$1'\n    }\n  },\n  '^Created container$': {\n    gettext: gettext('Container created.')\n  },\n  '^Created pod: (.+)$': {\n    gettext: gettext('Pod \"{{imageName}}\" created.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^CSV file contained empty dataset$': {\n    gettext: gettext('No entries found in uploaded CSV file.')\n  },\n  '^Cycle detected for route (.+?)!$': {\n    gettext: gettext('Cycle detected for route {{route}}.'),\n    placeholders: {\n      route: '$1'\n    }\n  },\n  '^Data broker processing is currently overloaded and may stop forwarding your data\\\\. Please contact support\\\\.$': {\n    gettext: gettext(\n      'Data broker processing is currently overloaded and may stop forwarding your data. Please contact support.'\n    )\n  },\n  '^Data broker processing is not able to connect do destination tenant, thus data forwarding is not working\\\\. Please contact support\\\\.$': {\n    gettext: gettext(\n      'Data broker processing is not able to connect to destination tenant, thus data forwarding is not working. Please contact support.'\n    )\n  },\n  '^Delete bulk operation$': {\n    gettext: gettext('Delete bulk operation')\n  },\n  '^Delete bulk operation: (.+)$': {\n    gettext: gettext('Delete bulk operation: {{updatesList}}'),\n    placeholders: bulkOperationAuditLogTextPlaceholders\n  },\n  \"^Device id '(.+?)' contains '(.+?)' character which is not permitted.$\": {\n    gettext: gettext('ID \"{{deviceId}}\" contains invalid character: \"{{invalidCharacter}}\".'),\n    placeholders: {\n      deviceId: '$1',\n      invalidCharacter: '$2'\n    }\n  },\n  \"^Device name: '(.+?)', alarm text: '(.+?)'$\": {\n    gettext: gettext('Device name: \"{{deviceName}}\", alarm text: \"{{alarmText | translate}}\"'),\n    placeholders: {\n      deviceName: '$1',\n      alarmText: '$2'\n    }\n  },\n  '^Display name$': {\n    gettext: gettext('Login alias')\n  },\n  '^Domain name in uploaded certificate differs from the one in use$': {\n    gettext: gettext(\n      'Domain name in uploaded certificate differs from the one in use. Please deactivate the custom domain before uploading new certificate.'\n    )\n  },\n  '^Domain name is already in use by another tenant!$': {\n    gettext: gettext('Domain name is already used by another tenant.')\n  },\n  '^Duplicated connector for instanceUrl (.+?)!$': {\n    gettext: gettext('Target URL {{targetUrl}} already used by another connector.'),\n    placeholders: {\n      targetUrl: '$1'\n    }\n  },\n  '^Duplicated connector for name (.+?)!$': {\n    gettext: gettext('Connector name \"{{name}}\" already used by another connector.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Entry is outside of the target dir: (.+)$': {\n    gettext: gettext('File entry outside of the target directory: \"{{path}}\".'),\n    placeholders: {\n      path: '$1'\n    }\n  },\n  '^Error during password validation. : Password must have at least (\\\\d+?) characters and no more than (\\\\d+?) and must contain only Latin1 characters.$': {\n    gettext: gettext(\n      'Password is invalid. It must have at least {{minCharactersCount}} and no more than {{maxCharactersCount}} characters.'\n    ),\n    placeholders: {\n      minCharactersCount: '$1',\n      maxCharactersCount: '$2'\n    }\n  },\n  '^Error during password validation. : Your password has been used already. Choose another.$': {\n    gettext: gettext('This password has already been used earlier. Use a different one.')\n  },\n  \"^Error in statement (.+?):(.+?)! : Incorrect syntax near '(.+?)' near reserved keyword '(.+?)' \\\\[([\\\\S\\\\s]+?)\\\\]$\": {\n    gettext: gettext(\n      'Error in statement {{moduleName}}:{{statementNumber}}. Incorrect syntax near expression \"{{expression}}\" near reserved keyword \"{{keyword}}\".'\n    ),\n    placeholders: {\n      moduleName: '$1',\n      statementNumber: '$2',\n      expression: '$3',\n      keyword: '$4'\n    }\n  },\n  '^External id not found; external id = ID \\\\[type=(.+?), value=(.+?)\\\\]$': {\n    gettext: gettext('External ID not found for type \"{{type}}\" and value \"{{value}}\".'),\n    placeholders: {\n      type: '$1',\n      value: '$2'\n    }\n  },\n  '^Error occurred when trying to find an Application for id ID (.+) : Could not find application by ID (\\\\d+)$': {\n    gettext: gettext('Could not find application by ID {{applicationId}}.'),\n    placeholders: {\n      applicationId: '$2'\n    }\n  },\n  '^Http status code: 404\\n{error=\"options/Not Found\",message=\"Unable to find option by given key: sigfox-agent/provider.token\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"}': {\n    gettext: gettext('Unable to find option by given key: sigfox-agent/provider.token')\n  },\n  '^Failed to delete application.  : Cannot remove application assigned to other tenants.$': {\n    gettext: gettext('Could not delete application assigned to other tenants.')\n  },\n  '^Failed to extract certificate from PKCS12$': {\n    gettext: gettext('Failed to extract certificate from PKCS12.')\n  },\n  '^Failed to update domain at the platform$': {\n    gettext: gettext('Failed to update domain at the platform.')\n  },\n  \"^Finding device data from database failed : No managedObject for id '(.+?)'!$\": {\n    gettext: gettext('Could not find managed object with ID \"{{deviceId}}\".'),\n    placeholders: {\n      deviceId: '$1'\n    }\n  },\n  '^Following mandatory fields should be included: (.+?)$': {\n    gettext: gettext('Following mandatory fields should be included: {{fields}}'),\n    placeholders: {\n      fields: '$1'\n    }\n  },\n  '^Global Role updated$': {\n    gettext: gettext('Global role updated')\n  },\n  '^Global Role (.+?) updated$': {\n    gettext: gettext('Global role \"{{name}}\" updated'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Global Role (.+?) updated: (.+)$': {\n    gettext: gettext('Global role \"{{name}}\" updated: {{updatesList}}'),\n    placeholders: {\n      name: '$1',\n      updatesList: {\n        capture: '$2',\n        translate: {\n          'applications \\\\[([^\\\\]]+?)\\\\] added': {\n            gettext: gettext('applications {{list}} added'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'applications \\\\[([^\\\\]]+?)\\\\] removed': {\n            gettext: gettext('applications {{list}} removed'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'roles \\\\[([^\\\\]]+?)\\\\] added': {\n            gettext: gettext('roles {{list}} added'),\n            placeholders: {\n              list: '$1'\n            }\n          },\n          'roles \\\\[([^\\\\]]+?)\\\\] removed': {\n            gettext: gettext('roles {{list}} removed'),\n            placeholders: {\n              list: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^Global Roles$': {\n    gettext: gettext('Global roles')\n  },\n  '^Operation updated: (.+)$': {\n    gettext: gettext('Operation updated: {{updatesList}}'),\n    placeholders: {\n      updatesList: {\n        capture: '$1',\n        translate: {\n          \"status='(.+?)'\": {\n            gettext: gettext('status: \"{{ status | translate }}\"'),\n            placeholders: {\n              status: '$1'\n            }\n          },\n          \"description='(.+?)'\": {\n            gettext: gettext('description: \"{{ description | translate }}\"'),\n            placeholders: {\n              description: '$1'\n            }\n          },\n          \"device name='(.+?)'\": {\n            gettext: gettext('device name: \"{{ deviceName }}\"'),\n            placeholders: {\n              deviceName: '$1'\n            }\n          },\n          \"failure reason='(.+?)'\": {\n            gettext: gettext('failure reason: \"{{ failureReason | translate }}\"'),\n            placeholders: {\n              failureReason: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  '^ID \\\\[type=(.+?), value=(.+?)\\\\] was already bound to different Global ID.$': {\n    gettext: gettext('External ID \"{{value}}\" of the type \"{{type}}\" already exists.'),\n    placeholders: {\n      type: '$1',\n      value: '$2'\n    }\n  },\n  '^Invalid credentials! : Bad credentials$': {\n    gettext: gettext('Invalid credentials.')\n  },\n  '^Invalid credentials! : No phone number provided$': {\n    gettext: gettext('Log into the management tenant first and enter your phone number.')\n  },\n  '^Inventory Role removed$': {\n    gettext: gettext('Inventory role removed')\n  },\n  '^Inventory Role (.+?) removed': {\n    gettext: gettext('Inventory role \"{{name}}\" deleted.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Inventory Role updated$': {\n    gettext: gettext('Inventory role updated')\n  },\n  '^Inventory Role (.+?) updated': {\n    gettext: gettext('Inventory role \"{{name}}\" updated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^I/O error: Connection refused; nested exception is Connection refused : Connection refused': {\n    gettext: gettext('Connection refused')\n  },\n  '^I/O error: Read timed out; nested exception is Read timed out : Read timed out': {\n    gettext: gettext('Read timed out')\n  },\n  '^Log file requested$': {\n    gettext: gettext('Log file requested.')\n  },\n  '^Managed object deleted$': {\n    gettext: gettext('Managed object deleted')\n  },\n  '^Managed object \"(.+?)\" deleted$': {\n    gettext: gettext('Managed object \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Maximum file size exceeded$': {\n    gettext: gettext('Maximum file size exceeded.')\n  },\n  \"^Message with ID (.+?) doesn't exist in smart rest template (.+?)$\": {\n    gettext: gettext(\n      'Message with ID \"{{messageId}}\" doesn\\'t exist in SmartREST template with ID \"{{templateId}}\"'\n    ),\n    placeholders: {\n      messageId: '$1',\n      templateId: '$2'\n    }\n  },\n  '^NewDeviceRequest for id = (.+?) already exists.$': {\n    gettext: gettext('Device registration request with ID {{id}} already exists.'),\n    placeholders: {\n      id: '$1'\n    }\n  },\n  '^No communication with device since (.+?)$': {\n    gettext: gettext('No communication with device since {{timestamp | absoluteDate}}.'),\n    placeholders: {\n      timestamp: '$1'\n    }\n  },\n  '^No data received from device within required interval.$': {\n    gettext: gettext('No data received from device within required interval.')\n  },\n  '^No LoRa provider settings are found. Please configure the connectivity settings.$': {\n    gettext: gettext(\n      'No LoRa provider settings are found. Please configure the connectivity settings.'\n    )\n  },\n  '^Not within any context!$': {\n    gettext: gettext('A problem occurred with microservice subscription.')\n  },\n  '^Maximum age cannot be bigger than 10 years.$': {\n    gettext: gettext('Maximum age cannot be bigger than 10 years.')\n  },\n  '^Microservice application name incorrect. Please use only lower-case letters, digits and dashes. Maximum length is (\\\\d+) characters.$': {\n    gettext: gettext(\n      'Microservice application name is incorrect: only lower case letters, digits and dashes allowed. Maximum length: {{maxLength}}.'\n    ),\n    placeholders: {\n      maxLength: '$1'\n    }\n  },\n  '^Microservice not available.*$': {\n    gettext: gettext('Microservice is not available.')\n  },\n  '^Operation created$': {\n    gettext: gettext('Operation created.')\n  },\n  '^Operation updated$': {\n    gettext: gettext('Operation updated.')\n  },\n  \"^Operation created: status='(.+?)'.\": {\n    gettext: gettext('Operation created: status: \"{{ status | translate }}\".'),\n    placeholders: {\n      status: '$1'\n    }\n  },\n  '^Option created$': {\n    gettext: gettext('Option created.')\n  },\n  '^Option \"(.+?)\" created$': {\n    gettext: gettext('Option \"{{option}}\" created.'),\n    placeholders: {\n      option: '$1'\n    }\n  },\n  '^Option deleted$': {\n    gettext: gettext('Option deleted.')\n  },\n  '^Option \"(.+?)\" deleted$': {\n    gettext: gettext('Option \"{{option}}\" deleted.'),\n    placeholders: {\n      option: '$1'\n    }\n  },\n  '^Owner field error. : Cannot introduce cyclic dependency.': {\n    gettext: gettext('Could not introduce cyclic ownership dependency.')\n  },\n  '^Password change is temporary blocked.$': {\n    gettext: gettext('Password change is temporarily blocked.')\n  },\n  '^Password cipher does not match': {\n    gettext: gettext('Password cipher does not match.')\n  },\n  '^Platform application cannot be added to, nor removed from any tenant.$': {\n    gettext: gettext('Platform application cannot be added to, nor removed from any tenant.')\n  },\n  '^Private key must be provided in KEY_PAIR credentials$': {\n    gettext: gettext(\n      'Private key must be provided when \"Public/private keys\" option is selected.'\n    )\n  },\n  '^Private key cipher does not match': {\n    gettext: gettext('Private key cipher does not match')\n  },\n  '^Protocol \"(.+?)\" does not support \"(.+?)\" credentials type$': {\n    gettext: gettext(\n      'Protocol \"{{protocol}}\" does not support \"{{credentialsType}}\" credentials type.'\n    ),\n    placeholders: {\n      protocol: '$1',\n      credentialsType: '$2'\n    }\n  },\n  '^pulling image \"(.+)\"$': {\n    gettext: gettext('Pulling image: \"{{imageName}}\".'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Real-time event processing is currently overloaded and may stop processing your events\\\\. Please contact support\\\\.$': {\n    gettext: gettext(\n      'Real-time event processing is currently overloaded and may stop processing your events. Please contact support.'\n    )\n  },\n  '^Resource ID \\\\[type=com_cumulocity_model_idtype_GId, value=(.+?)\\\\] for this request not found.$': {\n    gettext: gettext('Could not find the resource with ID \"{{id}}\".'),\n    placeholders: {\n      id: '$1'\n    }\n  },\n  '^Retrieve configuration snapshot from device (.+?)': {\n    gettext: gettext('Retrieve configuration snapshot from device {{deviceName}}'),\n    placeholders: {\n      deviceName: '$1'\n    }\n  },\n  '^Retrieve (.+?) configuration snapshot from device (.+?)': {\n    gettext: gettext(\n      'Retrieve {{configurationType}} configuration snapshot from device {{deviceName}}'\n    ),\n    placeholders: {\n      configurationType: '$1',\n      deviceName: '$2'\n    }\n  },\n  '^Scaled up replica set (.+) to (\\\\d+)$': {\n    gettext: gettext('Replica set \"{{replicaSetName}}\" scaled up to \"{{scaleNumber}}\".'),\n    placeholders: {\n      replicaSetName: '$1',\n      scaleNumber: '$2'\n    }\n  },\n  '^Send configuration snapshot (.+?) of configuration type (.+?) to device (.+?)': {\n    gettext: gettext(\n      'Send configuration snapshot {{snapshotName}} of configuration type {{configurationType}} to device {{deviceName}}'\n    ),\n    placeholders: {\n      snapshotName: '$1',\n      configurationType: '$2',\n      deviceName: '$3'\n    }\n  },\n  '^Send configuration snapshot (.+?) to device (.+?)': {\n    gettext: gettext('Send configuration snapshot {{snapshotName}} to device {{deviceName}}'),\n    placeholders: {\n      snapshotName: '$1',\n      deviceName: '$2'\n    }\n  },\n  '^Simulator state is invalid: (.+)$': {\n    gettext: gettext('Simulator state is invalid: {{violations}}'),\n    placeholders: {\n      violations: {\n        capture: '$1',\n        translate: {\n          '(\\\\w+?) - may not be null': {\n            gettext: gettext('\"{{field}}\" should not be null'),\n            placeholders: {\n              field: '$1'\n            }\n          },\n          '(\\\\w+?) - must be less than or equal to (\\\\d+)': {\n            gettext: gettext('\"{{field}}\" must be less than or equal to {{maxValue}}'),\n            placeholders: {\n              field: '$1',\n              maxValue: '$2'\n            }\n          },\n          '(\\\\w+?) - should not contain null values': {\n            gettext: gettext('\"{{field}}\" should not contain null values'),\n            placeholders: {\n              field: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  \"^Smart rest template (.+?) doesn't exist$\": {\n    gettext: gettext('SmartREST template with id \"{{templateId}}\" doesn\\'t exist'),\n    placeholders: {\n      templateId: '$1'\n    }\n  },\n  '^Smart rule created$': {\n    gettext: gettext('Smart rule created.')\n  },\n  '^Smart rule updated$': {\n    gettext: gettext('Smart rule updated.')\n  },\n  '^Smart rule enabled$': {\n    gettext: gettext('Smart rule activated.')\n  },\n  '^Smart rule disabled$': {\n    gettext: gettext('Smart rule deactivated.')\n  },\n  '^Smart rule deleted$': {\n    gettext: gettext('Smart rule deleted.')\n  },\n  '^Smart rule \"(.+?)\" created$': {\n    gettext: gettext('Smart rule \"{{name}}\" created.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" updated$': {\n    gettext: gettext('Smart rule \"{{name}}\" updated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" enabled$': {\n    gettext: gettext('Smart rule \"{{name}}\" activated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" disabled$': {\n    gettext: gettext('Smart rule \"{{name}}\" deactivated.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Smart rule \"(.+?)\" deleted$': {\n    gettext: gettext('Smart rule \"{{name}}\" deleted.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Started container$': {\n    gettext: gettext('Container started.')\n  },\n  '^Successfully assigned (.+) to (.+)$': {\n    gettext: gettext('\"{{imageName}}\" assigned to \"{{address}}\".'),\n    placeholders: {\n      imageName: '$1',\n      address: '$2'\n    }\n  },\n  '^Successfully pulled image \"(.+)\"$': {\n    gettext: gettext('Image \"{{imageName}}\" pulled.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Tenant creation failed. : Tenant with given id already exists.$': {\n    gettext: gettext('Could not create a tenant. Tenant with given domain/URL already exists.')\n  },\n  '^Tenant id cannot be a reserved sql keyword \"(.+?)\".$': {\n    gettext: gettext('Could not use a reserved SQL keyword \"{{tenantId}}\" as a domain name.'),\n    placeholders: {\n      tenantId: '$1'\n    }\n  },\n  '^Tenant \"(.+?)\" activated$': {\n    gettext: gettext('Tenant \"{{tenant}}\" activated.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant (.+?) has sub-tenants, please remove them first!$': {\n    gettext: gettext('Could not remove tenant \"{{tenant}}\". Remove its subtenants first.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant activated$': {\n    gettext: gettext('Tenant activated')\n  },\n  '^Tenant \"(.+?)\" created$': {\n    gettext: gettext('Tenant \"{{tenant}}\" created.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant created$': {\n    gettext: gettext('Tenant created')\n  },\n  '^Tenant \"(.+?)\" deleted$': {\n    gettext: gettext('Tenant \"{{tenant}}\" deleted.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant deleted$': {\n    gettext: gettext('Tenant deleted')\n  },\n  '^Tenant \"(.+?)\" suspended$': {\n    gettext: gettext('Tenant \"{{tenant}}\" suspended.'),\n    placeholders: {\n      tenant: '$1'\n    }\n  },\n  '^Tenant suspended$': {\n    gettext: gettext('Tenant suspended')\n  },\n  '^Tenant \"(.+?)\" updated: (.+?)$': {\n    gettext: gettext('Tenant \"{{tenant}}\" updated: {{properties}}.'),\n    placeholders: {\n      tenant: '$1',\n      properties: '$2'\n    }\n  },\n  '^Tenant updated$': {\n    gettext: gettext('Tenant updated')\n  },\n  '^Too Many Requests$': {\n    gettext: gettext('Too many requests. Try again later.')\n  },\n  \"^User alias equals username '(.+)'$\": {\n    gettext: gettext('Username and login alias must be different.')\n  },\n  '^User created$': {\n    gettext: gettext('User created')\n  },\n  '^User (.+?) created$': {\n    gettext: gettext('User \"{{name}}\" created'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^User deleted$': {\n    gettext: gettext('User deleted')\n  },\n  '^User (.+?) deleted$': {\n    gettext: gettext('User \"{{name}}\" deleted'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^User updated$': {\n    gettext: gettext('User updated')\n  },\n  '^User (.+?) updated: (.+)$': {\n    gettext: gettext('User \"{{name}}\" updated: {{updatesList}}'),\n    placeholders: {\n      name: '$1',\n      updatesList: {\n        capture: '$2',\n        translate: {\n          \"delegatedBy='(.+?)'\": {\n            gettext: gettext('delegated by: \"{{delegate}}\"'),\n            placeholders: {\n              delegate: '$1'\n            }\n          },\n          \"owner='(.+?)'\": {\n            gettext: gettext('owner: \"{{owner}}\"'),\n            placeholders: {\n              owner: '$1'\n            }\n          },\n          'inventory assignment \\\\[(.+?)\\\\] added': {\n            gettext: gettext('inventory assignment [{{inventoryAssignment}}] added'),\n            placeholders: {\n              inventoryAssignment: '$1'\n            }\n          },\n          'inventory assignment \\\\[(.+?)\\\\] removed': {\n            gettext: gettext('inventory assignment [{{inventoryAssignment}}] removed'),\n            placeholders: {\n              inventoryAssignment: '$1'\n            }\n          },\n          'applications \\\\[(.+?)\\\\] added$': {\n            gettext: gettext('applications [{{applicationsList}}] added'),\n            placeholders: {\n              applicationsList: '$1'\n            }\n          },\n          'applications \\\\[(.+?)\\\\] removed$': {\n            gettext: gettext('applications [{{applicationsList}}] removed'),\n            placeholders: {\n              applicationsList: '$1'\n            }\n          },\n          'global roles \\\\[(.+?)\\\\] added$': {\n            gettext: gettext('global roles [{{globalRolesList}}] added'),\n            placeholders: {\n              globalRolesList: '$1'\n            }\n          },\n          'global roles \\\\[(.+?)\\\\] removed$': {\n            gettext: gettext('global roles [{{globalRolesList}}] removed'),\n            placeholders: {\n              globalRolesList: '$1'\n            }\n          }\n        }\n      }\n    }\n  },\n  \"^User with username '(.+?)' already exists! : Duplicated: (.+?)$\": {\n    gettext: gettext('User \"{{username}}\" already exists.'),\n    placeholders: {\n      username: '$1'\n    }\n  },\n  \"^User with username or alias '(.+)' already exists! : Duplicated: (.+)$\": {\n    gettext: gettext('User with username or login alias \"{{usernameOrAlias}}\" already exists.'),\n    placeholders: {\n      usernameOrAlias: '$1'\n    }\n  },\n  \"^User with email '(.+?)' already exists! : Duplicated: (.+?)$\": {\n    gettext: gettext('User with email \"{{email}}\" already exists.'),\n    placeholders: {\n      email: '$1'\n    }\n  },\n  '^unable to find option with given key (.+?) : Could not find entity Option by ID (.+?)!$': {\n    gettext: gettext('Unable to get tenant option: \"{{option}}\".'),\n    placeholders: {\n      option: '$2'\n    }\n  },\n  '^unable to find option with given key (.+?) : There is no system property for key (.+?)$': {\n    gettext: gettext('Unable to get system option: \"{{option}}\".'),\n    placeholders: {\n      option: '$2'\n    }\n  },\n  '^Write failed with error code 16733 and error message \\'trying to index text where term list is too big, max is 4mb _id: \"(.+?)\"\\'$': {\n    gettext: gettext('The uploaded image cannot be bigger than 4 MB. Please upload a smaller one.')\n  },\n  '^Write failed with error code 17280 and error message \\'WiredTigerIndex::insert: key too large to index, failing (.+?) { : \"(.+?)\" }\\'$': {\n    gettext: gettext('The chosen name is too long. Please try a shorter one.')\n  },\n  '^You have reached devices limit. No more devices can be registered.$': {\n    gettext: gettext('You reached devices limit. No more devices can be registered.')\n  },\n  '^(.+) succeeded for volume \"(.+)\"': {\n    gettext: gettext('Operation \"{{operation}}\" succeeded for volume \"{{volume}}\".'),\n    placeholders: {\n      operation: '$1',\n      volume: '$2'\n    }\n  },\n  \"^Exception on tenant (.+) in statement '(.+)': Invocation exception when invoking method '(.+)' of class '(.+)' passing parameters \\\\[(.+)\\\\] for statement '(.+)': (.+) : (.+)$\": {\n    gettext: gettext(\n      'Exception on tenant {{tenantId}} in statement \"{{moduleName}}\": Invocation exception when invoking method \"{{methodName}}\" of class \"{{classPath}}\" passing parameters [{{parameters}}] for statement \"{{statement}}\": {{exceptionType}} : {{exceptionMessage}}.'\n    ),\n    placeholders: {\n      tenantId: '$1',\n      moduleName: '$2',\n      methodName: '$3',\n      classPath: '$4',\n      parameters: '$5',\n      statement: '$6',\n      exceptionType: '$7',\n      exceptionMessage: '$8'\n    }\n  },\n  '^No nodes are available that match all of the predicates: (.+).$': {\n    gettext: gettext('No nodes are available that match all of the predicates: [{{predicates}}].'),\n    placeholders: {\n      predicates: '$1'\n    }\n  },\n  '^Readiness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n    gettext: gettext(\n      'Readiness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'\n    ),\n    placeholders: {\n      requestMethod: '$1',\n      uri: '$2',\n      protocol: '$3'\n    }\n  },\n  '^Liveness probe failed: (.+) (.+): (.+): request canceled while waiting for connection \\\\(Client.Timeout exceeded while awaiting headers\\\\)$': {\n    gettext: gettext(\n      'Liveness probe failed: {{requestMethod}} {{uri}}: {{protocol}}: request canceled while waiting for connection (Client.Timeout exceeded while awaiting headers).'\n    ),\n    placeholders: {\n      requestMethod: '$1',\n      uri: '$2',\n      protocol: '$3'\n    }\n  },\n  '^Error syncing pod$': {\n    gettext: gettext('Pod synchronization error.')\n  },\n  '^Failed create pod sandbox.$': {\n    gettext: gettext('Pod sandbox creation failed.')\n  },\n  '^Exception on tenant (.+) in statement \\'(.+)\\': Http status code: (\\\\d+) \\\\{error=\"alarm/Unprocessable Entity\",message=\"(.+)\",info=\"https://www.cumulocity.com/guides/reference-guide/#error_reporting\",details=\"null\"\\\\}$': {\n    gettext: gettext(\n      'Exception on tenant {{tenantId}} in statement \"{{statement}}\": HTTP status code: {{httpStatusCode}} : {{message | translate}}'\n    ),\n    placeholders: {\n      tenantId: '$1',\n      statement: '$2',\n      httpStatusCode: '$3',\n      message: '$4'\n    }\n  },\n  \"^User '(.+)' is managed by a remote identity management service defined by an administrator, direct update is forbidden$\": {\n    gettext: gettext(\n      'User \"{{userName}}\" is managed by a remote identity management service defined by an administrator, direct update is forbidden.'\n    ),\n    placeholders: {\n      userName: '$1'\n    }\n  },\n  '^Added new child device to \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Added new child device to \"{{parentDeviceName}}\" (ID: {{parentDeviceId}}).'),\n    placeholders: {\n      parentDeviceName: '$1',\n      parentDeviceId: '$2'\n    }\n  },\n  '^Updated child device of \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Updated child device of \"{{parentDeviceName}}\" (ID: {{parentDeviceId}}).'),\n    placeholders: {\n      parentDeviceName: '$1',\n      parentDeviceId: '$2'\n    }\n  },\n  '^Added child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Added child device \"{{name}}\" (ID: {{id}}).'),\n    placeholders: {\n      name: '$1',\n      id: '$2'\n    }\n  },\n  '^Removed child device \"(.+)\" \\\\(ID: (.+)\\\\).$': {\n    gettext: gettext('Removed child device \"{{name}}\" (ID: {{id}}).'),\n    placeholders: {\n      name: '$1',\n      id: '$2'\n    }\n  },\n  '^Change value of \"(.+)\" to (.+) (.+).$': {\n    gettext: gettext('Change value of \"{{name}}\" to {{value}}{{unit}}.'),\n    placeholders: {\n      name: '$1',\n      value: '$2',\n      unit: '$3'\n    }\n  },\n  '^Change value of \"(.+)\" to (.+).$': {\n    gettext: gettext('Change value of \"{{name}}\" to {{value}}.'),\n    placeholders: {\n      name: '$1',\n      value: '$2'\n    }\n  },\n  '^Change status of \"(.+)\" to \"(.+)\".$': {\n    gettext: gettext('Change status of \"{{name}}\" to \"{{label}}\".'),\n    placeholders: {\n      name: '$1',\n      label: '$2'\n    }\n  },\n  '^Send message \"(.+)\".$': {\n    gettext: gettext('Send message \"{{str}}\".'),\n    placeholders: {\n      str: '$1'\n    }\n  },\n  '^Close relay (.+).$': {\n    gettext: gettext('Close relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Open relay (.+).$': {\n    gettext: gettext('Open relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Change trace status to (.+).$': {\n    gettext: gettext('Change trace status to {{state | translate}}.'),\n    placeholders: {\n      state: '$1'\n    }\n  },\n  '^Change relay status to (.+).$': {\n    gettext: gettext('Change relay status to {{status | translate}}.'),\n    placeholders: {\n      status: '$1'\n    }\n  },\n  '^Closing relay (.+).$': {\n    gettext: gettext('Closing relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Opening relay (.+).$': {\n    gettext: gettext('Opening relay {{number}}.'),\n    placeholders: {\n      number: '$1'\n    }\n  },\n  '^Update bulk operation$': {\n    gettext: gettext('Update bulk operation')\n  },\n  '^Update bulk operation: (.+)$': {\n    gettext: gettext('Update bulk operation: {{updatesList}}'),\n    placeholders: bulkOperationAuditLogTextPlaceholders\n  },\n  '^Update firmware to: \"?(.+?)\"? \\\\(version: (.+)\\\\)\\\\.?$': {\n    gettext: gettext('Update firmware to: \"{{ name }}\" (version: {{ version }})'),\n    placeholders: {\n      name: '$1',\n      version: '$2'\n    }\n  },\n  '^Update firmware to: \"?(.+?)\"?\\\\.?$': {\n    gettext: gettext('Update firmware to: \"{{ name }}\"'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Update configuration to (.+).$': {\n    gettext: gettext('Update configuration to: {{ name }}.'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Apply device profile: (.+).?$': {\n    gettext: gettext('Apply device profile: {{ name }}'),\n    placeholders: {\n      name: '$1'\n    }\n  },\n  '^Execute generic command: (.+).?$': {\n    gettext: gettext('Execute generic command: {{command}}'),\n    placeholders: {\n      command: '$1'\n    }\n  },\n  '^Failed to refresh application. : Cannot refresh non local-hosted application.$': {\n    gettext: gettext('Could not reactivate the application as it is not hosted locally.')\n  },\n  '^Failed to refresh application. : Cannot refresh application without active version id.$': {\n    gettext: gettext('Could not reactivate the application as it has no active version.')\n  },\n  // TODO: remove if we decide not to translate such messages:\n  // '^Killing container with id (.+):Need to kill Pod$': {\n  //   gettext: gettext('Killing container with ID \"{{containerId}}\". Need to kill Pod.'),\n  //   placeholders: {\n  //     containerId: '$1'\n  //   }\n  // },\n  '^Scaled down replica set (.+) to (\\\\d+)$': {\n    gettext: gettext('Replica set \"{{replicaSetName}}\" scaled down to \"{{scaleNumber}}\".'),\n    placeholders: {\n      replicaSetName: '$1',\n      scaleNumber: '$2'\n    }\n  },\n  '^Deleted pod: (.+)$': {\n    gettext: gettext('Pod \"{{imageName}}\" deleted.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Container image \"(.+)\" already present on machine$': {\n    gettext: gettext('Container image \"{{imageName}}\" already exists.'),\n    placeholders: {\n      imageName: '$1'\n    }\n  },\n  '^Error updating tenant! Cannot insert second configuration for Password code grant internal/Bad Request$': {\n    gettext: gettext(\n      'This login mode was already set by another administrator. Refresh the page to update the data.'\n    )\n  }\n};\n","import { Injectable } from '@angular/core';\n\n/**\n * A service to provide unmodified, cached translations for angular.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CachedLocaleDictionaryService {\n  cachedDictionary = {};\n}\n","import { HttpClient } from '@angular/common/http';\nimport { TranslateLoader } from '@ngx-translate/core';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\nimport { Inject, Injectable } from '@angular/core';\nimport { LOCALE_PATH } from './locale.path';\nimport { LANGUAGES } from './languages';\nimport { OptionsService } from '../common/options.service';\nimport { mapKeys } from 'lodash-es';\nimport { CachedLocaleDictionaryService } from './cached-locale-dictionary.service';\n\n@Injectable()\nexport class TranslateCustomLoader implements TranslateLoader {\n  constructor(\n    private http: HttpClient,\n    private optionsService: OptionsService,\n    private cachedLocaleDictionaryService: CachedLocaleDictionaryService,\n    @Inject(LOCALE_PATH) private path: string = null,\n    @Inject(LANGUAGES) private languages: any = null\n  ) {}\n\n  getTranslation(lang: string): Observable<any> {\n    const path = this.path || '';\n    let url = `${path}${lang}.json`;\n    if (this.languages && this.languages[lang] && this.languages[lang].url) {\n      url = this.languages[lang].url;\n    }\n\n    return this.http.get(url).pipe(\n      map(d => {\n        if (this.optionsService.langsDetails && this.optionsService.langsDetails[lang]) {\n          return { ...d[lang], ...this.optionsService.langsDetails[lang] };\n        }\n        return d[lang];\n      }),\n      tap(dictionary => {\n        this.cachedLocaleDictionaryService.cachedDictionary[lang] = dictionary;\n      }),\n      map(dictionary => this.getDictionaryWithTrimmedKeys(dictionary)),\n      catchError(() => of({}))\n    );\n  }\n\n  /**\n   * We want to have translation keys unified, so they don't contain unnecessary spaces and line breaks.\n   * This way we can dynamically build keys from HTML, and match them to extracted string, that might be HTML as well.\n   */\n  getDictionaryWithTrimmedKeys(dictionary: object) {\n    return mapKeys(dictionary, (value, key) =>\n      trimTranslationKey(key)\n    );\n  }\n\n}\n\nexport function trimTranslationKey(key) {\n  return key.replace(/(\\r\\n|\\n|\\r)/gm, '').replace(/\\s{2,}/g, ' ').trim();\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateDefaultParser } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\nimport { trimTranslationKey } from './translate.loader';\n\n@Injectable()\nexport class TranslateParserCustom extends TranslateDefaultParser {\n  getValue(target: any, key: string): any {\n    const trimmedKey =  trimTranslationKey(key);\n    let translated = get(target, [trimmedKey]);\n    if (!translated) {\n      const keys = key.split('.');\n      if (keys.length > 1) {\n        translated = get(target, key);\n      }\n    }\n    return translated;\n  }\n}\n","import { TranslateDirective, TranslateService } from '@ngx-translate/core';\nimport { ChangeDetectorRef, Directive, ElementRef, EventEmitter } from '@angular/core';\n\n@Directive({\n  selector: '[translate],[ngx-translate]'\n})\nexport class C8yTranslateDirective extends TranslateDirective {\n  /**\n   * Used to get private element property from TranslateDirective, so it doesn't throw tsErrors\n   */\n  private get _elementRef(): ElementRef {\n    return (this as any).element;\n  }\n\n  /**\n   * Used to get private translateService property from TranslateDirective, so it doesn't throw tsErrors\n   */\n  private get _translateService(): TranslateService {\n    return (this as any).translateService;\n  }\n\n  /**\n   * Used to trigger events when html is replaced by directive.\n   */\n  htmlUpdateEvent: EventEmitter<void> = new EventEmitter<void>();\n\n  constructor(\n    translateService: TranslateService,\n    element: ElementRef,\n    _ref: ChangeDetectorRef) {\n    super(translateService, element, _ref);\n  }\n\n  /**\n   * Overridden method from original directive.\n   * For simple text nodes, it just invokes the base method.\n   * For complex nodes, it builds translation key from whole inner HTML\n   * and replaces it with its translation.\n   * This prevents splitting HTML into pieces and attempting to translate each one separately\n   * which doesn't work, because we extract strings in whole.\n   */\n  checkNodes(forceUpdate = false, translations?: any) {\n    if (\n      this.isElementSimpleTextType() || this.isElementInnerHtmlEmpty()\n    ) {\n      /**\n       * If element does not contain complex html, then fallBack to default logic.\n       */\n      super.checkNodes(forceUpdate, translations);\n    } else {\n      if (this.isLookupKeyMissing()) {\n        this._elementRef.nativeElement.lookupKey = this.getLookupKey();\n      }\n      this.translateAndUpdateHtmlContent();\n      this.htmlUpdateEvent.emit();\n    }\n  }\n\n  ngOnDestroy() {\n    this.htmlUpdateEvent.complete();\n    super.ngOnDestroy();\n  }\n\n  /**\n   * Builds lookup key from innerHTML, removes comments (that might be added by Angular) and trims it.\n   */\n  private getLookupKey() {\n    return this._elementRef.nativeElement.innerHTML.replace(/<!--.*?-->/gs, '').trim();\n  }\n\n  private isElementSimpleTextType(): boolean {\n    return this._elementRef.nativeElement.childNodes.length === 1 && this._elementRef.nativeElement.childNodes[0].nodeType === 3;\n  }\n\n  private isElementInnerHtmlEmpty(): boolean {\n    return !this._elementRef.nativeElement.innerHTML;\n  }\n\n  private isLookupKeyMissing(): boolean {\n    return !this._elementRef.nativeElement.lookupKey;\n  }\n\n  private lookupKeyExist(): boolean {\n    return this._elementRef.nativeElement.lookupKey;\n  }\n\n  private translateAndUpdateHtmlContent(): void {\n    if (this.lookupKeyExist()) {\n      this._elementRef.nativeElement.innerHTML = this._translateService.instant(\n        this._elementRef.nativeElement.lookupKey,\n        this.currentParams || {}\n      );\n    }\n  }\n}\n","import { TranslatePipe } from '@ngx-translate/core';\nimport { Injectable, Pipe } from '@angular/core';\n\n/**\n * Provides copy of original pipe for C8yTranslateModule\n */\n@Injectable()\n@Pipe({\n  name: 'translate',\n  pure: false // required to update the value when the promise is resolved\n})\nexport class C8yTranslatePipe extends TranslatePipe {}\n","import { TranslateModule } from '@ngx-translate/core';\nimport { NgModule } from '@angular/core';\nimport { C8yTranslateDirective } from './c8y-translate.directive';\nimport { C8yTranslatePipe } from './c8y-translate.pipe';\n\n/**\n * Module must be redeclared, as Components cant be declared by two modules.\n */\n@NgModule({\n  declarations: [C8yTranslatePipe, C8yTranslateDirective],\n  exports: [C8yTranslatePipe, C8yTranslateDirective]\n})\nexport class C8yTranslateModule extends TranslateModule {}\n","import { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { LOCALE_ID, NgModule } from '@angular/core';\nimport {\n  MissingTranslationHandler,\n  TranslateService as NgxTranslateService,\n  TranslateCompiler,\n  TranslateFakeCompiler,\n  TranslateLoader,\n  TranslateParser,\n  TranslateStore,\n  USE_DEFAULT_LANG,\n  USE_STORE,\n  USE_EXTEND,\n  DEFAULT_LANGUAGE\n} from '@ngx-translate/core';\nimport { OptionsService } from '../common/options.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { LANGUAGES } from './languages';\nimport { LOCALE_PATH } from './locale.path';\nimport { MissingTranslationCustomHandler } from './missing-translation-custom.handler';\nimport { MESSAGES } from './pattern-messages.data';\nimport { HOOK_PATTERN_MESSAGES } from './patterns-message.hook';\nimport { TranslateCustomLoader } from './translate.loader';\nimport { TranslateParserCustom } from './translate.parser';\nimport { C8yTranslateModule } from './c8y-translate.module';\nimport { CachedLocaleDictionaryService } from './cached-locale-dictionary.service';\n\n// Load these as a side effect\ntry {\n  // tslint:disable:no-var-requires\n  require('@c8y/ngx-components/locales/de.po');\n  require('@c8y/ngx-components/locales/en.po');\n  require('@c8y/ngx-components/locales/es.po');\n  require('@c8y/ngx-components/locales/fr.po');\n  require('@c8y/ngx-components/locales/ja_JP.po');\n  // tslint:enable:no-var-requires\n} catch (e) {\n  // empty block\n}\n\nconst angularLocalesLanguageMap = { en: 'en-GB', 'en-EN': 'en-GB' };\n\n// AoT requires an exported function for factories\nexport function translateLoaderFactory(\n  httpClient: HttpClient,\n  optionsService: OptionsService,\n  cachedLocaleDictionaryService: CachedLocaleDictionaryService,\n  localePath: string,\n  languages: any\n) {\n  return new TranslateCustomLoader(httpClient, optionsService, cachedLocaleDictionaryService, localePath, languages);\n}\n\nexport function localePathFactory(options: OptionsService) {\n  return options.localePath;\n}\n\nexport function languagesFactory(options: OptionsService) {\n  return options.languages;\n}\n\nexport function localeId(appStateService: AppStateService) {\n  return {\n    get lang() {\n      return getAngularLocalesLanguageString(appStateService.state.lang || 'en');\n    },\n    toLowerCase() {\n      return this.lang.toLowerCase();\n    },\n    toString() {\n      return this.lang;\n    }\n  };\n}\n\nexport function getAngularLocalesLanguageString(language) {\n  return angularLocalesLanguageMap[language] || language;\n}\n\n/**\n * The angular module definition for i18n (translation).\n * @exports I18nModule\n */\n@NgModule({\n  exports: [C8yTranslateModule], // We export custom translation module that extends ngx-translate\n  imports: [HttpClientModule]\n})\nexport class I18nModule {\n  static providers() {\n    return [\n      { provide: LOCALE_ID, useFactory: localeId, deps: [AppStateService] },\n      { provide: HOOK_PATTERN_MESSAGES, useValue: MESSAGES, multi: true },\n      { provide: LOCALE_PATH, useFactory: localePathFactory, deps: [OptionsService] },\n      { provide: LANGUAGES, useFactory: languagesFactory, deps: [OptionsService] },\n\n      // Extracted from projects/ngx-translate/core/src/public_api.ts\n      {\n        provide: TranslateLoader,\n        useFactory: translateLoaderFactory,\n        deps: [HttpClient, OptionsService, CachedLocaleDictionaryService, LOCALE_PATH, LANGUAGES]\n      },\n      { provide: TranslateCompiler, useClass: TranslateFakeCompiler },\n      { provide: TranslateParser, useClass: TranslateParserCustom },\n      { provide: MissingTranslationHandler, useClass: MissingTranslationCustomHandler },\n      TranslateStore,\n      NgxTranslateService,\n      { provide: USE_STORE, useValue: undefined },\n      { provide: USE_DEFAULT_LANG, useValue: undefined },\n      { provide: USE_EXTEND, useValue: false },\n      { provide: DEFAULT_LANGUAGE, useValue: undefined }\n    ];\n  }\n  static forRoot() {\n    return {\n      ngModule: I18nModule,\n      providers: I18nModule.providers()\n    };\n  }\n}\n","export function parse(moduleSrc) {\n  const src = moduleSrc.split(/\\n/)\n    .map((l) => l.trim())\n    .filter(Boolean)\n    .filter((l) => !l.match(/^\\/?\\*/) && !l.match(/^\\/\\//))\n    .join('\\n');\n  const fn = new Function(`var exports = {};\nvar module = { exports: exports };\n${src}\nreturn exports;`);\n  return fn();\n}\n","import './import-locales';\nimport { parse } from './parse-module';\nconst cache = new Map();\n/**\n * @ignore\n */\nexport function loadLocale(moduleLang) {\n  return new Promise((resolve, reject) => {\n    if (cache.has(moduleLang)) {\n      resolve(cache.get(moduleLang));\n    } else {\n      fetch(`assets/locales/angular/${moduleLang}.js`)\n        .then((res) => res.text())\n        .then((src) => {\n          const module = parse(src);\n          cache.set(moduleLang, module);\n          resolve(module);\n        })\n        .catch(reject);\n    }\n  });\n}\n","import { registerLocaleData } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { TranslateService as NgxTranslateService } from '@ngx-translate/core';\nimport { isString, keys, toLower } from 'lodash-es';\nimport { OptionsService } from '../common/options.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { getAngularLocalesLanguageString } from './i18n.module';\nimport { loadLocale } from './load-locale';\n\n/**\n * A service to manage the language of the application.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  static SAVE_LANGUAGE_KEY = 'c8y_language';\n  static defaultLang() {\n    return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);\n  }\n  langsDetail: any = this.options.get('languages', {});\n  langs: any = keys(this.langsDetail).filter(k => this.langsDetail[k]);\n  private DEFAULT_SEPARATOR = '_';\n  constructor(\n    private ngxTranslate: NgxTranslateService,\n    private ui: AppStateService,\n    private options: OptionsService\n  ) {\n    const queryStringLang = this.queryStringLang();\n    if (queryStringLang) {\n      this.saveInLocalStorage(queryStringLang);\n    }\n  }\n\n  /**\n   * Switches to given language.\n   * @param lang The language as two-letter code.\n   */\n  async switchToLanguage(lang: string) {\n    const moduleLang = lang.replace('_', '-');\n\n    try {\n      await this.loadLocales(moduleLang);\n    } catch (e) {\n      const lessSpecificModuleLang = moduleLang.split('-').shift();\n      if (lessSpecificModuleLang !== moduleLang) {\n        await this.loadLocales(lessSpecificModuleLang);\n      } else {\n        throw e;\n      }\n    }\n\n    this.setLanguage(lang);\n  }\n\n  async loadLocales(moduleLang) {\n    const module: any = await loadLocale(getAngularLocalesLanguageString(moduleLang));\n    registerLocaleData(module.default);\n  }\n\n  setLanguage(lang: string) {\n    this.ngxTranslate.setDefaultLang(this.options.get('defaultLanguage', 'en'));\n    this.ngxTranslate.use(lang).subscribe(() => {\n      this.ui.state$.next({ ...this.ui.state, lang });\n    });\n  }\n\n  /**\n   * Finds the first supported language\n   */\n  firstSupportedLanguage() {\n    const languages = [this.queryStringLang(), this.localStorageLang()]\n      .concat([this.options.get('defaultLanguage')])\n      .concat(this.browserLangs())\n      .concat(['en'])\n      .filter(Boolean)\n      .map(lang => lang.toLowerCase());\n\n    const preferredLanguage = languages.find(lang => this.getSupported(lang));\n    return this.getSupported(preferredLanguage);\n  }\n\n  /**\n   * Converts a iso language code to a PO language code (e.g. de-de gets de_de).\n   * @param lang The iso language code.\n   */\n  convertToLanguageCodePO(lang: string): string {\n    const sep = lang.indexOf('-') > -1 ? '-' : this.DEFAULT_SEPARATOR;\n    const [langMain, langSpecific] = lang.split(sep);\n    const langLast = langSpecific ? `${this.DEFAULT_SEPARATOR}${langSpecific}` : '';\n    return `${langMain}${langLast}`;\n  }\n\n  /**\n   * Returns the language in the native language.\n   * @param lang The language two-letter code.\n   * @return The native name.\n   */\n  getNativeLanguage(lang: string): string {\n    const langData = (this.langsDetail || {})[lang] || {};\n    return langData.nativeName || lang;\n  }\n\n  saveInLocalStorage(lang: string) {\n    window.localStorage.setItem(TranslateService.SAVE_LANGUAGE_KEY, lang);\n  }\n\n  getSupported(lang: string) {\n    const exact = this.langs.find(l => l.toLowerCase() === lang);\n    if (exact) {\n      return exact;\n    }\n    return this.langs.find(\n      l =>\n        this.getLessSpecific(l.toLowerCase()) === this.getLessSpecific(lang) || l.startsWith(lang)\n    );\n  }\n\n  /**\n   * Gets the language from the query parameter.\n   * @return The language two-letter code.\n   */\n  queryStringLang() {\n    return this.getQueryParameter('lang');\n  }\n\n  private getLessSpecific(lang) {\n    return isString(lang)\n      ? lang.replace('-', this.DEFAULT_SEPARATOR).split(this.DEFAULT_SEPARATOR)[0]\n      : '';\n  }\n\n  /**\n   * Gets the language from local storage.\n   * @return The language two-letter code.\n   */\n  private localStorageLang() {\n    return window.localStorage.getItem(TranslateService.SAVE_LANGUAGE_KEY);\n  }\n\n  /**\n   * Determines which language is set in the browser.\n   * @return The languages the browser supports as string array.\n   */\n  private browserLangs() {\n    const { navigator } = window;\n    const browserLanguagePropertyKeys = [\n      'languages',\n      'language',\n      'browserLanguage',\n      'systemLanguage',\n      'userLanguage'\n    ];\n    return browserLanguagePropertyKeys.reduce((languages, property) => {\n      const propertyLanguages = navigator[property];\n      if (typeof propertyLanguages === 'string') {\n        languages.push(propertyLanguages);\n      } else if (Array.isArray(propertyLanguages)) {\n        languages = languages.concat(propertyLanguages);\n      }\n      return languages;\n    }, []);\n  }\n\n  private getQueryParameter(queryKey) {\n    // TODO: replace this with URLSearchParams, ie 11 still doesn't support :()\n    const query = window.location.search.substring(1);\n    let result;\n    query.split('&').find(pair => {\n      const [key, value] = pair.split('=');\n      if (key === queryKey) {\n        result = value;\n      }\n      return result;\n    });\n    return result;\n  }\n}\n","import { DatePipe as NgDatePipe } from '@angular/common';\nimport { Inject, LOCALE_ID, Pipe } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { gettext } from '../i18n/gettext';\n\n/**\n * The range of times supported by ECMAScript Date objects in milliseconds.\n * @see http://www.ecma-international.org/ecma-262/5.1/#sec-15.9.1.1\n */\nexport const ES_MAX_TIME_MILLISECONDS: number = 8640000000000000;\n\n/**\n * Formats a date value according to locale rules. If no other format specified it defaults to `medium`\n * used as standard date/time format.\n *\n * Extends Angular's DatePipe in a way so that date values exceeding the range supported by ECMAScript\n * are displayed as earliest/latest supported point in time printed in the desired format pre- or postfixed\n * by the word `before` or `after`, respectively.\n * In all other cases the pipe behaves as the standard [DatePipe]{@link https://angular.io/api/common/DatePipe}.\n *\n * ```html\n * <span class=\"highlight\">{{ deadline | c8yDate }}</span> <!-- e.g. 7 May 2020, 17:45:19 (en-GB) or 07.05.2020, 17:45:19 (de) -->\n * <span>{{ lastUpdated | c8yDate: 'a h:MM:ss' }}</span> <!-- e.g. pm 5:45:19 -->\n * <span>{{ 8640000000000000 + 1 | c8yDate }}</span> <!-- e.g. after 13 Sep 275760, 03:00:00 --> ```\n */\n@Pipe({ name: 'c8yDate' })\nexport class DatePipe extends NgDatePipe {\n  constructor(@Inject(LOCALE_ID) locale: string, private translateService: TranslateService) {\n    super(locale);\n  }\n\n  transform(\n    value: any,\n    format: string = 'medium',\n    timezone?: string,\n    locale?: string\n  ): string | null {\n    let valueInBounds = value;\n    let valueBefore: boolean = false;\n    let valueBeyond: boolean = false;\n\n    if (typeof value === 'number' && !isNaN(value)) {\n      valueInBounds = Math.min(value, ES_MAX_TIME_MILLISECONDS);\n      valueInBounds = Math.max(valueInBounds, -ES_MAX_TIME_MILLISECONDS);\n\n      valueBefore = value < -ES_MAX_TIME_MILLISECONDS;\n      valueBeyond = value > ES_MAX_TIME_MILLISECONDS;\n    }\n    let result: string = super.transform(valueInBounds, format, timezone, locale);\n\n    if (valueBefore) {\n      result = this.translateService.instant(gettext(`before {{date}}`), { date: result });\n    } else if (valueBeyond) {\n      result = this.translateService.instant(gettext(`after {{date}}`), { date: result });\n    }\n\n    return result;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  Output,\n  TemplateRef\n} from '@angular/core';\nimport { IIdentified, Paging } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-load-more',\n  templateUrl: './load-more.component.html'\n})\nexport class LoadMoreComponent {\n  @Input()\n  paging: Paging<any>;\n  @Input()\n  useIntersection = true;\n  @Input()\n  hidden = false;\n  @Input()\n  container: ElementRef;\n  @Input()\n  class: string = 'c8y-list__item p-0';\n  @Input()\n  maxIterations = 10;\n  @Input()\n  noMoreDataHint: TemplateRef<any>;\n  @Input()\n  loadingTemplate: TemplateRef<any>;\n  @Input()\n  hideNoMoreDataHint: boolean = false;\n  @Input()\n  loadNextLabel: string;\n  @Input()\n  loadingLabel: string;\n  @Output()\n  onLoad = new EventEmitter<IIdentified>();\n\n  isLoading = false;\n  counter = 0;\n  hasNoMoreData = false;\n  private loadUntilIntersected;\n  private readonly LOAD_SAME_PAGE_THRESHOLD = 50;\n  private intersectionObserver: IntersectionObserver;\n  private destroyed = false;\n\n  @HostBinding('class')\n  get hostClass() {\n    return this.hidden || (!this.hasMore && !this.hasNoMoreData) ? '' : this.class;\n  }\n\n  get hasMore() {\n    return (\n      this.paging && (this.paging.totalPages > this.paging.currentPage || !!this.paging.nextPage)\n    );\n  }\n\n  constructor(private element: ElementRef) {}\n\n  ngAfterContentInit(): void {\n    this.destroyed = false;\n    if (this.useIntersection && 'IntersectionObserver' in window) {\n      this.intersectionObserver = new IntersectionObserver(event => this.buttonInView(event[0]), {\n        root: this.container ? this.container.nativeElement : null\n      });\n      this.intersectionObserver.observe(this.element.nativeElement);\n    }\n    this.hasNoMoreData = this.shouldShowNoMoreDataHint();\n  }\n\n  ngOnDestroy(): void {\n    this.destroyed = true;\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n      this.intersectionObserver.unobserve(this.element.nativeElement);\n      clearTimeout(this.loadUntilIntersected);\n    }\n  }\n\n  async loadMore(event?) {\n    if (!this.destroyed) {\n      this.isLoading = true;\n      if (event) {\n        event.stopPropagation();\n      }\n      if (this.hasMore) {\n        const result = await this.paging.next();\n        this.paging = result.paging;\n        this.onLoad.emit(result.data);\n        this.intersectionLoading();\n        this.hasNoMoreData = this.shouldShowNoMoreDataHint();\n      } else {\n        this.counter = 0;\n        this.isLoading = false;\n      }\n    }\n  }\n\n  private intersectionLoading() {\n    if (this.useIntersection && this.hasMore && this.loadUntilIntersected !== null) {\n      this.loadUntilIntersected = setTimeout(() => this.loadMore(), this.getLoadingThreshold());\n      this.useIntersection = this.shouldSwitchMode();\n    } else {\n      this.isLoading = false;\n      this.loadUntilIntersected = undefined;\n    }\n  }\n\n  private getLoadingThreshold(): number {\n    return this.LOAD_SAME_PAGE_THRESHOLD * this.counter++;\n  }\n\n  private shouldShowNoMoreDataHint() {\n    return (this.counter !== 0 || this.noMoreDataHint) && !this.hasMore && !this.hidden;\n  }\n\n  private shouldSwitchMode() {\n    return this.counter < this.maxIterations || this.hidden;\n  }\n\n  private buttonInView(event) {\n    if (event.isIntersecting) {\n      this.loadMore();\n    } else if (this.loadUntilIntersected) {\n      clearTimeout(this.loadUntilIntersected);\n      this.loadUntilIntersected = null;\n      this.isLoading = false;\n    } else {\n      // avoiding a race condition when timeout is faster\n      // cleared then set\n      this.loadUntilIntersected = null;\n    }\n  }\n}\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  SimpleChanges,\n  TemplateRef,\n  Type,\n  ViewContainerRef,\n  ViewRef\n} from '@angular/core';\nimport { IIdentified, IResultList, Paging } from '@c8y/client';\nimport { assign, get } from 'lodash-es';\nimport { isObservable, Observable, of, pipe, Subject, Subscription } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\nimport { RealtimeService } from '../realtime/realtime.service';\nimport { LoadMoreComponent } from './load-more.component';\nimport { LoadMoreMode } from './load-more.model';\n\n/**\n * A directive to iterate over IResultList<T> data from @c8y/client.\n * Depending on the [c8yForLoadMore] a load more button is:\n *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be\n *          change with maxIterations settings).\n *  - show: Shows a load more button for the user to decide\n *  - none: Doesn't perform any load more action.\n *  - hidden: Loads more data automatically but with no visible button for the user.\n *\n * Additional, any rxjs operator pipe can be applied to the [c8yForPipe] input, e.g. to\n * filter the data displayed currently as well as the data loaded by subsequent requests.\n *\n * Example:\n * ```html\n * <div *c8yFor=\"let device of devices; loadMore: 'auto'; let i = index; pipe: filterPipe;\">\n *  {{ i + 1 }}. {{device.name}}\n * </div>\n * ```\n * The above example will list all entities that are applied to `devices`:\n * ```typescript\n * this.devices = this.inventoryService.list({ pageSize: 10, fragmentType: 'c8y_IsDevice' })\n * ```\n * It will display the first 10 items, if there is more space left on the screen, and there are more\n * than 10 devices, it will automatically load up to 10 pages more. If it still can't fit the screen\n * it will stop and switch to `show` mode.\n *\n * A pipe can be applied e.g. for filtering or grouping. This pipe is attached to every follow up\n * request done by the load more component:\n * ```typescript\n * this.filterPipe = pipe(\n *    map((data: []) => {\n *     return data.filter(\n *      (mo: any) => mo.name && mo.name.toLowerCase().indexOf(value.toLowerCase()) > -1\n *    );\n *  })\n * );\n * ```\n * The pipe must be an rxjs pipe and can take any operator.\n */\n@Directive({\n  selector: '[c8yFor]'\n})\nexport class ForOfDirective {\n  private cachedData: IIdentified[] = [];\n  private paging: Paging<IIdentified>;\n  private loadMoreMode: LoadMoreMode = 'auto';\n  private dataPipe = pipe(tap());\n  private pagingSub: Subscription;\n  private obs$: Observable<IIdentified[]>;\n  private loadMore: LoadMoreComponent;\n  private loadingTemplate: TemplateRef<any>;\n  private maxIterations = 10;\n  private notFoundTemplate: TemplateRef<any>;\n  private loadNextLabel: string;\n  private realtime: RealtimeService<any>;\n  private comparator: (itemA: object, itemB: object) => number;\n  private unsubscribe$: Subject<void> = new Subject();\n\n  private get shouldUseLoadMoreButton() {\n    return (\n      this.loadMoreMode === 'auto' || this.loadMoreMode === 'show' || this.loadMoreMode === 'hidden'\n    );\n  }\n\n  private get hasMoreData() {\n    return this.loadMore && this.loadMore.hasMore;\n  }\n\n  private get length() {\n    return this.cachedData.length;\n  }\n\n  /**\n   * The data setter. Must be a response from @c8y/data or an observable.\n   * You can pass an observable with null to explicitly clear the list.\n   */\n  @Input()\n  set c8yForOf(fetchData: IResultList<IIdentified> | Observable<IResultList<IIdentified>>) {\n    if (fetchData) {\n      this.obs$ = (isObservable(fetchData) ? fetchData : of(fetchData)).pipe(\n        map(result => {\n          if (result === null) {\n            this.paging = null;\n            return [];\n          }\n          const { paging, data } = result;\n          this.paging = paging;\n          return data;\n        })\n      );\n    }\n  }\n\n  /**\n   * The mode setter:\n   *  - auto: Tries to automatically load more data (default maximum 10 iterations; can be\n   *          change with maxIterations settings).\n   *  - show: Shows a load more button for the user to decide\n   *  - none: Doesn't perform any load more action.\n   *  - hidden: Loads more data automatically but with no visible button for the user.\n   */\n  @Input()\n  set c8yForLoadMore(type: LoadMoreMode) {\n    this.loadMoreMode = type;\n  }\n\n  /**\n   * The pipe setter to attach any rxjs pipe to the current and more loaded data.\n   */\n  @Input()\n  set c8yForPipe(dataPipe) {\n    if (dataPipe) {\n      this.dataPipe = dataPipe;\n    }\n  }\n\n  /**\n   * A template to use if no data is found at all (e.g. if you apply a filter pipe).\n   */\n  @Input()\n  set c8yForNotFound(notFoundTemplate: TemplateRef<any>) {\n    this.notFoundTemplate = notFoundTemplate;\n    if (this.loadMore) {\n      this.loadMore.noMoreDataHint = notFoundTemplate;\n    }\n  }\n\n  /**\n   * The maximum numbers of iterations to call data from the api.\n   */\n  @Input()\n  set c8yForMaxIterations(maxIterations: number) {\n    this.maxIterations = maxIterations;\n  }\n\n  /**\n   * A custom loading component.\n   */\n  @Input()\n  set c8yForLoadingTemplate(loadingTemplate: TemplateRef<any>) {\n    this.loadingTemplate = loadingTemplate;\n  }\n\n  /**\n   * Load next text label.\n   */\n  @Input()\n  set c8yForLoadNextLabel(loadNextLabel: string) {\n    this.loadNextLabel = loadNextLabel;\n  }\n\n  /**\n   * A RealtimeService instance.\n   */\n  @Input()\n  set c8yForRealtime(source: RealtimeService<any>) {\n    this.realtime = source;\n  }\n\n  /**\n   * A comparator function for comparing list items. Used to determine\n   * the position at which a new element should be added to the list.\n   */\n  @Input()\n  set c8yForComparator(comparator: (itemA: object, itemB: object) => number) {\n    this.comparator = comparator;\n  }\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private vcr: ViewContainerRef,\n    private componentFactoryResolver: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit(): void {\n    this.handleRealtime();\n  }\n\n  private ngOnChanges(changes: SimpleChanges): void {\n    if (this.obs$ && (changes.c8yForPipe || changes.c8yForOf)) {\n      this.unsubscribePaging();\n\n      // only re-rendering  on filtering if all data is already loaded\n      // from the backend\n      const reRender = !this.hasMoreData && !!changes.c8yForPipe && !changes.c8yForOf;\n\n      if (reRender) {\n        this.obs$ = of(this.cachedData);\n      }\n      this.pagingSub = this.obs$\n        .pipe(\n          tap(data => {\n            if (!reRender) {\n              this.cachedData = data;\n            }\n          })\n        )\n        .pipe(src => this.dataPipe(src))\n        .subscribe((data: []) => {\n          this.render(data, reRender);\n        });\n    }\n  }\n\n  private ngOnDestroy(): void {\n    this.unsubscribePaging();\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  private handleRealtime() {\n    if (this.realtime) {\n      this.realtime\n        .onCreate$()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(item => this.insert(item));\n      this.realtime\n        .onUpdate$()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(item => this.update(item));\n      this.realtime\n        .onDelete$()\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(id => this.remove(coerceNumberProperty(id)));\n    }\n  }\n\n  private render(data, reRender = false): void {\n    this.vcr.clear();\n\n    data.forEach((item, index) => {\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData,\n        loadMoreComponent: this.loadMore\n      };\n      this.vcr.createEmbeddedView(this.tpl, context);\n    });\n\n    if (this.shouldUseLoadMoreButton) {\n      this.loadMore = this.createLoadMoreButtonComponent(reRender);\n    }\n  }\n\n  private append(data) {\n    data.forEach(item => {\n      const index = this.shouldUseLoadMoreButton ? this.vcr.length - 1 : this.vcr.length;\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData,\n        loadMoreComponent: this.loadMore\n      };\n      this.vcr.createEmbeddedView(this.tpl, context, index);\n    });\n  }\n\n  private loadMoreData(data) {\n    if (data.length > 0) {\n      this.append(data);\n    }\n  }\n\n  private createLoadMoreButtonComponent(reRender) {\n    const componentFactory: ComponentFactory<\n      any\n    > = this.componentFactoryResolver.resolveComponentFactory(LoadMoreComponent);\n    const componentRef = this.vcr.createComponent(componentFactory);\n    const instance = componentRef.instance as LoadMoreComponent;\n    instance.paging = this.paging;\n    instance.useIntersection = this.loadMoreMode === 'auto' || this.loadMoreMode === 'hidden';\n    instance.hidden = this.loadMoreMode === 'hidden';\n    instance.maxIterations = this.maxIterations;\n    instance.noMoreDataHint = this.notFoundTemplate;\n    instance.loadingTemplate = this.loadingTemplate;\n    instance.loadNextLabel = this.loadNextLabel;\n    this.pagingSub = instance.onLoad\n      .pipe(\n        map((data: []) => this.checkForDuplicates(data)),\n        tap((data: []) => {\n          this.cachedData = this.cachedData.concat(data);\n        })\n      )\n      .pipe(src => this.dataPipe(src))\n      .subscribe(data => this.loadMoreData(data));\n    if (reRender) {\n      assign(instance, this.loadMore);\n    }\n    return instance;\n  }\n\n  private insert(item) {\n    let index: number = 0;\n\n    if (this.comparator && this.cachedData.length) {\n      let comparisionResult: number;\n      do {\n        const view: EmbeddedViewRef<any> = this.vcr.get(index) as EmbeddedViewRef<any>;\n        const itemB = get(view, 'context.$implicit');\n        comparisionResult = item && itemB ? this.comparator(item, itemB) : 0;\n        if (comparisionResult <= 0) {\n          index++;\n        }\n      } while (comparisionResult <= 0 && index < this.cachedData.length);\n    }\n\n    // Do not append elements after the last one currently loaded,\n    // as it may belong further down there on the list and will\n    // be eventually loaded with one of the next pages.\n    if (index < this.cachedData.length || this.cachedData.length === 0) {\n      const context = {\n        $implicit: item,\n        index,\n        length: this.length,\n        hasMore: this.hasMoreData\n      };\n\n      this.cachedData.splice(index, 0, item);\n      const viewRef: ViewRef = this.tpl.createEmbeddedView(context);\n      this.vcr.insert(viewRef, index);\n    }\n  }\n\n  private update(updatedItem) {\n    this.forMatchingEmbeddedViewRef(\n      (item: IIdentified) => item && updatedItem && item.id === updatedItem.id,\n      (view: EmbeddedViewRef<any>) => {\n        view.context.$implicit = updatedItem;\n        view.markForCheck();\n      }\n    );\n  }\n\n  private remove(idToRemove) {\n    this.forMatchingEmbeddedViewRef(\n      (item: IIdentified) => item && coerceNumberProperty(item.id, NaN) === idToRemove,\n      (view: EmbeddedViewRef<any>) => view.destroy()\n    );\n  }\n\n  private forMatchingEmbeddedViewRef(\n    filter: (item: IIdentified) => boolean,\n    callback: (view: EmbeddedViewRef<any>) => void\n  ) {\n    for (let i = 0; i < this.vcr.length; i++) {\n      const view: EmbeddedViewRef<any> = this.vcr.get(i) as EmbeddedViewRef<any>;\n      const item: IIdentified = get(view, 'context.$implicit');\n      if (filter(item)) {\n        callback(view);\n      }\n    }\n  }\n\n  private checkForDuplicates(data: IIdentified[]): IIdentified[] {\n    return this.realtime\n      ? data.filter(item => !this.cachedData.some(cached => cached.id === item.id))\n      : data;\n  }\n\n  private unsubscribePaging() {\n    if (this.pagingSub) {\n      this.pagingSub.unsubscribe();\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Observable } from 'rxjs';\nimport { gettext } from '../i18n/gettext';\nimport { get, find, negate, isUndefined } from 'lodash';\nimport { HumanizePipe } from './humanize.pipe';\n\n/*\n * Humanize an application name and translates it.\n * Usage:\n *   appNameOrApp | humanizeAppName | async\n*/\n@Pipe({ name: 'humanizeAppName' })\nexport class HumanizeAppNamePipe implements PipeTransform {\n\n  private internalApps = {\n    administration: 'Administration',\n    cockpit: 'Cockpit',\n    devicemanagement: 'Device management'\n  };\n\n  constructor(private translateService: TranslateService) {}\n\n  transform(appNameOrApp: any = 'Cumulocity'): Observable<string> {\n    const appName = this.getAppName(appNameOrApp);\n\n    let text;\n    if (this.isPublicApp(appNameOrApp)) {\n      text = gettext('{{ appName | translate }} (public)');\n    } else {\n      text = appName;\n    }\n    return this.translateService.stream(text, { appName });\n  }\n\n  private getAppName(appNameOrApp) {\n    const appName = this.getFirstDefined([\n      get(appNameOrApp, 'name'),\n      get(appNameOrApp, 'contextPath'),\n      appNameOrApp\n    ]) || '';\n    return this.internalApps[appName] || appName;\n  }\n\n  private getFirstDefined(values) {\n    return find(values, negate(isUndefined));\n  }\n\n  private isPublicApp(appNameOrApp) {\n    return Boolean(get(appNameOrApp, 'public'));\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { upperFirst } from 'lodash-es';\n\n/*\n * Humanize any string\n * Usage:\n *   'something' | humanize\n*/\n@Pipe({ name: 'humanize' })\nexport class HumanizePipe implements PipeTransform {\n  static humanize(str: string = ''): string {\n    str = str\n      .replace(/\\./g, ' ')\n      .replace(/c8y[\\s,_]*/gi, '')\n      .replace(/_/g, ' ')\n      .replace(/([A-Z][a-z])/g, ' $1')\n      .replace(/^\\$\\.?/, '')\n      .replace(/^\\s*/, '')\n      .replace(/\\s*$/, '')\n      .replace(/\\s+/g, ' ');\n\n    return upperFirst(str);\n  }\n\n  transform(str: string): string {\n    return HumanizePipe.humanize(str);\n  }\n}\n","import { Directive, Renderer2, Input, ElementRef } from '@angular/core';\n\n/**\n * Allows to set a icon. Switches between c8y default icons\n * and font awesome icons\n * @example <i [c8yIcon]=\"'clock'\">\n */\n@Directive({\n  selector: '[c8yIcon]',\n})\nexport class IconDirective {\n\n  @Input()\n  set c8yIcon(icon: string) {\n    this.updateIcon(icon);\n  }\n  private c8yMatch = /^c8y-/;\n  private klasses = [];\n  private currentClasses = '';\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2\n  ) {}\n\n  private isC8y(icon) {\n    return this.c8yMatch.test(icon);\n  }\n\n  private getClasses(icon: string = '') {\n    let classes = '';\n    if (icon) {\n      const _icon = icon.trim();\n      const isC8y = this.isC8y(_icon);\n      const iconClass = isC8y ? _icon.replace(this.c8yMatch, 'c8y-icon-') : `dlt-c8y-icon-${_icon}`;\n      classes = `${isC8y ? 'c8y-icon' : ''} ${iconClass}`;\n    }\n    return classes;\n  }\n\n  private updateIcon(icon: string) {\n    const newClasses = this.getClasses(icon);\n    if (newClasses !== this.currentClasses) {\n      this.currentClasses.split(/\\s/).filter((c) => c).forEach((klass) => {\n        this.renderer.removeClass(this.el.nativeElement, klass);\n      });\n      newClasses.split(/\\s/).filter((c) => c).forEach((klass) => {\n        this.renderer.addClass(this.el.nativeElement, klass);\n      });\n      this.currentClasses = newClasses;\n    }\n  }\n}\n\nexport const ICONS = [\n         'home',\n         'th',\n         'bar-chart-o',\n         'tasks',\n         'tachometer',\n         'bell',\n         'puzzle-piece',\n         'map-marker',\n         'location-arrow',\n         'globe',\n         'power-off',\n         'desktop',\n         'laptop',\n         'mobile',\n         'signal',\n         'qrcode',\n         'file',\n         'file-text',\n         'folder',\n         'folder-open',\n         'archive',\n         'ssd',\n         'book',\n         'bookmark',\n         'tag',\n         'flag',\n         'search',\n         'heart',\n         'star',\n         'bolt',\n         'cog',\n         'cogs',\n         'wrench',\n         'ban',\n         'user',\n         'users',\n         'sign-in',\n         'sign-out',\n         'upload',\n         'download',\n         'cloud-upload',\n         'cloud-download',\n         'cloud',\n         'hourglass',\n         'refresh',\n         'repeat',\n         'undo',\n         'lock',\n         'unlock',\n         'info',\n         'question-circle',\n         'exclamation-circle',\n         'bug',\n         'calendar',\n         'random',\n         'asterisk',\n         'key',\n         'link',\n         'chain-broken',\n         'external-link',\n         'picture-o',\n         'comment',\n         'bullhorn',\n         'phone',\n         'lightbulb-o',\n         'flask',\n         'cloud-network',\n         'exchange',\n         'code-fork',\n         'keyboard-o',\n         'terminal',\n         'code',\n         'clipboard',\n         'pencil',\n         'envelope',\n         'inbox',\n         'reply',\n         'share',\n         'thumbs-up',\n         'thumbs-down',\n         'check',\n         'plus',\n         'expand',\n         'compress',\n         'arrows',\n         'arrow-up',\n         'arrow-down',\n         'arrow-left',\n         'arrow-right',\n         'th-list',\n         'bars',\n         'table',\n         'columns',\n         'filter',\n         'sort',\n         'sort-up',\n         'sort-down',\n         'ellipsis-h',\n         'ellipsis-v',\n         'rss'\n       ];\n","import { memoize as _memoize } from 'lodash-es';\n\n/**\n * Decorator to memoize function results.\n * @param resolver Cache key resolver function, used by memoize from lodash.\n */\nexport function memoize(resolver?) {\n  return (target, fnName, descriptor) => {\n    const fn = descriptor.value;\n    descriptor.value = function(...args) {\n      const memoizedFnName = `_${fnName}Memoized`;\n      if (!this[memoizedFnName]) {\n        this[memoizedFnName] = _memoize(fn, resolver);\n      }\n      return this[memoizedFnName].apply(this, args);\n    };\n  };\n}\n","import { Injectable } from '@angular/core';\nimport { AppStateService } from './ui-state.service';\nimport { IManagedObject, InventoryService } from '@c8y/client';\nimport { property } from 'lodash-es';\nimport { memoize } from './memoize.decorator';\nimport { IUser, UserService } from '@c8y/client';\n\n@Injectable()\nexport class Permissions {\n  constructor(\n    private appState: AppStateService,\n    private inventory: InventoryService,\n    private user: UserService\n  ) {}\n\n  /**\n   * Checks if the current user has write permissions for the given mo.\n   * (either through global role, individual device permissions or via inventory roles).\n   *\n   * @param {array} roleIds Array of roles which the current user should have.\n   * @param {object} mo The managed object for which we are checking whether the user has access.\n   */\n  canEdit(roleIds, mo) {\n    return this.checkIfCanEdit(roleIds, mo);\n  }\n\n  hasRole(roleId: string) {\n    const currentUser = this.appState.currentUser.value;\n    if (!currentUser) {\n      throw new Error('Roles can only be requested if the user is logged in.');\n    }\n    return this.user.hasRole(currentUser, roleId);\n  }\n\n  hasAllRoles(roleIds: string[]) {\n    const currentUser = this.appState.currentUser.value;\n    if (!currentUser) {\n      throw new Error('Roles can only be requested if the user is logged in.');\n    }\n    return this.user.hasAllRoles(currentUser, roleIds);\n  }\n\n  hasAnyRole(roleIds: string[]) {\n    const currentUser = this.appState.currentUser.value;\n    if (!currentUser) {\n      throw new Error('Roles can only be requested if the user is logged in.');\n    }\n    return this.user.hasAnyRole(currentUser, roleIds);\n  }\n\n  @memoize(property('id'))\n  protected async checkIfOwner(mo) {\n    const currentUserName = await this.appState.currentUser.value.userName;\n    const { data, res } = await this.inventory.detail(mo.id);\n    return currentUserName === data.owner;\n  }\n\n  @memoize(property('id'))\n  protected checkWithRequest(mo) {\n    const moName = mo.name;\n    const moId = mo.id;\n    const partialUpdateObject: Partial<IManagedObject> = {\n      id: moId,\n      name: moName\n    };\n    return this.inventory\n      .update(partialUpdateObject)\n      .then(success => {\n        return true;\n      })\n      .catch(err => {\n        return false;\n      });\n  }\n\n  private async checkIfCanEdit(roleIds, mo) {\n    if (await this.hasAnyRole(roleIds)) {\n      return true;\n    } else if (await this.checkIfOwner(mo)) {\n      return true;\n    } else if (await this.checkWithRequest(mo)) {\n      return true;\n    }\n    return false;\n  }\n}\n","import { Directive, Input, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Permissions } from './permissions.service';\n\n/**\n * A structural directive that conditionally includes a template only if the user has\n * all or any of the roles passed as an input. By default the directive checks all roles:\n *\n * ```\n * <button *c8yIfAllowed=\"['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']\" (click)=\"delete()\" title=\"Delete\">\n *   Delete\n * </button>\n * ```\n *\n * To check if the user has any of the required roles to view the element you need to use the `allowAny` input:\n *\n * ```\n * <button *c8yIfAllowed=\"['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']; allowAny: true\" (click)=\"delete()\" title=\"Delete\">\n *   Delete\n * </button>\n * ```\n *\n * or use the shorter version\n *\n * ```\n * <button *c8yIfAllowed=\"['ROLE_RECORD_DELETE', 'ROLE_ENTRY_DELETE']; allowAny\" (click)=\"delete()\" title=\"Delete\">\n *   Delete\n * </button>\n * ```\n */\n@Directive({\n  selector: '[c8yIfAllowed]'\n})\nexport class IfAllowedDirective {\n  /**\n   * One or many roles required for the element to be rendered\n   */\n  @Input()\n  set c8yIfAllowed(roleIds: string | string[]) {\n    this.rolesIds = Array.isArray(roleIds) ? roleIds : !!roleIds ? [roleIds] : [];\n  }\n\n  /**\n   * Switches to the mode where at least one of the provided roles is sufficient for the element to be rendered\n   */\n  @Input()\n  set c8yIfAllowedAllowAny(allowAny: boolean) {\n    this.allowAny = allowAny === null || allowAny;\n  }\n\n  private rolesIds: string[];\n  private allowAny: boolean = false;\n\n  constructor(\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private permissions: Permissions\n  ) {}\n\n  ngOnInit() {\n    if (\n      !this.rolesIds ||\n      !this.rolesIds.length ||\n      (this.allowAny\n        ? this.permissions.hasAnyRole(this.rolesIds)\n        : this.permissions.hasAllRoles(this.rolesIds))\n    ) {\n      this.container.createEmbeddedView(this.template);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'c8y-loading',\n  template: `\n    <div class=\"p-24 p-relative d-inline-block\" >\n      <div class=\"spinner\">\n        <div class=\"rect1\"></div>\n        <div class=\"rect2\"></div>\n        <div class=\"rect3\"></div>\n        <div class=\"rect4\"></div>\n        <div class=\"rect5\"></div>\n      </div>\n    </div>\n  `\n})\nexport class LoadingComponent {}\n","/*\n * Implementation of pure \"Mapping\" pipe based on\n * https://codeburst.io/angular-bad-practices-eab0e594ce92#389b\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'map'\n})\nexport class MapFunctionPipe implements PipeTransform {\n  /*\n   * This will be a universal pipe for array mappings. You may add more\n   * type checkings and runtime checkings to make sure it works correctly everywhere.\n   */\n  transform(value, mappingFunction: (arg: any) => any, thisArg?: any) {\n    return mappingFunction.apply(thisArg || this, Array.isArray(value) ? value : [value]);\n  }\n}\n","import { assign } from 'lodash-es';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  Input,\n  Renderer2,\n  TemplateRef,\n  Type,\n  ViewContainerRef\n  } from '@angular/core';\n\n/**\n * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n * @example\n * <div *c8yOutlet=\"template\"></div>\n * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n * <div *c8yOutlet=\"nodes\"></div>\n */\n@Directive({\n  selector: '[c8yOutlet]',\n})\nexport class OutletDirective {\n  private properties = {};\n  private _element;\n\n  constructor(\n    private viewContainer: ViewContainerRef,\n    private resolver: ComponentFactoryResolver,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) { }\n\n  /**\n   * Directive to set a DOM node, a TemplateRef or any Component to a container or any node.\n   * @example\n   * <div *c8yOutlet=\"template\"></div>\n   * <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n   * <div *c8yOutlet=\"nodes\"></div>\n   */\n  @Input() set c8yOutlet(template: TemplateRef<any> | Type<any> | Element) {\n    if (!template) {\n      return;\n    }\n    if (this._element instanceof Element) {\n      this.renderer.removeChild(this._element.parentElement,  this._element);\n    }\n    this.viewContainer.clear();\n\n    // case TemplateRef -> <div *c8yOutlet=\"template\"></div>\n    if (template instanceof TemplateRef) {\n      this.viewContainer.createEmbeddedView(template);\n\n    // case DOM Element -> <div *c8yOutlet=\"nodes\"></div>\n    } else if (template instanceof Element) {\n      const parent = this.renderer.parentNode(this.el.nativeElement);\n      this.destroy();\n      this._element = template;\n      this.renderer.insertBefore(parent, this._element, this.el.nativeElement);\n\n    // case Component -> <div *c8yOutlet=\"DeviceStatusComponent; properties: { node }\"></div>\n    } else {\n      const factory: ComponentFactory<any> = this.resolver.resolveComponentFactory(template);\n      const component = this.viewContainer.createComponent(factory);\n      assign(component.instance, this.properties);\n    }\n  }\n\n  @Input() set c8yOutletProperties(value) {\n    this.properties = value;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy();\n  }\n\n  private destroy() {\n    if (this._element) {\n      const _parent = this.renderer.parentNode(this._element);\n      this.renderer.removeChild(_parent, this._element);\n    }\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-progress-bar',\n  templateUrl: './progress-bar.component.html'\n})\nexport class ProgressBarComponent {\n  @Input() message: string = gettext('Loading…');\n  @Input() progress: number = null;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({ name: 'shortenUserName' })\r\nexport class ShortenUserNamePipe implements PipeTransform {\r\n\r\n  transform({ firstName = '', lastName = '', userName = ''}: any): string {\r\n      let parsedFirstName = firstName.trim().split(/\\s+/).shift().substr(0, 1);\r\n      const parsedLastName = lastName.trim().split(/\\s+/).pop();\r\n\r\n      if (!parsedLastName) {\r\n        parsedFirstName = firstName.split(/\\s+/).shift();\r\n      } else {\r\n        parsedFirstName = parsedFirstName ? `${parsedFirstName}. ` : '';\r\n      }\r\n\r\n      return parsedFirstName || parsedLastName ? parsedFirstName + parsedLastName : userName;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ApplicationService, TenantService, IApplication } from '@c8y/client';\n\n/** The helper UI service for tenant related methods built upon client services. */\n@Injectable()\nexport class TenantUiService {\n  constructor(\n    private tenantService: TenantService,\n    private applicationService: ApplicationService\n  ) {}\n\n  /**\n   * Checks whether current tenant is the management tenant.\n   * @returns True if current tenant is the management tenant.\n   */\n  async isManagementTenant(): Promise<boolean> {\n    const currentTenant = (await this.tenantService.current()).data;\n    return currentTenant.name === 'management';\n  }\n\n  /**\n   * Checks whether current tenant is an enterprise tenant.\n   * An enterprise tenant is a tenant which has subscribed:\n   * - `branding` microservice or `feature-branding` feature app,\n   * - `sslmanagement` microservice,\n   * - `feature-user-hierarchy` feature app,\n   * - `feature-broker` feature app.\n   *\n   * See https://cumulocity.com/guides/users-guide/enterprise-edition/ for details about such tenants.\n   *\n   * @returns True, if current tenant is an enterprise tenant.\n   */\n  async isEnterpriseTenant(): Promise<boolean> {\n    const hasBranding =\n      (await this.hasApp({ name: 'branding' })) ||\n      (await this.hasApp({ name: 'feature-branding' }));\n    const hasSslManagement = await this.hasApp({ name: 'sslmanagement' });\n    const hasUserHierarchy = await this.hasApp({ name: 'feature-user-hierarchy' });\n    const hasDataBroker = await this.hasApp({ name: 'feature-broker' });\n\n    return hasBranding && hasSslManagement && hasUserHierarchy && hasDataBroker;\n  }\n\n  private async hasApp(app: Partial<IApplication>): Promise<boolean> {\n    return (await this.applicationService.isAvailable(app)).data;\n  }\n}\n","import { Observable, of } from 'rxjs';\n\nexport class UserPreferencesStorageLocal {\n  private LOCAL_STORAGE_KEY = 'userPreferences';\n  private store: any = {};\n  constructor() {\n    try {\n      const jsonStore = window.localStorage.getItem(this.LOCAL_STORAGE_KEY);\n      if (jsonStore) {\n        this.store = JSON.parse(jsonStore) || {};\n      }\n    } catch (e) {\n      // do nothing\n    }\n  }\n\n  get(key) {\n    return of(this.store[key]);\n  }\n\n  set(key, value) {\n    this.store[key] = value;\n    return this.saveJsonStore();\n  }\n\n  private saveJsonStore() {\n    return window.localStorage.setItem(this.LOCAL_STORAGE_KEY, JSON.stringify(this.store));\n  }\n}\n","import { InventoryService } from '@c8y/client';\n\nexport class UserPreferencesStorageInventory {\n  TYPE = 'c8y_UserPreference';\n\n  constructor(\n    private inventory: InventoryService\n  ) {}\n\n  async get(key) {\n    const { data } = await this.inventory.list({fragmentType: key});\n    return data.length ? data[0][key] : undefined;\n  }\n\n  async set(key, value) {\n    const { data } = await this.inventory.list({fragmentType: key});\n    const updateMo: any = {[key]: value, type: this.TYPE};\n    let out;\n\n    if (data.length) {\n      updateMo.id = data[0].id;\n      out =  this.inventory.update(updateMo);\n    } else {\n      out = this.inventory.create(updateMo);\n    }\n    return out;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { InventoryService, UserService } from '@c8y/client';\nimport { IUser } from '@c8y/client';\nimport { Observable, from, never } from 'rxjs';\nimport { switchMap, first } from 'rxjs/operators';\nimport { UserPreferencesStorageLocal } from './user-preferences-storage-local';\nimport { UserPreferencesStorageInventory } from './user-preferences-store-inventory';\nimport { AppStateService } from '../ui-state.service';\n\n@Injectable()\nexport class UserPreferencesService {\n  currentUser: Observable<IUser>;\n  private LOCAL_STORAGE_KEY = 'userPreferences';\n  private storage: {\n    local: UserPreferencesStorageLocal,\n    inventory: UserPreferencesStorageInventory\n  };\n  constructor(\n    private user: UserService,\n    private inventory: InventoryService,\n    private appState: AppStateService\n  ) {\n    this.storage = {\n      local: new UserPreferencesStorageLocal(),\n      inventory: new UserPreferencesStorageInventory(this.inventory)\n    };\n    this.currentUser = this.appState.currentUser;\n  }\n\n  get(key): Observable<any> {\n    return this.currentUser.pipe(\n      first(),\n      switchMap((user) => this.getForUser(key, user))\n    );\n  }\n\n  set(key, value): Promise<any> {\n    return new Promise((resolve, reject) => {\n      this.currentUser.pipe(\n        first()\n      ).subscribe((user) => {\n        resolve(this.setForUser(key, value, user));\n      }, reject);\n    });\n  }\n\n  getForUser(key, user): Observable<any> {\n    const rawKey = this.getRawKey(key, user);\n    const storage = this.getStorage(user);\n    return from(storage.get(rawKey));\n  }\n\n  setForUser(key, value, user): Promise<any> {\n    const rawKey = this.getRawKey(key, user);\n    const storage = this.getStorage(user);\n    return Promise.resolve(storage.set(rawKey, value));\n  }\n\n  private getRawKey(key, user) {\n    const username = user.userName.replace(/\\./g, '__');\n    return `${key}${username}`;\n  }\n\n  private getStorage(user) {\n    return  this.user.hasAllRoles(user, ['ROLE_INVENTORY_READ', 'ROLE_INVENTORY_ADMIN']) ?\n      this.storage.inventory : this.storage.local;\n  }\n\n}\n","import { CommonModule as NgCommonModule } from '@angular/common';\nimport { APP_INITIALIZER, InjectionToken, NgModule } from '@angular/core';\nimport { DataModule } from '@c8y/ngx-components/api';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { distinctUntilChanged, filter, map, startWith, switchMap } from 'rxjs/operators';\nimport { I18nModule } from '../i18n/i18n.module';\nimport { TranslateService } from '../i18n/translate.service';\nimport { DatePipe } from './date.pipe';\nimport { ForOfDirective } from './forOf.directive';\nimport { HumanizeAppNamePipe } from './humanize-app-name.pipe';\nimport { HumanizePipe } from './humanize.pipe';\nimport { IconDirective, ICONS } from './icon.directive';\nimport { IfAllowedDirective } from './if-allowed.directive';\nimport { LoadMoreComponent } from './load-more.component';\nimport { LoadingComponent } from './loading.component';\nimport { MapFunctionPipe } from './map-function.pipe';\nimport { HOOK_OPTIONS, OptionsService } from './options.service';\nimport { OutletDirective } from './outlet.directive';\nimport { Permissions } from './permissions.service';\nimport { ProgressBarComponent } from './progress-bar.component';\nimport { ShortenUserNamePipe } from './shorten-user-name.pipe';\nimport { TenantUiService } from './tenant-ui.service';\nimport { AppStateService } from './ui-state.service';\nimport { UserPreferencesService } from './user-preferences/user-preferences.service';\n\nexport function initializeServices(\n  translateService: TranslateService,\n  state: AppStateService,\n  userPreferences: UserPreferencesService\n) {\n  const initialize = () => {\n    const queryStringLanguage = translateService.queryStringLang();\n    const firstLanguage = translateService.firstSupportedLanguage();\n\n    /*\n      The ?lang parameter will prevent the user preference language from being activated\n    */\n    if (queryStringLanguage && translateService.getSupported(queryStringLanguage)) {\n      translateService.switchToLanguage(queryStringLanguage);\n    } else {\n      state.currentUser\n        .pipe(\n          map(user => user && user.userName),\n          filter(u => !!u),\n          distinctUntilChanged(),\n          switchMap(() => userPreferences.get('language')),\n          startWith(firstLanguage),\n          filter(lang => !!lang),\n          distinctUntilChanged()\n        )\n        .subscribe(lang => {\n          translateService.switchToLanguage(lang);\n        });\n    }\n  };\n  return initialize;\n}\n\nexport const ICON_LIST = new InjectionToken('iconList');\n\n/**\n * Commonly used directives, data access and translation. This module is the shared\n * module across all core components. It should be imported by default.\n *\n * @exports IconDirective A directive to set a c8y icon with [c8yIcon]=\"'rocket'\".\n * @exports OutletDirective A directive which allows to set DOM or Angular templates (used for upgrade).\n * @exports I18nModule Translation module.\n * @exports NgCommonModule Angular common module.\n * @exports DataModule The data layer to allow DI with @c8y/client\n * @exports HumanizeAppNamePipe Humanize an application name (e.g. in the app switcher)\n * @exports HumanizePipe Humanize a word. E.g. `device management` gets `Device management`\n * @exports ShortenUserNamePipe Allows a short name. E.g. `Foo Bar` gets `F. Bar`\n * @exports ForOfDirective A forOf directive like ngFor but with load-more function\n * @exports LoadMoreComponent A component to load more data from a certain data-source\n * @exports ProgressBarComponent Displays either defined or undefined progress.\n */\n@NgModule({\n  imports: [NgCommonModule, I18nModule, TooltipModule],\n  exports: [\n    IconDirective,\n    OutletDirective,\n    I18nModule,\n    NgCommonModule,\n    HumanizeAppNamePipe,\n    HumanizePipe,\n    IfAllowedDirective,\n    ShortenUserNamePipe,\n    ForOfDirective,\n    LoadMoreComponent,\n    MapFunctionPipe,\n    ProgressBarComponent,\n    DatePipe,\n    LoadingComponent\n  ],\n  declarations: [\n    IconDirective,\n    OutletDirective,\n    HumanizePipe,\n    HumanizeAppNamePipe,\n    IfAllowedDirective,\n    ShortenUserNamePipe,\n    ForOfDirective,\n    LoadMoreComponent,\n    MapFunctionPipe,\n    ProgressBarComponent,\n    DatePipe,\n    LoadingComponent\n  ],\n  entryComponents: [LoadMoreComponent, LoadingComponent]\n})\nexport class CommonModule {\n  static providers() {\n    return [\n      ...DataModule.providers(),\n      // TODO: maybe we can think of a way to remove this C8Y_APP global\n      { provide: HOOK_OPTIONS, useValue: (window as any).C8Y_APP || {}, multi: true },\n      {\n        provide: APP_INITIALIZER,\n        useFactory: initializeServices,\n        deps: [TranslateService, AppStateService, UserPreferencesService],\n        multi: true\n      },\n      { provide: ICON_LIST, useValue: ICONS, multi: false },\n      ...I18nModule.providers(),\n      UserPreferencesService,\n      OptionsService,\n      AppStateService,\n      Permissions,\n      TenantUiService,\n      HumanizePipe,\n      HumanizeAppNamePipe,\n      ShortenUserNamePipe,\n      MapFunctionPipe,\n      DatePipe\n    ];\n  }\n\n  static forRoot() {\n    return {\n      ngModule: CommonModule,\n      providers: CommonModule.providers()\n    };\n  }\n}\n","import { OperationStatus } from '@c8y/client';\n\nexport enum Status {\n  SUCCESS = 'success',\n  WARNING = 'warning',\n  DANGER = 'danger',\n  INFO = 'info'\n}\n\nexport type StatusType = Status | 'success' | 'warning' | 'danger' | 'info';\n\nexport const statusIcons = {\n  [Status.SUCCESS]: 'check-circle',\n  [Status.WARNING]: 'exclamation-triangle',\n  [Status.DANGER]: 'exclamation-circle',\n  [Status.INFO]: 'info-circle'\n};\n\nexport const statusClasses = {\n  [Status.SUCCESS]: `text-${Status.SUCCESS}`,\n  [Status.WARNING]: `text-${Status.WARNING}`,\n  [Status.DANGER]: `text-${Status.DANGER}`,\n  [Status.INFO]: `text-${Status.INFO}`\n};\n\nexport const statusAlert = {\n  [Status.SUCCESS]: `alert-${Status.SUCCESS}`,\n  [Status.WARNING]: `alert-${Status.WARNING}`,\n  [Status.DANGER]: `alert-${Status.DANGER}`,\n  [Status.INFO]: `alert-${Status.INFO}`\n};\n\nexport const operationStatusIcons = {\n  [OperationStatus.PENDING]: 'clock-o',\n  [OperationStatus.EXECUTING]: 'refresh',\n  [OperationStatus.SUCCESSFUL]: 'check-circle',\n  [OperationStatus.FAILED]: 'exclamation-circle'\n};\n\nexport const operationStatusClasses = {\n  [OperationStatus.PENDING]: 'text-info',\n  [OperationStatus.EXECUTING]: 'text-info',\n  [OperationStatus.SUCCESSFUL]: 'text-success',\n  [OperationStatus.FAILED]: 'text-danger'\n};\n","import { Component, HostBinding, Input, AfterContentInit } from '@angular/core';\nimport { filter, sortBy } from 'lodash-es';\nimport { ActionBarItem } from './action-bar.model';\n\n/**\n * This component is used as the outlet to show the action bars.\n * In a c8ycli app it is by default placed on the bootstrap component.\n */\n@Component({\n  selector: 'c8y-action-bar',\n  templateUrl: './action-bar.component.html',\n  host: { class: 'c8y-ui-action-bar' }\n})\nexport class ActionBarComponent {\n  /**\n   * Identifies if the navigator is opened. If yes, the action-bar\n   * needs to move to the right.\n   */\n  @Input() @HostBinding('class.navigator-open') navigatorOpen = false;\n\n  /**\n   * Identifies if the current view has tabs. If yes, the action bar needs\n   * to move down.\n   */\n  @Input() @HostBinding('class.has-tabs') hasTabs = false;\n\n  /**\n   * Identifies if the tabs are aligned horizontally. If yes, the tabs don't\n   * need to move to the left.\n   */\n  @Input() @HostBinding('class.horizontal-tabs') isTabsHorizontal = false;\n\n  /**\n   * Identifies if in a mobile view the toolbar is expanded or not.\n   */\n  isPageToolbarExpanded = false;\n\n  /**\n   * Adds the default `c8y-ui-action-bar` class.\n   */\n  @HostBinding('class.c8y-ui-action-bar') uiActionBar = true;\n\n  /**\n   * The current items to display in the ActionBar.\n   */\n  @Input() items: ActionBarItem[] = [];\n\n  /**\n   * Returns true if no items are present and hides the action bar.\n   */\n  @HostBinding() get hidden() {\n    return !(this.items && this.items.length);\n  }\n\n  /**\n   * Returns the items sorted by priority and grouped by the placement passed.\n   * @param {placement} Which placement should be returned sorted.\n   */\n  getSortedItems(placement: 'left' | 'right' | 'more') {\n    return sortBy(filter(this.items, { placement }), this.byPriority);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ActionBarItemComponent } from './action-bar-item.component';\nimport { ActionBarComponent } from './action-bar.component';\n\n/**\n * An action bar can be added with content projection or multi provider\n * extension. It allows to show them in three positions (left, right\n * or more). The actions placed here are always local actions to the\n * current route like \"add device\" or \"lock dashboard\".\n *\n * @example\n * ```html\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"addRandom()\"><i c8yIcon=\"plus-circle\"></i> Add random</button>\n * </c8y-action-bar-item>\n * ```\n * @exports ActionBarComponent The outlet component\n * @exports ActionBarItemComponent The items to add with cp.\n */\n@NgModule({\n  declarations: [ActionBarComponent, ActionBarItemComponent],\n  imports: [BsDropdownModule, CommonModule, CollapseModule, RouterModule.forChild([])],\n  exports: [ActionBarComponent, ActionBarItemComponent]\n})\nexport class ActionBarModule {}\n","import { Injector, Injectable, InjectionToken } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { StateService } from '../common/state-service.abstract';\nimport { Action, ActionFactory } from './action.model';\nimport {\n  fromTrigger,\n  ExtensionPoint,\n  stateToFactory,\n  sortByPriority\n} from '../common/extension-hooks';\nimport { map, shareReplay } from 'rxjs/operators';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ACTION = new InjectionToken('ActionFactory');\n\n/**\n * A service which defines global actions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ActionService extends StateService implements ExtensionPoint<Action> {\n  items$: Observable<Action[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Action>>(new Set<Action>());\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_ACTION, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: Action[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<Action> {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the actions in the header and emits a state change.\n   * @param item The item to add.\n   */\n  add(item: Action) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action from the header and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: Action) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { Action } from './action.model';\nimport { sortBy } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-action-outlet',\n  templateUrl: './action-outlet.component.html'\n})\n\nexport class ActionOutletComponent {\n  isPageToolbarExpanded = false;\n  @Input() items: Action[] = [];\n\n  getByPriority() {\n    return sortBy(this.items, this.byPriority);\n  }\n\n  invoke(action) {\n    if (action.action) {\n      action.action.call();\n    }\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { Action } from './action.model';\nimport { ActionService } from './action.service';\n\n@Component({\n  selector: 'c8y-action',\n  templateUrl: './action.component.html'\n})\nexport class ActionComponent implements Action {\n  @Input() disabled: boolean = false;\n  @Input() label: string;\n  @Input() priority: number = 0;\n  @Input() icon: string;\n  @ViewChild('template', {static: false}) template: any;\n  action: () => void;\n  private viewInitTimeout;\n\n  constructor(private actionService: ActionService) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.actionService.add(this as Action)\n      );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.actionService.remove(this as Action);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ActionOutletComponent } from './action-outlet.component';\nimport { ActionComponent } from './action.component';\nimport { ActionService } from './action.service';\n\n/**\n * The angular module definition for actions.\n * @exports ActionComponent\n * @exports ActionOutletComponent\n */\n@NgModule({\n  declarations: [\n    ActionOutletComponent,\n    ActionComponent\n  ],\n  imports: [\n    CommonModule,\n    BsDropdownModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    ActionOutletComponent,\n    ActionComponent\n  ]\n})\nexport class ActionModule { }\n","import { Alert } from './alert.model';\nimport { BehaviorSubject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { StateService } from '../common/state-service.abstract';\nimport { gettext } from '../i18n/gettext';\nimport {IResult} from '@c8y/client';\nimport { isEqual } from 'lodash-es';\n\ntype alertType = 'success' | 'warning' | 'danger' | 'info' | 'system';\n/**\n * A service which allows to display alerts.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService extends StateService {\n  /**\n   * Returns all alerts.\n   * @readonly\n   */\n  get state() {\n    return this.state$.value;\n  }\n  /**\n   * @ignore\n   */\n  state$ = new BehaviorSubject<Alert[]>([]);\n\n  private MAX_ALERTS = 3;\n  private ALERT_TIMEOUT = 3000;\n\n  /**\n   * Adds a new alert to the current state.\n   */\n  add(alert: Alert) {\n    this.addAlert(alert);\n  }\n\n  /**\n   * Adds a alert by text.\n   */\n  addByText(type: alertType, txt: string, detailedData?: string): void {\n    this.addAlert({ text: txt, type, detailedData });\n  }\n\n  /**\n   * Returns all alerts.\n   * @deprecated Use alertService.alerts instead.\n   */\n  list(): Alert[] {\n    return this.state;\n  }\n\n  /**\n   * Remove an alert from the current state.\n   */\n  remove(alert: Alert) {\n    this.changeAlerts(this.state.filter(item => !this.areSame(alert, item)));\n  }\n\n  /**\n   * Updates matching alert with provided values.\n   */\n  update(alert: Alert, fieldsToUpdate: Partial<Alert>) {\n    this.changeAlerts(\n      this.state.map(item => {\n        if (this.areSame(alert, item)) {\n          Object.assign(item, fieldsToUpdate);\n        }\n        return item;\n      })\n    );\n  }\n\n  /**\n   * Removes last danger alert.\n   * It can be used e.g. in the case of a failed request which triggered an alert, to hide it from user.\n   *\n   * ```js\n   *  try {\n   *    // something that might throw a danger server msg\n   *  } catch (ex) {\n   *   this.alertService.removeLastDanger();\n   *  }\n   * ```\n   */\n  removeLastDanger() {\n    const firstDangerAlert = this.state.reverse().find(({ type }) => type === 'danger');\n    this.changeAlerts(this.state.filter(alert => alert !== firstDangerAlert));\n  }\n\n  /**\n   * Shorthand for a save successful alert.\n   * @param savedObject The object which was saved.\n   * @return A function that can be executed to show the msg.\n   */\n  saveSuccess(savedObject: string) {\n    return () => {\n      const text = `${savedObject} saved successfully`;\n      this.addByText('success', text);\n    };\n  }\n\n  /**\n   * Shorthand for a create successful alert.\n   * @param createdObject The object which was created.\n   * @return A function that can be executed to show the msg.\n   */\n  createSuccess(createdObject) {\n    return () => {\n      const text = `${createdObject} created successfully`;\n      this.addByText('success', text);\n    };\n  }\n\n  /**\n   * Clears all alerts.\n   */\n  clearAll() {\n    this.changeAlerts([]);\n  }\n\n  /**\n   * A shorthand to display a simple success message.\n   * @param text The success text.\n   * @param detailedData The text with additional information.\n   */\n  success(text: string, detailedData?: string) {\n    this.addByText('success', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple danger message.\n   * @param text The danger text.\n   * @param detailedData The text with additional information.\n   */\n  danger(text: string, detailedData?: string) {\n    this.addByText('danger', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple info message.\n   * @param text The info text.\n   * @param detailedData The text with additional information.\n   */\n  info(text: string, detailedData?: string) {\n    this.addByText('info', text, detailedData);\n  }\n\n  /**\n   * A shorthand to display a simple warning message.\n   * @param text The warning text.\n   * @param detailedData The text with additional information.\n   */\n  warning(text: string, detailedData?: string) {\n    this.addByText('warning', text, detailedData);\n  }\n\n  /**\n   * Creates alert from standard api errors.\n   * Should be used for errors generated by @c8y/client services.\n   * @param {IResult}  error The error from server.\n   * @param {alertType} type The type of alert.\n   */\n  addServerFailure(error: any, type: alertType = 'danger') {\n    const { data, res } = error;\n    let text = data && data.message ? data.message : null;\n    let detailedData;\n    if (data) {\n      if (typeof data === 'object') {\n        detailedData = data.exceptionMessage;\n      } else if (typeof data === 'string') {\n        detailedData = data;\n      }\n    }\n    const hasRelevantMessage = !!(text || detailedData);\n    if (!text) {\n      text = gettext('A server error occurred.');\n    }\n    if (!hasRelevantMessage) {\n      detailedData = {\n        status: res.status,\n        statusText: res.statusText,\n        url: res.url\n      };\n    }\n\n    this.addAlert({\n      type,\n      text,\n      detailedData\n    });\n  }\n\n  /**\n   * Compares two alert objects. Alerts are same if text, type, detailed data and callbacks are same.\n   * Callbacks are same if they refer to the same function.\n   */\n  areSame(alert1: Alert, alert2: Alert): boolean {\n    return (\n      alert1.text === alert2.text &&\n      alert1.type === alert2.type &&\n      isEqual(alert1.detailedData, alert2.detailedData) &&\n      alert1.onClose === alert2.onClose &&\n      alert1.onDetail === alert2.onDetail\n    );\n  }\n\n  private changeAlerts(newAlerts: Alert[]) {\n    this.state$.next(newAlerts);\n  }\n\n  private addAlert(alert: Alert): void {\n    if (!alert.text && !alert.type) {\n      throw new Error('Cannot add empty alert');\n    }\n\n    const alertAlreadyAdded = this.state.find(item => this.areSame(alert, item));\n    if (alertAlreadyAdded) {\n      return;\n    }\n\n    this.changeAlerts([...this.state, alert]);\n    this.hideAutomaticallyIfNeeded(alert);\n    this.removeOldestIfMax();\n  }\n\n  private hideAutomaticallyIfNeeded(alert: Alert) {\n    const isSuccess = alert.type === 'success';\n    const noDetails = !alert.detailedData;\n    let alertTimeout = isSuccess && noDetails ? this.ALERT_TIMEOUT : 0;\n    if (typeof alert.timeout !== 'undefined') {\n      alertTimeout = alert.timeout;\n    }\n    if (alertTimeout) {\n      setTimeout(() => this.remove(alert), alertTimeout);\n    }\n  }\n\n  private removeOldestIfMax() {\n    if (this.state.length > this.MAX_ALERTS) {\n      const [, ...firstRemoved] = this.state;\n      this.changeAlerts(firstRemoved);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n/**\n * The content of `c8y-alert-details` component will be displayed as alert's details.\n * This component must be placed inside `c8y-alert` component.\n */\n@Component({\n  selector: 'c8y-alert-details',\n  template: `<ng-content></ng-content>`\n})\n\nexport class AlertDetailsComponent {}\n","import { Component, OnDestroy, Input, ViewChild, ContentChild } from '@angular/core';\nimport { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { AlertDetailsComponent } from './alert-details.component';\n\n/**\n * Alert component allows creating alert with complex view.\n */\n\n@Component({\n  selector: 'c8y-alert',\n  templateUrl: './alert.component.html'\n})\n\nexport class AlertComponent implements OnDestroy, Alert {\n\n  /**\n   * The type of the alert.\n   */\n  @Input() type: 'success' | 'warning' | 'danger' | 'info' | 'system';\n  /**\n   * Function to call if user clicks on the detail button.\n   */\n  @Input() onDetail: () => void;\n  /**\n   * Function to call if user clicks on the close button.\n   */\n  @Input() onClose: () => void;\n  /**\n   * Detailed information to display.\n   */\n  @ViewChild('detailedData', {static: false}) detailedData;\n  /**\n   * The text templateRef to display message.\n   */\n  @ViewChild('text', {static: false}) text;\n  /**\n   * Content of AlertDetailsComponent is displayed as alertDetails.\n   */\n  @ContentChild(AlertDetailsComponent, {static: false}) containDetailsComponent: AlertDetailsComponent;\n  /**\n   * @ignore\n   */\n  private viewInitTimeout;\n\n  /**\n   * @ignore\n   */\n  constructor(public alertService: AlertService) {}\n\n  /**\n   * AlertComponent adds new alert to collection stored in alertService after view init.\n   */\n  ngAfterViewInit() {\n    if (!this.containDetailsComponent) {\n      this.detailedData = null;\n    }\n    this.viewInitTimeout = setTimeout(() =>\n      this.alertService.add(this)\n    );\n  }\n\n  /**\n   * AlertComponent removes alert from collection stored in alertService on destroy component.\n   */\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.alertService.remove(this);\n  }\n}\n","import { Component, TemplateRef, Attribute, HostBinding } from '@angular/core';\nimport { Alert } from './alert.model';\nimport { AlertService } from './alert.service';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Alert outlet component shows all added alerts. It is used in the application's `c8y-bootstrap` component.\n *\n * For applications which don’t use `c8y-bootstrap` component but want to display alerts via AlertService, a c8y-alert-outlet component needs to be added explicitly in the template.\n *\n * ## Example:\n * ```html\n *  <div class=\"alerts\">\n *    <c8y-alert-outlet></c8y-alert-outlet>\n *  </div>\n * ```\n */\n@Component({\n  selector: 'c8y-alert-outlet',\n  templateUrl: './alert-outlet.component.html'\n})\nexport class AlertOutletComponent {\n  /**\n   * Currently displayed details of an alert. Only one alert’s details can be displayed at a time.”\n   */\n  detailDisplayedAlert: any = {};\n  /**\n   * @ignore\n   */\n  @HostBinding('class.static') isStatic = false;\n  /**\n   * The array of current alerts.\n   */\n  get alerts(): BehaviorSubject<Alert[]> {\n    return this.alertService.state$;\n  }\n  /**\n   * @ignore\n   */\n  constructor(\n    @Attribute('position') private position: string,\n    public alertService: AlertService\n  ) {\n    this.isStatic = this.position === 'static';\n  }\n  /**\n   * Returns a CSS class for an alert depending on its type to style the corresponding alert component.\n   */\n  getClass(alert: Alert) {\n    const classes = [];\n    if (alert.type !== 'danger') {\n      classes.push('interact');\n    }\n    classes.push(`alert-${alert.type}`);\n    return classes.join(' ');\n  }\n  /**\n   * Executes alert’s onClose method, if provided, and closes the alert.\n   * @param alert The alert which will be closed.\n   */\n  close(alert: Alert) {\n    if (alert.onClose) {\n      alert.onClose();\n    }\n    this.alertService.remove(alert);\n  }\n  /**\n   * Expands details part of particular alert, and collapses details for another alerts.\n   * @param alert The alert which details should be expanded.\n   */\n  showDetails(alert: Alert) {\n    if (alert.onDetail) {\n      return alert.onDetail();\n    }\n    this.detailDisplayedAlert = Object.assign({}, alert);\n    this.detailDisplayedAlert.mode = 'raw';\n    this.setDetailsContent(alert);\n  }\n  /**\n   * Returns true if alert has extra detailedData or defines custom onDetail method.\n   */\n  hasDetails(alert: Alert) {\n    return (alert.detailedData || alert.onDetail);\n  }\n  /**\n   * Collapses alert's details.\n   */\n  closeDetails() {\n    this.detailDisplayedAlert = {};\n  }\n  /**\n   * Returns true if details part of alert is expanded.\n   */\n  isDetailsShow(alert: Alert) {\n    return this.alertService.areSame(alert, this.detailDisplayedAlert);\n  }\n  /**\n   * @ignore\n   */\n  isTemplateRef(value): boolean {\n    return value instanceof TemplateRef;\n  }\n  /**\n   * @ignore\n   */\n  template(content): any {\n    return this.isTemplateRef(content) ? content : undefined;\n  }\n  private setDetailsContent(alert: Alert) {\n    if ( this.isTemplateRef(alert.detailedData) || typeof alert.detailedData === 'string' ) {\n      this.detailDisplayedAlert.contents = alert.detailedData;\n    } else {\n      this.detailDisplayedAlert.contents = JSON.stringify(alert.detailedData, null, 2);\n    }\n  }\n}\n","import { Component } from '@angular/core';\n\n/**\n * The content of `c8y-alert-text` component will be displayed as alert's text.\n * This component must be placed inside `c8y-alert` component.\n */\n@Component({\n  selector: 'c8y-alert-text',\n  template: `<ng-content></ng-content>`\n})\n\nexport class AlertTextComponent {}\n","import { NgModule } from '@angular/core';\nimport { AlertDetailsComponent } from './alert-details.component';\nimport { AlertOutletComponent } from './alert-outlet.component';\nimport { AlertTextComponent } from './alert-text.component';\nimport { AlertComponent } from './alert.component';\nimport { CommonModule } from '../common/common.module';\n\n/**\n * Alert module is used for displaying status messages to the user e.g. danger, success, warning and info alerts.\n */\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    AlertOutletComponent,\n    AlertComponent,\n    AlertDetailsComponent,\n    AlertTextComponent\n  ],\n  declarations: [\n    AlertOutletComponent,\n    AlertComponent,\n    AlertDetailsComponent,\n    AlertTextComponent\n  ]\n})\nexport class AlertModule { }\n","import { TemplateRef, Type } from '@angular/core';\nimport { matches, snakeCase } from 'lodash-es';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\n\n/**\n * Interface that determines the available click options.\n */\nexport interface ClickOptions {\n  /**\n   * Indicates that the source of the event is a click on the node icon.\n   */\n  icon?: boolean;\n  /**\n   * Indicates that the source of the event is a click on the node expander.\n   */\n  expander?: boolean;\n  /**\n   * Indicates that the navigator node is expanded/collapsed.\n   */\n  open?: boolean;\n  /**\n   * DOM event.\n   */\n  $event?: any; // TODO: add proper type\n}\n/**\n * Base navigator node. Represents a single entry in the navigator menu.\n * Is considered to be the basic building block of the navigator.\n */\nexport class NavigatorNode {\n  /**\n   * Navigator node icon.\n   */\n  icon: string;\n\n  /**\n   * Custom icon template.\n   */\n  iconTemplate?: TemplateRef<any>;\n\n  /**\n   * Custom icon component.\n   */\n  iconComponent?: Type<any>;\n\n  /**\n   * Navigator node children (subentries).\n   */\n  children: NavigatorNode[] = [];\n\n  /**\n   * Label to be displayed in the navigator node.\n   */\n  label;\n\n  /**\n   * The path to which the UI will be redirected after clicking the navigator node.\n   */\n  path: string;\n\n  /**\n   * Navigator node parent nodes.\n   */\n  parents: NavigatorNode[] = [];\n\n  /**\n   * Loading state indicator.\n   */\n  loading?: boolean;\n\n  /**\n   * Indicates whether the navigator node should be active based on matching the node path and the URL path.\n   * To match the URL exactly, set this option to true.\n   *\n   * routerLinkExact set to true:\n   * When the URL path is set to /a/b/c and the node path to /a/b then the node will not be set active.\n   *\n   * routerLinkExact set to false:\n   * When the URL path is set to /a/b/c and the node path to /a/b then the node will be set active.\n   */\n  routerLinkExact: boolean = true;\n\n  /**\n   * Indicates that the navigator node is expanded/collapsed.\n   */\n  open: boolean = false;\n\n  /**\n   * Indicates that the navigator node is visible/hidden.\n   */\n  hidden: boolean = false;\n\n  /**\n   * Indicates that the navigator node is draggable.\n   */\n  draggable: boolean = false;\n\n  /**\n   * Indicates that the navigator node is droppable.\n   */\n  droppable: boolean = false;\n\n  /**\n   * Indicates that the navigator node is dragged.\n   */\n  dragged = false;\n\n  /**\n   * Indicates that currently something is dragged over the node.\n   */\n  draggedHover = false;\n\n  /**\n   * Confirmation popover displayed at the end of the process of moving the navigator menu item.\n   */\n  confirm: PopoverConfirmComponent = undefined;\n  private _priority: number = 0;\n  private expandDragTimeout;\n\n  /**\n   * Returns information whether a navigator node has children.\n   * @readonly\n   */\n  get hasChildren() {\n    return this.children.length > 0;\n  }\n\n  /**\n   * Returns the ID of the navigator node.\n   * @readonly\n   */\n  get id() {\n    return 'navigator_node_' + snakeCase(this.label);\n  }\n\n  /**\n   * Returns the priority value of the navigator node.\n   * @readonly\n   */\n  get priority() {\n    if (this._priority) {\n      return this._priority;\n    } else {\n      const childrenPriorities = this.children.map(({ priority }) => priority || 0);\n      if (childrenPriorities.length) {\n        return childrenPriorities.length ? Math.max(...childrenPriorities) : 0;\n      }\n      return 0;\n    }\n  }\n\n  /**\n   * Sets the priority value of the navigator node.\n   *\n   * @param {number} priority Priority value.\n   */\n  set priority(priority) {\n    this._priority = priority;\n  }\n\n  /**\n   * @ignore\n   */\n  constructor(data?: NavigatorNodeData) {\n    this.update(data);\n  }\n\n  /**\n   * @ignore\n   */\n  openOnStart(url: string) {\n    return false;\n  }\n\n  /**\n   * Adds a child navigator node to the node.\n   *\n   * @param {NavigatorNode} node Child node.\n   */\n  add(node: NavigatorNode) {\n    if (node === this) {\n      throw new Error('Adding node to itself');\n    }\n    if (this.children.indexOf(node) === -1) {\n      this.children.push(node);\n    }\n    if (node.parents.indexOf(this) === -1) {\n      node.parents.push(this);\n    }\n    this.updateChildren();\n  }\n\n  /**\n   * Removes the child navigator node from the node.\n   *\n   * @param {NavigatorNode} node Child node.\n   */\n  remove(node: NavigatorNode) {\n    const ix = this.children.indexOf(node);\n    const pix = node.parents.indexOf(this);\n    if (ix > -1) {\n      this.children.splice(ix, 1);\n    }\n    if (pix > -1) {\n      node.parents.splice(pix, 1);\n    }\n    this.updateChildren();\n  }\n\n  /**\n   * Updates the navigator node.\n   *\n   * @param {NavigatorNodeData} data Data to be upated.\n   */\n  update(data?: NavigatorNodeData) {\n    if (data) {\n      Object.assign(this, data);\n      if (data.hidden !== undefined) {\n        this.parents.forEach(p => {\n          p.updateHidden();\n        });\n      }\n    }\n  }\n\n  /**\n   * Returns a child navigator node based on the predicate.\n   *\n   * @param {string|object} predicate Filter criteria.\n   *\n   * @example\n   * ```ts\n   * // The function will compare the labels to the string and return a matching result.\n   * // The capitalization of the characters does not matter (case insensitive).\n   * const predicate = 'group1';\n   * const childNode = parentNode.find(predicate);\n   *\n   * // Check: [lodash matches](https://lodash.com/docs/4.17.15#matches)\n   * const predicate = { label: 'group2' };\n   * const childNode = parentNode.find(predicate);\n   * ```\n   */\n  find(predicate) {\n    if (typeof predicate === 'string') {\n      const compareLabel = predicate.toLocaleLowerCase();\n      predicate = ({ label }) => compareLabel === label.toLowerCase();\n    }\n    if (typeof predicate === 'object') {\n      predicate = matches(predicate);\n    }\n    if (typeof predicate !== 'function') {\n      throw new Error('Invalid search predicate');\n    }\n    return this.children.reduce(\n      (found, child) => found || child.find(predicate),\n      this.children.find(predicate)\n    );\n  }\n\n  /**\n   * Removes children nodes.\n   */\n  empty() {\n    this.children.length = 0;\n  }\n\n  /**\n   * @ignore\n   */\n  click(options: ClickOptions = {}) {\n    // do nothing\n  }\n\n  /**\n   * This event is fired when an element is dropped on a valid drop target.\n   * @param $event DOM event.\n   */\n  drop($event) {\n    $event.stopPropagation();\n    clearTimeout(this.expandDragTimeout);\n  }\n\n  /**\n   * This event is fired when the user starts dragging an element.\n   * @param $event DOM event.\n   */\n  dragStart($event) {\n    $event.stopPropagation();\n    // we can't pass a object to setData, so we do it via service\n    // set data is still needed, to make the drag&drop work\n    $event.dataTransfer.setData('node', 'node');\n    this.dragged = true;\n  }\n\n  /**\n   * This event is fired when a drag operation has ended.\n   * @param $event DOM event.\n   */\n  dragEnd($event) {\n    $event.stopPropagation();\n    this.dragged = false;\n    $event.dataTransfer.clearData();\n  }\n\n  /**\n   * Returns information whether the navigator node is droppable.\n   * @readonly\n   */\n  get canDrop() {\n    return this.droppable;\n  }\n\n  /**\n   * Returns information whether navigation is possible.\n   * @readonly\n   */\n  get canNavigate() {\n    return typeof this.path !== 'undefined';\n  }\n\n  /**\n   * This event is fired when a dragged element enters a valid drop target.\n   * @param $event DOM event.\n   */\n  dragEnter($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.draggedHover = true;\n    if (!this.open) {\n      this.expandDragTimeout = setTimeout(() => this.expand(), 1000);\n    }\n  }\n\n  /**\n   * This event is fired when a dragged element leaves a valid drop target.\n   * @param $event DOM event.\n   */\n  dragLeave($event) {\n    $event.preventDefault();\n    $event.stopPropagation();\n    this.draggedHover = false;\n    clearTimeout(this.expandDragTimeout);\n  }\n\n  /**\n   * Expands the navigator node if it is collapsed.\n   */\n  expand() {\n    if (!this.open) {\n      this.open = true;\n      this.click({ open: true, expander: true });\n    }\n  }\n\n  /**\n   * Performs a callback function recursively on each of the navigator node's children down the hierarchy.\n   * @param {function} callback Function to be called.\n   *\n   * @example\n   * ```ts\n   * const expandChild = (childNode) => childNode.expand();\n   * parentNode.traverse(expandChild);\n   * ```\n   */\n  traverse(callback) {\n    if (this.children) {\n      this.children.forEach(child => {\n        callback(child);\n        child.traverse(callback);\n      });\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  destroy() {\n    // nothing todo here\n  }\n\n  /**\n   * Updates the navigator node by sorting its children and also checking their visibility.\n   */\n  protected updateChildren() {\n    this.sort();\n    this.updateHidden();\n  }\n\n  /**\n   * Sorts the children of the navigator node, by priority and name (ASC).\n   * The higher the priority, the higher the position in the hierarchy.\n   * For the same priority values, the alphabetical order will take precedence.\n   */\n  protected sort() {\n    this.children.sort((a, b) => {\n      if (a.priority > b.priority) {\n        return -1;\n      } else if (a.priority < b.priority) {\n        return 1;\n      } else if ((a.label || '').toLowerCase() < (b.label || '').toLowerCase()) {\n        return -1;\n      } else if ((a.label || '').toLowerCase() > (b.label || '').toLowerCase()) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  }\n\n  /**\n   * Checks if the navigator node should be hidden based on the visibility of its child nodes.\n   */\n  protected updateHidden() {\n    if (typeof this.path === 'undefined') {\n      this.hidden = !this.children.some(({ hidden }) => !hidden);\n    }\n  }\n}\n","import { NavigatorNode } from './navigator-node';\nimport { NavigatorNodeData } from './navigator-node-data';\n\n/**\n * Root navigator node. Top node in the hierarchy.\n * The root node is used as an anchor point for the rest of the nodes.\n */\nexport class NavigatorNodeRoot extends NavigatorNode {\n  /**\n   * Adds top nodes to the navigator tree structure. These nodes are the direct children of the root node.\n   * In the case of the cockpit application, such a node is, for example, the \"Home\" menu entry.\n   *\n   * @example\n   * ```ts\n   * const nodeData: NavigatorNodeData = { label: 'Home' } ;\n   * const root: NavigatorNodeRoot = new NavigatorNodeRoot();\n   *\n   * // Based on the node data, a new node will be created and assigned to root.\n   * root.addRoot(nodeData);\n   *\n   * const parentNode: NavigatorNode =  new NavigatorNode({ label: 'Configuration'...});\n   * const nodeData: NavigatorNodeData = { label: 'Exports', parent: parentNode } ;\n   * const root: NavigatorNodeRoot = new NavigatorNodeRoot();\n   *\n   * // Based on the node data, parent node will be directly assigned to the root node, and newly created child node\n   * // will be added to the parent node.\n   * root.add(nodeData);\n   *\n   * ```\n   *\n   * @param {Partial<NavigatorNodeData>} nodeData Data on the basis of which a new node is created.\n   */\n  addRoot(nodeData: Partial<NavigatorNodeData>) {\n    let duplicate;\n\n    if (nodeData.preventDuplicates) {\n      duplicate = this.find(({ path, parents, label }) => {\n        return (\n          path === nodeData.path &&\n          label === nodeData.label &&\n          parents.some(p => p.label === nodeData.parent)\n        );\n      });\n      if (duplicate && !duplicate.hidden) {\n        duplicate.routerLinkExact = false;\n        return duplicate;\n      }\n    }\n\n    const { parent } = nodeData;\n    const node = this.createNode(nodeData);\n    let localParent;\n\n    if (parent) {\n      if (typeof parent === 'object') {\n        localParent = this.find(parent.label);\n        if (localParent) {\n          localParent.update(parent);\n        }\n      } else if (typeof parent === 'string' || typeof parent === 'function') {\n        localParent = this.find(parent);\n      }\n\n      if (!localParent) {\n        localParent = this.createNode(parent);\n        if (!this.find(n => localParent === n)) {\n          this.add(localParent);\n        }\n      }\n    }\n\n    (localParent || this).add(node);\n    return node;\n  }\n\n  /**\n   * Creates a new navigator node.\n   * @param nodeData The data that serves as the basis for creating a new node.\n   */\n  createNode(nodeData: string | object | NavigatorNodeData | NavigatorNode) {\n    if (nodeData instanceof NavigatorNode) {\n      return nodeData;\n    }\n    if (typeof nodeData === 'string') {\n      return new NavigatorNode({ label: nodeData });\n    }\n    if (typeof nodeData === 'object') {\n      return new NavigatorNode({ ...nodeData, parent: undefined });\n    }\n    throw new Error('Wrong type of node data');\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {\n  ExtensionPoint,\n  fromTrigger,\n  sortByPriority,\n  stateToFactory\n} from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorNode } from './navigator-node';\nimport { NavigatorNodeData } from './navigator-node-data';\nimport { NavigatorNodeRoot } from './navigator-node-root';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_NAVIGATOR_NODES = new InjectionToken('NavigatorNodesFactory');\n\n/**\n * A service which defines the navigator.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class NavigatorService extends StateService implements ExtensionPoint<NavigatorNode> {\n  /**\n   * Navigator menu items observable. It emits the current list of nodes in the navigator.\n   * @readonly\n   */\n  items$: Observable<NavigatorNode[]>;\n\n  /**\n   * Refresh the extension factories subject.\n   * @readonly\n   */\n  readonly refreshTrigger = new Subject();\n\n  /**\n   * @ignore\n   */\n  readonly state$ = new BehaviorSubject<Set<NavigatorNode>>(new Set<NavigatorNode>());\n\n  /**\n   * Indicates whether the menu entry associated with the given URL should be expanded.\n   */\n  firstUrl = true;\n\n  constructor(private injector: Injector, private router: Router) {\n    super();\n    const rootNode = new NavigatorNodeRoot();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_NAVIGATOR_NODES, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((nodes: Partial<NavigatorNodeData[]>) => {\n        const noParent = nodes.filter(node => !node.parent);\n        const withParent = nodes.filter(node => node.parent);\n\n        // Based on the sortedNodes array, the nodes are sequentially created.\n        // Nodes sorting is done in two steps to have the top-level nodes first.\n        // This way, by the time we are adding a child node, the parent node is already present.\n        const sortedNodes = sortByPriority(noParent).concat(sortByPriority(withParent));\n        rootNode.empty();\n        sortedNodes.forEach(node => rootNode.addRoot(node));\n        return rootNode.children;\n      }),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Checks whenever a navigator entry associated with the given URL should be expanded.\n   * @param {NavigatorNode} node Navigator node.\n   */\n  openOnFirstUrl(node: NavigatorNode) {\n    if (this.firstUrl && !!node.path) {\n      return (\n        this.router.isActive(node.path, node.routerLinkExact) || node.openOnStart(this.router.url)\n      );\n    }\n    return false;\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<NavigatorNode> {\n    return this.state$.value;\n  }\n\n  /**\n   * Refresh the extension factories.\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Adds a new node to the navigator.\n   * @param {NavigatorNode} node Navigator node to add.\n   */\n  add(node: NavigatorNode) {\n    this.state.add(node);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes a node from the navigator.\n   * @param {NavigatorNode} node Navigator node to remove.\n   */\n  remove(node: NavigatorNode) {\n    this.state.delete(node);\n    this.emitNewState();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map, combineLatest, delay, debounceTime } from 'rxjs/operators';\nimport { OptionsService } from '../common/options.service';\nimport { StateService } from '../common/state-service.abstract';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { Header } from './header.model';\n\n/**\n * A service which defines header functions.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeaderService extends StateService {\n  header$: Observable<Header>;\n  navigatorOpen$: Observable<boolean>;\n  readonly DELAY_TO_AVOID_FLICKERING_ON_ASYNC_NODES = 1000;\n\n  hasItemsInNavigator$ = this.navigatorService.items$.pipe(\n    delay(this.DELAY_TO_AVOID_FLICKERING_ON_ASYNC_NODES),\n    map(({ length }) => !!length),\n    distinctUntilChanged()\n  );\n\n  state$: BehaviorSubject<Header> = new BehaviorSubject<Header>({\n    title: undefined,\n    nav: {\n      open: false\n    }\n  });\n\n  title = undefined;\n\n  constructor(private navigatorService: NavigatorService, private options: OptionsService) {\n    super();\n    this.header$ = this.map((header: Header) => header);\n    this.navigatorOpen$ = this.map(({ nav }) => nav.open).pipe(\n      combineLatest(this.hasItemsInNavigator$),\n      map(([open, hasItems]) => open && hasItems)\n    );\n    const titleReference = document.querySelector('title');\n    this.title = {\n      elementRef: titleReference,\n      originalValue: titleReference && titleReference.innerText\n    };\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  get navigatorHiddenOnStartup() {\n    return this.options.hideNavigator;\n  }\n\n  get largeWidth() {\n    return document.documentElement.clientWidth > 1200;\n  }\n\n  get shouldToggle() {\n    return this.largeWidth && !this.navigatorHiddenOnStartup && !this.state.nav.open;\n  }\n\n  /**\n   * Toggles the navigator open status.\n   */\n  toggleNavigator() {\n    this.state.nav.open = !this.state.nav.open;\n    this.emitNewState();\n  }\n\n  /**\n   * Force to close the navigator.\n   */\n  closeNavigator() {\n    this.state.nav.open = false;\n    this.emitNewState();\n  }\n\n  /**\n   * Configures navigation options.\n   * @param config Object with the properties:\n   * - open: Boolean\n   */\n  configNavigator(config: any = {}) {\n    this.state.nav = Object.assign(this.state.nav, config);\n    this.emitNewState();\n  }\n\n  /**\n   * Change the application title.\n   * @param newTitle The new title of the application.\n   */\n  changeTitle(newTitle?: any, pageTitleUpdate: boolean = true) {\n    this.state.title = newTitle;\n    this.state.pageTitleUpdate = pageTitleUpdate;\n\n    this.emitNewState();\n  }\n\n  /**\n   * Change the page title.\n   * @param newTitle The new title of the page.\n   */\n  changePageTitle(newTitle?: string) {\n    this.title.elementRef.innerText = newTitle\n      ? `${newTitle} / ${this.title.originalValue}`\n      : `${this.title.originalValue}`;\n  }\n\n  /**\n   * This methods checks if the navigator toggles on startup\n   * or if an item is added to the navigator node.\n   * Delay of 300ms is intended for animation purpose.\n   */\n  verifyIfNavOpen() {\n    this.hasItemsInNavigator$\n      .pipe(debounceTime(300))\n      .subscribe(hasItems => hasItems && this.shouldToggle && this.toggleNavigator());\n  }\n\n  shouldShowBreadcrumbs() {\n    return this.options.breadcrumbs;\n  }\n}\n","import { Injectable, InjectionToken, Injector, ViewContainerRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { distinctUntilChanged, filter, first, map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Tab } from './tab.model';\nimport { OptionsService } from '../common/options.service';\n\nexport const HOOK_TABS = new InjectionToken('TabsFactory');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TabsService extends StateService implements ExtensionPoint<Tab> {\n  items$: Observable<Tab[]>;\n  orientation$: Observable<string>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Tab>>(new Set<Tab>());\n\n  constructor(\n    private injector: Injector,\n    router: Router,\n    private translateService: TranslateService,\n    private options: OptionsService\n  ) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_TABS, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map(tabs => this.prepareTabs(tabs)),\n      shareReplay(1),\n      distinctUntilChanged()\n    );\n\n    this.orientation$ = this.items$.pipe(\n      map((tabs: Tab[]) => {\n        const firstTabWithDefinedOrientation = tabs.find(tab => tab.orientation);\n        if (firstTabWithDefinedOrientation) {\n          return firstTabWithDefinedOrientation.orientation;\n        }\n        return this.options.tabsHorizontal ? 'horizontal' : 'vertical';\n      }),\n      distinctUntilChanged()\n    );\n  }\n\n  prepareTabs(tabs) {\n    return this.sortTabs(\n      tabs\n        .map(tab => ({\n          ...tab,\n          template: tab.template instanceof ViewContainerRef ? tab.template : undefined\n        }))\n        .filter((tab, index, self) => index === self.findIndex(t => t.path === tab.path))\n    );\n  }\n\n  sortTabs(tabs) {\n    return tabs.sort((a, b) => {\n      const priorityOrder = (b.priority || 0) - (a.priority || 0);\n\n      const aTranslatedLabel = this.translateService.instant(a.label);\n      const bTranslatedLabel = this.translateService.instant(b.label);\n      const translatedLabelOrder = aTranslatedLabel.localeCompare(bTranslatedLabel);\n\n      return priorityOrder || translatedLabelOrder;\n    });\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state(): Set<Tab> {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to tabs and emits state change\n   * @param item The item to add.\n   */\n  add(item: Tab) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes a tab and emits a state change.\n   * @param item The item to remove.\n   */\n  remove(item: Tab) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n\n  get firstTab$() {\n    return this.items$.pipe(\n      map(tabs => tabs[0]),\n      filter(Boolean),\n      first()\n    );\n  }\n}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { ActionBarService } from '../action-bar/action-bar.service';\nimport { OptionsService } from '../common/options.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { HeaderService } from '../header/header.service';\nimport { NavigatorService } from '../navigator/navigator.service';\nimport { TabsService } from '../tabs/tabs.service';\n\n@Component({\n  selector: 'c8y-bootstrap',\n  templateUrl: './bootstrap.template.html'\n})\nexport class BootstrapComponent {\n  navigatorOpen$: Observable<boolean>;\n  noAppsMargin$: Observable<boolean>;\n  tabsOrientation: string;\n  showPoweredBy: boolean = true;\n\n  constructor(\n    public tabs: TabsService,\n    public ui: AppStateService,\n    public navigator: NavigatorService,\n    public actionBar: ActionBarService,\n    private options: OptionsService,\n    public headerService: HeaderService\n  ) {\n    this.noAppsMargin$ = this.headerService.map(({ nav }) => !nav.open && nav.hiddenOnStartup);\n    this.tabsOrientation = this.options.tabsHorizontal ? 'horizontal' : 'vertical';\n    this.ui\n      .map(({ lang }) => lang)\n      .pipe(distinctUntilChanged())\n      .subscribe(() => {\n        this.actionBar.refresh();\n      });\n    this.showPoweredBy = !this.options.get('hidePowered');\n  }\n}\n","import { Component, Input, ViewChild } from '@angular/core';\nimport { BreadcrumbItem } from './breadcrumb.model';\n\n@Component({\n  selector: 'c8y-breadcrumb-item',\n  templateUrl: './breadcrumb-item.component.html'\n})\nexport class BreadcrumbItemComponent implements BreadcrumbItem {\n  @Input() icon: string;\n  @Input() translate: boolean;\n  @Input() label: string;\n  @Input() path: string;\n  @ViewChild('template', {static: false}) template: any;\n}\n","import { Component, Input } from '@angular/core';\nimport { Breadcrumb } from './breadcrumb.model';\n\n@Component({\n  selector: 'c8y-breadcrumb-outlet',\n  templateUrl: './breadcrumb-outlet.component.html'\n})\nexport class BreadcrumbOutletComponent {\n  showAll = false;\n  @Input() breadcrumbs: Breadcrumb[] = [];\n\n  /**\n   * For upgrade only. Old angularjs routes start with hash, new ones not.\n   */\n  normalizePath(path) {\n    return path.replace(/^#\\/?/, '');\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { fromTrigger, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Breadcrumb, BreadcrumbItem } from './breadcrumb.model';\n\nexport const HOOK_BREADCRUMB = new InjectionToken('BreadcrumbFactory');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BreadcrumbService extends StateService {\n  items$: Observable<Breadcrumb[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<Breadcrumb>>(new Set<Breadcrumb>());\n  private preferredPath: string;\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_BREADCRUMB, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map(breadcrumbs => this.sortByPreferredPath(breadcrumbs)),\n      shareReplay(1)\n    );\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the action bar in the header.\n   * @param item The item to add.\n   */\n  add(item: Breadcrumb) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an action bar item from the header.\n   * @param item The item to remove.\n   */\n  remove(item: Breadcrumb) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Sets the crumb that contains that path to the top.\n   * @param path The path to prefer.\n   */\n  selectPreferredByPath(path: string) {\n    this.preferredPath = path;\n    this.refresh();\n  }\n\n  sortByPreferredPath(breadcrumbs) {\n    if (this.preferredPath) {\n      return breadcrumbs.sort(bc =>\n        bc.items.find((item: BreadcrumbItem) => !!item.path.match(this.preferredPath)) ? -1 : 1\n      );\n    }\n    return breadcrumbs;\n  }\n}\n","import { Component, ContentChildren, QueryList } from '@angular/core';\nimport { Breadcrumb, BreadcrumbItem } from './breadcrumb.model';\nimport { BreadcrumbService } from './breadcrumb.service';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\n\n@Component({\n  selector: 'c8y-breadcrumb',\n  templateUrl: './breadcrumb.component.html'\n})\nexport class BreadcrumbComponent implements Breadcrumb {\n  items: BreadcrumbItem[];\n  @ContentChildren(BreadcrumbItemComponent) private contentChildItems: QueryList<BreadcrumbItem>;\n  private viewInitTimeout;\n\n  constructor(private breadcrumbService: BreadcrumbService) {}\n\n  ngAfterViewInit() {\n    this.items = this.contentChildItems.toArray();\n    this.viewInitTimeout = setTimeout(() =>\n      this.breadcrumbService.add(this as Breadcrumb)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.breadcrumbService.remove(this as Breadcrumb);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { BreadcrumbItemComponent } from './breadcrumb-item.component';\nimport { BreadcrumbOutletComponent } from './breadcrumb-outlet.component';\nimport { BreadcrumbComponent } from './breadcrumb.component';\nimport { BreadcrumbService } from './breadcrumb.service';\n\n/**\n * The angular module definition for breadcrumbs.\n * @exports BreadcrumbComponent\n * @exports BreadcrumbItemComponent\n * @exports BreadcrumbOutletComponent\n */\n@NgModule({\n  declarations: [\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    BreadcrumbOutletComponent\n  ],\n  imports: [\n    RouterModule.forChild([]),\n    CommonModule,\n    TooltipModule.forRoot()\n  ],\n  exports: [\n    BreadcrumbComponent,\n    BreadcrumbItemComponent,\n    BreadcrumbOutletComponent\n  ]\n})\nexport class BreadcrumbModule { }\n","import { Component, TemplateRef, ViewChild, Input} from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\n\n@Component({\n  selector: 'c8y-navigator-item',\n  template: '<ng-template #iconTpl><ng-content></ng-content></ng-template>',\n})\nexport class NavigatorItemComponent  {\n  @ViewChild('iconTpl', {static: true}) template: TemplateRef<any>;\n  @Input() label: string;\n  @Input() icon: string;\n  @Input() path: string;\n  @Input() priority = 0;\n  nodeData: NavigatorNode;\n  constructor(\n    private service: NavigatorService\n  ) {\n    this.nodeData = new NavigatorNode();\n  }\n\n  ngOnInit(): void {\n    this.ngOnChanges();\n    setTimeout(() => this.service.add(this.nodeData));\n  }\n\n  ngOnChanges(): void {\n    this.nodeData.icon = this.icon;\n    this.nodeData.label = this.label;\n    this.nodeData.path = this.path;\n    this.nodeData.priority = this.priority;\n    this.nodeData.iconTemplate = !this.icon ? this.template : undefined;\n    this.nodeData.icon = this.icon;\n  }\n\n  ngOnDestroy(): void {\n    this.service.remove(this.nodeData);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\n\n/**\n * Navigator node icon component.\n */\n@Component({\n  selector: 'c8y-navigator-icon',\n  template: `<i class=\"icon\" [c8yIcon]=\"icon\"></i>`\n})\nexport class NavigatorIconComponent {\n  /**\n   * Navigator node.\n   */\n  @Input() node: NavigatorNode;\n\n  /**\n   * Returns the navigator node icon.\n   * If the icon is not defined, it returns the default icon (cog).\n   */\n  get icon() {\n    const DEFAULT_ICON = 'cog';\n    return this.node.icon || DEFAULT_ICON;\n  }\n\n  /**\n   * Returns the navigator icon CSS class.\n   */\n  get iconClass() {\n    return `dlt-c8y-icon-${this.icon}`;\n  }\n}\n","import { Component, Input, ViewChild, OnDestroy } from '@angular/core';\nimport { PopoverDirective } from 'ngx-bootstrap/popover';\nimport { StatusType } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\n\nexport interface PopoverConfirmButtons {\n  /**\n   * The label of the button\n   */\n  label: string;\n  /**\n   * Which action to perform.\n   */\n  action: () => Promise<any>;\n  /**\n   * The status class attached to the button.\n   */\n  status?: StatusType | 'primary';\n}\n\n/**\n * A component to show a popover right next to the\n * user action. Add this component where the confirm modal\n * should be shown and toggle isOpen to display it. You\n * can use `await isShow()` to wait for a result on the\n * click action.\n */\n@Component({\n  selector: 'c8y-popover-confirm',\n  templateUrl: './popover-confirm.component.html'\n})\nexport class PopoverConfirmComponent {\n  @ViewChild(PopoverDirective, {static: false}) popover: PopoverDirective;\n  @Input() buttons: PopoverConfirmButtons[] = [{ label: gettext('cancel'), action: () => Promise.reject()}];\n  @Input() message: string;\n  @Input() title: string;\n  @Input() isOpen = false;\n  @Input() containerClass = '';\n  @Input() placement = 'right';\n  @Input() outsideClick = false;\n\n  click: (action: () => Promise<any>) => void;\n\n  /**\n   * Show the popover. Wait until an action is performed on it.\n   */\n  async show(buttons?: PopoverConfirmButtons[]) {\n    this.buttons = buttons || this.buttons;\n    this.isOpen = true;\n    let result;\n    try {\n      result = await new Promise((resolve, reject) => {\n        return this.click = (action: () => Promise<any>) => action().then(resolve).catch(reject);\n      });\n    } catch (ex) {\n      throw(ex);\n    } finally {\n      this.isOpen = false;\n    }\n    return result;\n  }\n\n  buttonStatus(status) {\n    if (status) {\n      return `btn-${status}`;\n    }\n    return 'btn-link btn-clean';\n  }\n\n  handleOutsideClick() {\n    this.click(() => Promise.reject());\n  }\n}\n","// tslint:disable-next-line:max-line-length\nimport {\n  Component,\n  ComponentFactoryResolver,\n  Input,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef,\n  Output,\n  EventEmitter,\n  OnDestroy\n} from '@angular/core';\nimport { RouterLinkActive } from '@angular/router';\nimport { NavigatorIconComponent } from './navigator-icon.component';\nimport { NavigatorNode, ClickOptions } from './navigator-node';\nimport { NavigatorService } from './navigator.service';\nimport { PopoverConfirmComponent } from '../modal/popover-confirm.component';\n\nexport const enum ClickEventSource {\n  ICON = 'icon',\n  EXPANDER = 'expander',\n  LINK = 'link'\n}\n\n/**\n * Navigator node renderer.\n */\n@Component({\n  selector: 'c8y-navigator-node-display',\n  templateUrl: './navigator-node.component.html'\n})\nexport class NavigatorNodeComponent implements OnDestroy {\n  /**\n   * @ignore\n   */\n  @ViewChild('icon', { read: ViewContainerRef, static: false }) iconSlot: ViewContainerRef;\n\n  /**\n   * Navigator node.\n   */\n  @Input() node: NavigatorNode;\n\n  /**\n   * Determines whether the navigator node is a root node (top node in the hierarchy).\n   */\n  @Input() isRoot: boolean;\n\n  /**\n   * @ignore\n   */\n  @ViewChild(RouterLinkActive, { static: false }) routerLinkActive: RouterLinkActive;\n\n  /**\n   * @ignore\n   */\n  @ViewChildren(NavigatorNodeComponent) childrenNodes: QueryList<NavigatorNodeComponent>;\n\n  /**\n   * Event emitter responsible for broadcasting one of the following events: \"icon\", \"expander\" or \"link\" as string value.\n   *\n   * The type of event depends on where you click on the navigator node:\n   * * clicking the icon will broadcast the event \"icon\",\n   * * clicking the expander will broadcast the event \"expander\",\n   * * clicking the label will broadcast the event \"link\".\n   */\n  @Output() nodeClick: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * @ignore\n   */\n  @ViewChild(PopoverConfirmComponent, { static: false }) confirm: PopoverConfirmComponent;\n\n  /**\n   * Parent node renderer.\n   */\n  parentNode: NavigatorNodeComponent;\n\n  private viewInitTimeout;\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private navigator: NavigatorService\n  ) {}\n\n  /**\n   * @ignore\n   */\n  ngAfterViewInit() {\n    this.childrenNodes.forEach(n => (n.parentNode = this));\n    this.viewInitTimeout = setTimeout(() => {\n      this.updateIcon();\n      this.openOnFirstUrl();\n      this.expandParentIfActive();\n      this.node.confirm = this.confirm;\n    });\n  }\n\n  /**\n   * Expands the navigator node when the URL matches the path provided in the node.\n   */\n  openOnFirstUrl() {\n    if (this.navigator.openOnFirstUrl(this.node) && !this.node.open) {\n      this.expandCollapse(true);\n    }\n  }\n\n  /**\n   * Returns the expander title.\n   */\n  get expandTitle() {\n    return !this.node.open ? 'Expand' : 'Collapse';\n  }\n\n  /**\n   * Click event handler.\n   *\n   * @param {string} from Source of the click event.\n   * @param event DOM event.\n   */\n  click(from: 'icon' | 'expander' | 'link' = 'link', $event?: MouseEvent) {\n    let open: boolean;\n\n    switch (from) {\n      case ClickEventSource.EXPANDER:\n        if ($event) {\n          $event.stopPropagation();\n          $event.preventDefault();\n        }\n        open = !this.node.open;\n        break;\n      case ClickEventSource.ICON:\n      case ClickEventSource.LINK:\n        open = this.routerLinkActive && this.routerLinkActive.isActive ? true : !this.node.open;\n        break;\n    }\n    this.handleExpandCollapse(open, from, $event);\n    this.nodeClick.emit(from);\n  }\n\n  /**\n   * Expands or collapses the navigator node and its children recursively.\n   *\n   * @param {boolean} open Open or close the node.\n   * @param {boolean} recursive Open or close the children.\n   * @param {ClickOptions} forNode Click options.\n   */\n  expandCollapse(open, recursive?, forNode: ClickOptions = {}) {\n    this.node.open = open;\n    if (recursive) {\n      this.childrenNodes.forEach(n => n.expandCollapse(open, recursive));\n    }\n    forNode.open = open;\n    this.node.click(forNode);\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy(): void {\n    clearTimeout(this.viewInitTimeout);\n\n    if (this.node) {\n      this.node.destroy();\n    }\n  }\n\n  private handleExpandCollapse(open, from, $event) {\n    if (\n      open === this.node.open ||\n      (this.node.path && !open && from !== ClickEventSource.EXPANDER)\n    ) {\n      return;\n    }\n    this.expandCollapse(open, false, { [from]: true, $event });\n  }\n\n  private expandParentIfActive() {\n    if (this.routerLinkActive && this.routerLinkActive.isActive && this.parentNode) {\n      this.parentNode.expandCollapse(true);\n    }\n  }\n\n  private updateIcon() {\n    if (this.node.iconTemplate) {\n      this.updateIconTemplate();\n    } else {\n      this.updateIconComponent();\n    }\n  }\n\n  private updateIconComponent() {\n    let componentType = NavigatorIconComponent;\n    if (this.node && this.node.iconComponent) {\n      componentType = this.node.iconComponent;\n    }\n    this.iconSlot.clear();\n    const iconComponentFactory = this.componentFactoryResolver.resolveComponentFactory(\n      componentType\n    );\n    const componentRef = this.iconSlot.createComponent(iconComponentFactory);\n    componentRef.instance.node = this.node;\n  }\n\n  private updateIconTemplate() {\n    this.iconSlot.clear();\n    this.iconSlot.createEmbeddedView(this.node.iconTemplate);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'c8y-right-drawer',\n  templateUrl: './right-drawer.component.html'\n})\nexport class RightDrawerComponent {\n  @Input('quickLinks') set _quickLinks(data: any[]) {\n    if (data) {\n      this.quickLinks = data.filter(d => d.type === 'quicklink');\n    }\n  }\n  @Input('helpAndSupport') set _helpAndSupport(data: any[]) {\n    if (data) {\n      this.helpAndSupport = data.filter(d => d.type === 'doc');\n    }\n  }\n  @Input() app: any;\n  quickLinks: any[] = [];\n  helpAndSupport: any[] = [];\n}\n","import { Component, ElementRef, NgZone } from '@angular/core';\nimport { HeaderService } from '../header.service';\nimport { debounceTime, map, filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-title-outlet',\n  templateUrl: './title-outlet.component.html'\n})\nexport class TitleOutletComponent {\n  title = undefined;\n  pageTitleUpdate: boolean = true;\n\n  constructor(\n    private headerService: HeaderService,\n    private element: ElementRef,\n    private zone: NgZone\n  ) {\n    const title$ = this.headerService.map(state => state.title);\n    title$.subscribe(title => (this.title = title));\n\n    const pageTitleUpdate$ = this.headerService.map(state => state.pageTitleUpdate);\n    pageTitleUpdate$.subscribe(pageTitleUpdate => (this.pageTitleUpdate = pageTitleUpdate));\n\n    this.zone.runOutsideAngular(() => {\n      this.headerService.state$.pipe(\n        debounceTime(100),\n        filter(state => state.pageTitleUpdate),\n        debounceTime(100),\n        map(() => this.element.nativeElement.querySelector('h1')),\n        filter(el => el !== null),\n        map(el => el.innerText),\n        filter(Boolean))\n        .subscribe((title: string) => headerService.changePageTitle(title));\n    });\n  }\n}\n","import { AfterViewInit, Component, OnDestroy, ViewChild, Input } from '@angular/core';\nimport { HeaderService } from '../header.service';\n\n@Component({\n  selector: 'c8y-title',\n  templateUrl: './title.component.html'\n})\nexport class TitleComponent implements AfterViewInit, OnDestroy {\n  @Input() pageTitleUpdate: boolean = true;\n  @ViewChild('template', {static: true}) template;\n  private viewInitTimeout;\n\n  constructor(\n    private headerService: HeaderService\n  ) {}\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() => this.headerService.changeTitle(this.template, this.pageTitleUpdate));\n  }\n\n  ngOnDestroy() {\n    if (this.headerService.state.title === this.template) {\n      clearTimeout(this.viewInitTimeout);\n      this.headerService.changeTitle();\n    }\n  }\n}\n","import { Injectable, InjectionToken, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ExtensionPoint, fromTrigger, sortByPriority, stateToFactory } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport { Search } from './search.model';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_SEARCH = new InjectionToken('SearchFactory');\n\n/**\n * A service which defines the dearch function.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService extends StateService implements ExtensionPoint<Search> {\n  items$: Observable<Search[]>;\n  readonly refreshTrigger = new Subject();\n  protected state$ = new BehaviorSubject<Set<Search>>(new Set<Search>());\n\n  constructor(\n    private injector: Injector,\n    router: Router\n  ) {\n    super();\n    this.items$ = fromTrigger(router, this.refreshTrigger, [\n      () => this.injector.get(HOOK_SEARCH, []),\n      stateToFactory(this.state$)\n    ]).pipe(\n      map((items: Search[]) => sortByPriority(items)),\n      shareReplay(1)\n    );\n  }\n\n  /**\n   * Refresh the extension factories\n   */\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the search in the header.\n   * @param item The item to add.\n   */\n  add(item: Search) {\n    this.state.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an search from the header.\n   * @param item The item to remove.\n   */\n  remove(item: Search) {\n    this.state.delete(item);\n    this.emitNewState();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { StateService } from '../common/state-service.abstract';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserMenuItem } from './user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserMenuService extends StateService {\n  state$: BehaviorSubject<any> = new BehaviorSubject<any>({\n    userMenuItems: new Set<UserMenuItem>()\n  });\n\n  /**\n   * Returns the current state.\n   * @readonly\n   * @returns The current set of actions.\n   */\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Adds a new item to the search in the header.\n   * @param item The item to add.\n   */\n  add(item: UserMenuItem) {\n    this.state.userMenuItems.add(item);\n    this.emitNewState();\n  }\n\n  /**\n   * Removes an search from the header.\n   * @param item The item to remove.\n   */\n  remove(item: UserMenuItem) {\n    this.state.userMenuItems.delete(item);\n    this.emitNewState();\n  }\n}\n","import { gettext } from '../i18n/gettext';\n\nexport const documentationItems = [\n  {\n    icon: 'c8y-c8y-data', // double c8y- is correct!\n    label: gettext('Concepts guide`KEEP_ORIGINAL`'),\n    url: '/concepts/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-user',\n    label: gettext('User guide`KEEP_ORIGINAL`'),\n    url: '/users-guide/getting-started',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-device-management',\n    label: gettext('Device guides`KEEP_ORIGINAL`'),\n    url: '/devices/overview',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-book',\n    label: gettext('Cumulocity IoT Edge`KEEP_ORIGINAL`'),\n    url: '/edge/overview',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-tools',\n    label: gettext('Microservice SDK guide`KEEP_ORIGINAL`'),\n    url: '/microservice-sdk/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-tools',\n    label: gettext('Device SDK guide`KEEP_ORIGINAL`'),\n    url: '/device-sdk/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-smart-rest',\n    label: gettext('Web SDK guide`KEEP_ORIGINAL`'),\n    url: '/web/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-data-explorer',\n    label: gettext('Streaming analytics guide`KEEP_ORIGINAL`'),\n    url: '/apama/introduction',\n    type: 'doc'\n  },\n  {\n    icon: 'c8y-bookmark',\n    label: gettext('Reference guide`KEEP_ORIGINAL`'),\n    url: '/reference/rest-implementation',\n    type: 'doc'\n  },\n  {\n    icon: 'gavel',\n    label: gettext('Legal notices'),\n    url: 'https://documentation.softwareag.com/legal/',\n    type: 'doc'\n  }\n];\n","import { InjectionToken } from '@angular/core';\nimport { ExtensionFactory } from '../common/extension-hooks';\n\nexport interface DocLink {\n  icon: string;\n  label: string;\n  url: string;\n  type: 'doc' | 'quicklink';\n  click?: any;\n}\n\nexport type DocLinkFactory = ExtensionFactory<DocLink>;\n\nexport const HOOK_DOCS = new InjectionToken<ExtensionFactory<DocLink>>('Hook docs');\n","import { Injectable, Inject, Optional } from '@angular/core';\nimport { OptionsService } from '../common/options.service';\nimport { documentationItems } from './defaults.items';\nimport { AppStateService } from '../common/ui-state.service';\nimport { gettext } from '../i18n/gettext';\nimport { DocLink, HOOK_DOCS, DocLinkFactory } from './docs.models';\nimport { ExtensionPoint, fromTrigger } from '../common/extension-hooks';\nimport { Observable } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { shareReplay, startWith, first, filter } from 'rxjs/operators';\nimport { isUndefined } from 'lodash-es';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DocsService implements ExtensionPoint<DocLink> {\n  items$: Observable<DocLink[]>;\n  constructor(\n    private options: OptionsService,\n    private app: AppStateService,\n    @Optional() @Inject(HOOK_DOCS) factories: DocLinkFactory[] = [],\n    router: Router\n  ) {\n    if (!factories) {\n      factories = [];\n    }\n    factories.push(this);\n    const refreshTrigger = this.app.map(({ supportUrl }) => supportUrl);\n    this.items$ = fromTrigger(router, refreshTrigger, factories).pipe(\n      startWith([]),\n      shareReplay(1)\n    );\n  }\n\n  getBaseUrl(): string {\n    return this.options.get('docsBaseUrl', 'https://www.cumulocity.com/guides');\n  }\n\n  get templateStr(): string {\n    return this.options.get('guideHrefTemplate', '${docsBaseUrl}${partialUrl}');\n  }\n\n  getUserGuideLink(link) {\n    if (/^https?:/.test(link)) {\n      return link;\n    }\n    if (this.getBaseUrl === null) {\n      return null;\n    }\n    return this.getLink(this.templateStr, link);\n  }\n\n  list() {\n    return this.items$\n      .pipe(\n        filter(i => !!i.length),\n        first()\n      )\n      .toPromise();\n  }\n\n  refresh() {\n    // no op\n  }\n\n  get() {\n    // use the function as a factory\n    const { links, noDefault, excludeDefault = [] } = this.options.get('docs', {});\n    const { supportUrl } = this.app.state;\n    let staticLinks = noDefault\n      ? []\n      : documentationItems\n          .map((item: DocLink) => ({ ...item, url: this.getUserGuideLink(item.url) }))\n          .filter(({ url }) => !excludeDefault.some(e => new RegExp(e).test(url)));\n\n    if (links) {\n      // backwards compatibility\n      links.map((lnk: DocLink) => {\n        if (isUndefined(lnk.type)) {\n          lnk.type = 'doc';\n          return lnk;\n        }\n      });\n      staticLinks = staticLinks.concat(links);\n    }\n    if (supportUrl) {\n      staticLinks.push({\n        icon: 'comments',\n        label: gettext('Forum support'),\n        url: supportUrl,\n        type: 'doc'\n      });\n    }\n    return staticLinks;\n  }\n\n  private getLink(templateStr, partialLink) {\n    if (!templateStr) {\n      return undefined;\n    }\n    return templateStr\n      .replace(/\\${docsBaseUrl}/, this.getBaseUrl())\n      .replace(/\\${partialUrl}/, this.prefixWithSlash(partialLink));\n  }\n\n  private prefixWithSlash(partialLink = '') {\n    const shouldPrefix = !(partialLink && /^\\//.test(partialLink));\n    const prefix = shouldPrefix ? '/' : '';\n    return `${prefix}${partialLink}`;\n  }\n}\n","import { AfterViewInit, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ActionService } from '../../action/action.service';\nimport { BreadcrumbService } from '../../breadcrumb/breadcrumb.service';\nimport { SearchService } from '../../search/search.service';\nimport { AppStateService } from '../../common/ui-state.service';\nimport { UserMenuService } from '../../user/user-menu.service';\nimport { HeaderService } from '../header.service';\nimport { DocsService } from '../../docs/docs.service';\n\n@Component({\n  selector: 'c8y-header-bar',\n  templateUrl: './header-bar.component.html'\n})\nexport class HeaderBarComponent implements AfterViewInit {\n  canToggle$: Observable<boolean> = this.headerService.hasItemsInNavigator$;\n  appState$: Observable<any> = this.appState.state$;\n  drawerOpen = false;\n  headerOpen = false;\n\n  constructor(\n    public headerService: HeaderService,\n    public actionService: ActionService,\n    public breadcrumbService: BreadcrumbService,\n    public searchService: SearchService,\n    private appState: AppStateService,\n    public userMenuService: UserMenuService,\n    public docs: DocsService\n  ) {}\n\n  ngAfterViewInit() {\n    this.headerService.verifyIfNavOpen();\n  }\n\n  toggle() {\n    this.headerOpen = !this.headerOpen;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ApplicationService, IApplication, ICurrentTenant, IUser } from '@c8y/client';\nimport { get, includes, orderBy } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { AppStateService } from '../../common/ui-state.service';\n@Component({\n  selector: 'c8y-app-switcher',\n  templateUrl: './app-switcher.component.html'\n})\nexport class AppSwitcherComponent {\n  oneCloudApps?: Array<IApplication & { [key: string]: any }>;\n  apps: Array<IApplication & { [key: string]: any }>;\n  open: boolean;\n\n  private get hideCloudApps(): boolean {\n    return false; // this should be configurable from outside\n  }\n  private tenant: ICurrentTenant;\n  constructor(private ui: AppStateService, private applications: ApplicationService) {\n    const { currentUser, currentTenant } = this.ui;\n    combineLatest(currentUser, currentTenant)\n      .pipe(first())\n      .subscribe(([user, tenant]) => {\n        this.tenant = tenant;\n        this.listAppsForUser(user);\n      });\n  }\n\n  isActive(app: IApplication) {\n    return app.contextPath === this.ui.state.app.contextPath;\n  }\n\n  getHref(app: IApplication) {\n    return this.applications.getHref(app);\n  }\n\n  private async listAppsForUser(user: IUser | null) {\n    if (user) {\n      const { data } = await this.applications.listByUser(user, { pageSize: 1000 });\n      this.apps = this.orderApps(this.filterApps(data));\n    }\n  }\n\n  private filterApps(apps) {\n    apps = this.filterVisible(apps);\n    apps = this.filterCloud(apps);\n    apps = this.filterDuplicates(apps);\n    return apps;\n  }\n\n  private filterVisible(apps) {\n    const visibleApplicationTypes = ['HOSTED', 'EXTERNAL'];\n    return apps.filter(\n      app =>\n        includes(visibleApplicationTypes, app.type) &&\n        !app.noAppSwitcher &&\n        !get(app, 'manifest.noAppSwitcher')\n    );\n  }\n\n  private filterCloud(apps) {\n    const { hideCloudApps } = this;\n    const filterFn = app => !!app.cloud;\n    if (!hideCloudApps) {\n      this.oneCloudApps = this.orderApps(apps.filter(filterFn));\n    }\n    return apps.filter(app => !filterFn(app));\n  }\n\n  private filterDuplicates(apps) {\n    // Filter out apps that have duplicate contextpaths and are not own owned but the current tenant;\n    const filterFn = app =>\n      !apps.some(\n        otherApp =>\n          app !== otherApp &&\n          (app.contextPath && app.contextPath === otherApp.contextPath) &&\n          app.owner.tenant.id !== this.tenant.name\n      );\n    return apps.filter(filterFn);\n  }\n\n  private orderApps(apps) {\n    return orderBy(apps, ({ name }) => name.toLowerCase());\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { find, keys, get, assign, isEmpty } from 'lodash-es';\nimport { OptionsService } from '../../common/options.service';\n\n@Component({\n  selector: 'c8y-app-icon',\n  templateUrl: './app-icon.component.html',\n  host: { class: 'c8y-app-icon' }\n})\nexport class AppIconComponent implements OnInit {\n  @Input() contextPath: string;\n  @Input() name: string = '';\n  @Input() app: any;\n\n  model = {\n    appIcon: '',\n    showIcon: true,\n    iconClass: ['c8y-icon'],\n    appNameAbbr: '',\n    iconStyle: {}\n  };\n\n  private c8yAppIconsList = {\n    analyticsbuilder: 'analytics-builder',\n    'analytics-builder': 'analytics-builder',\n    cockpit: 'cockpit',\n    devicemanagement: 'device-management',\n    administration: 'administration',\n    apamaepl: 'apama-epl'\n  };\n\n  private white: boolean = false;\n\n  private defaultIconStyle = {\n    'background-repeat': 'no-repeat',\n    'background-size': 'contain',\n    height: '36px',\n    width: '36px'\n  };\n\n  constructor(private options: OptionsService) {}\n\n  ngOnInit() {\n    this.model.appIcon = this.iconFromAppDefinition() || this.findStaticIcon();\n    const iconUrl = this.iconUrlFromAppDefinition();\n    if (iconUrl) {\n      this.model.iconStyle = assign(this.defaultIconStyle, {\n        'background-image': iconUrl\n      });\n    }\n    this.model.showIcon = !!this.model.appIcon || !isEmpty(this.model.iconStyle);\n    this.model.iconClass = [\n      'c8y-icon',\n      this.mapFontAwesomeToDelightIcons(this.model.appIcon),\n      this.white ? 'c8y-icon-white' : 'c8y-icon-duocolor'\n    ].filter(c => !!c);\n    this.model.appNameAbbr = this.name.substr(0, 2);\n  }\n\n  private findStaticIcon() {\n    const contextPath = this.contextPath || this.name;\n    const appContextPathNormalized = find(keys(this.c8yAppIconsList), cp => {\n      return contextPath.indexOf(cp) > -1;\n    });\n    const appIcon = this.c8yAppIconsList[appContextPathNormalized];\n    return appIcon ? `c8y-icon-${appIcon}` : undefined;\n  }\n\n  private iconFromAppDefinition() {\n    const app = this.app || this.options;\n    const iconClassProperty = ['icon', 'class'];\n    const iconClass = get(app, iconClassProperty) || get(app, ['manifest', ...iconClassProperty]);\n    return iconClass;\n  }\n\n  private iconUrlFromAppDefinition() {\n    const app = this.app || this.options;\n    const iconUrlProperty = ['icon', 'url'];\n    const iconUrl = get(app, iconUrlProperty) || get(app, ['manifest', ...iconUrlProperty]);\n    return iconUrl;\n  }\n\n  private mapFontAwesomeToDelightIcons(iconClasses: string) {\n    if (!iconClasses) {\n      return;\n    }\n    const regex = /fa-/gi;\n    return iconClasses.replace(regex, 'dlt-c8y-icon-');\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { NavigatorNode } from './navigator-node';\nimport { HeaderService } from '../header/index';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * The component shows all nodes that have been added to the navigator.\n * In addition, it allows you to add a header and a footer to the navigator.\n *\n * ## Example:\n * ```html\n * <c8y-navigator-outlet [nodes]=\"navigatorService.items$ | async\" [open]=\"isOpen\">\n *   <header class=\"navigator-slot-top\"></header>\n *   <footer class=\"navigator-slot-bottom\"></footer>\n * </c8y-navigator-outlet>\n * ```\n */\n@Component({\n  selector: 'c8y-navigator-outlet, c8y-ui-navigator',\n  templateUrl: './navigator-outlet.template.html'\n})\nexport class NavigatorOutletComponent {\n  /**\n   * Navigator nodes list.\n   */\n  @Input() nodes: NavigatorNode[];\n  /**\n   * Determines whether the navigator menu should be open/closed.\n   */\n  @Input() open = true;\n  /**\n   * Determines whether the navigator pane should be rendered.\n   */\n  isShown$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n\n  constructor(private headerService: HeaderService) {}\n\n  /**\n   * @ignore\n   */\n  ngOnChanges(): void {\n    this.isShown$.next(this.nodes && this.nodes.length > 0);\n  }\n\n  /**\n   * Closes the navigator menu after clicking an item in the menu, in case of insufficient screen width.\n   */\n  collapseNavigator(from: 'icon' | 'expander' | 'link') {\n    if (from === 'link' && !this.headerService.largeWidth) {\n      this.headerService.closeNavigator();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  trackByPathOrLabel(index, node) {\n    return node.path ? node.path : node.label;\n  }\n}\n","export interface LoginMessage {\n  message: string;\n  type: string;\n}\n\nexport enum LoginViews {\n  None,\n  Credentials,\n  RecoverPassword,\n  SmsChallenge,\n  ChangePassword,\n  TotpChallenge,\n  TotpSetup,\n  ProvidePhoneNumber\n}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { Status, statusAlert, statusIcons, StatusType } from '../common/status.model';\nimport { ModalLabels } from '../select-modal/select-modal.model';\n\n/**\n * Labels to be used in the selection modal.\n * @deprecated This is going to be removed after 1007.7.0. Use ModalLabels instead.\n */\n// tslint:disable-next-line: no-empty-interface\nexport interface ILabels extends ModalLabels {}\n\n@Component({\n  selector: 'c8y-confirm-modal',\n  templateUrl: './modal-confirm.component.html'\n})\nexport class ConfirmModalComponent implements OnDestroy {\n  result: Promise<boolean>;\n  dismiss: () => void;\n  close: () => void;\n  @Input() title: string;\n  @Input() body: string;\n  @Input() status: StatusType = Status.INFO;\n  @Input() set labels(labels: ModalLabels) {\n    const { ok = 'OK', cancel = 'Cancel' } = labels || {};\n    this._labels = { ok, cancel };\n  }\n\n  get labels(): ModalLabels {\n    return this._labels;\n  }\n\n  private _labels: ModalLabels;\n  constructor(private modal: BsModalRef) {\n    this._labels = {\n      ok: 'OK',\n      cancel: 'Cancel'\n    };\n    this.result = new Promise((resolve, reject) => {\n      this.dismiss = () => {\n        reject();\n        this.modal.hide();\n      };\n      this.close = () => {\n        resolve(true);\n        this.modal.hide();\n      };\n    });\n  }\n\n  get classIcon() {\n    return `dlt-c8y-icon-${statusIcons[this.status]}`;\n  }\n\n  get classAlert() {\n    return statusAlert[this.status];\n  }\n\n  ngOnDestroy() {\n    this.dismiss();\n  }\n}\n","import { Component, Input, Optional, Output, EventEmitter, HostListener } from '@angular/core';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { gettext } from '../i18n/gettext';\nimport { isEmpty } from 'lodash';\nimport { ModalLabels } from '../select-modal/select-modal.model';\n\n/**\n * C8y modal component.\n * ## Example:\n *\n * Creating custom modal:\n * ```typescript\n *  import { Component } from \"@angular/core\";\n *  import { Subject } from 'rxjs';\n *\n * @Component({\n *  selector: \"my-modal\",\n *  template: `\n *    <c8y-modal title=\"CustomTitle\"\n *      (onClose)=\"onClose($event)\"\n *      (onDismiss)=\"onDismiss($event)\"\n *      [labels]=\"labels\"\n *      [disabled]=\"true\" <- will disable ok button\n *      >\n *        <span>I am body of modal</span>\n *        <span>For simple string use body=\"string\"</span>\n *    </c8y-modal>`\n * })\n *\n * export class MyModalComponent {\n *\n *  closeSubject: Subject<boolean> = new Subject();\n *  labels : ModalLabels = {ok: \"customOK\", cancel: \"customCancel\"};\n *\n *  onDismiss(event){\n *    this.closeSubject.next(false);\n *  }\n *\n *  onClose(event) {\n *    this.closeSubject.next(true);\n *  }\n * }\n * ```\n * Showing modal:\n * ```typescript\n * import { BsModalService } from \"ngx-bootstrap/modal\";\n *\n * constructor(\n *  public bsModalService: BsModalService,\n * ) {}\n *\n * showModal() {\n *  const modalRef = this.bsModalService.show(MyModalComponent);\n *  modalRef.content.closeSubject.subscribe(result => {\n *    console.log('results:', result);\n *  });\n * }\n * ```\n */\n@Component({\n  selector: 'c8y-modal',\n  templateUrl: './modal.component.html',\n})\n\nexport class ModalComponent {\n  @Output() onDismiss: EventEmitter<boolean> = new EventEmitter();\n  @Output() onClose: EventEmitter<boolean> = new EventEmitter();\n  @Input() disabled = false;\n  @Input() close: () => void;\n  @Input() dismiss: () => void;\n  @Input() title: string;\n  @Input() body: string;\n  @Input() customFooter: boolean = false;\n  @Input() set labels({ok, cancel}: ModalLabels) {\n    this._labels = {ok , cancel};\n  }\n\n  get labels(): ModalLabels { return this._labels; }\n\n  private _labels: ModalLabels =  { ok: gettext('OK'), cancel: gettext('Cancel') };\n\n  constructor(@Optional() private modal: BsModalRef) {}\n\n  _dismiss() {\n    let fn = this.dismiss;\n    if (!fn && this.modal) { fn = () => this.modal.hide(); }\n    if (fn) { fn(); }\n    this.onDismiss.emit(true);\n  }\n\n  _close() {\n    let fn = this.close;\n    if (!fn && this.modal) { fn = () => this.modal.hide(); }\n    if (fn) { fn(); }\n    this.onClose.emit(true);\n  }\n\n  @HostListener('document:keydown.enter', ['$event']) onEnterKeyDown(event: KeyboardEvent) {\n    const hasOnlyOneButton = isEmpty(this.labels.ok) !== isEmpty(this.labels.cancel);\n    const isCancelClickable = !this.customFooter && this.labels.cancel;\n    const isOkClickable = !this.customFooter && !this.disabled && this.labels.ok;\n    if (hasOnlyOneButton  && isCancelClickable) {\n      this._dismiss();\n    }\n    if (hasOnlyOneButton  && isOkClickable) {\n      this._close();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from './modal-confirm.component';\nimport { StatusType, Status } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\n\n/**\n * Service to show a modal.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModalService {\n\n  constructor(private modalService: BsModalService) {}\n\n  /**\n   * Shows a quick confirm message modal.\n   * @param title The title of that modal.\n   * @param body The text body to display.\n   * @param status The status.\n   * @param labels The labels to use. Default: { ok: 'Confirm', cancel: 'Cancel'}\n   */\n  async confirm(title: string, body: string, status: StatusType = Status.INFO,  labels: any = {}) {\n    const modalLabels = {ok: labels.ok || gettext('Confirm'), cancel: labels.cancel || gettext('Cancel')};\n    const modalRef = this.modalService.show(ConfirmModalComponent, {initialState: {title, body, labels: modalLabels, status}});\n    return await modalRef.content.result;\n  }\n\n  /**\n   * Shows a quick acknowledge message modal.\n   * @param title The title of that modal.\n   * @param body The text body to display.\n   * @param status The status.\n   * @param acknowledgeLabel The label to use.\n   */\n  async acknowledge(title: string, body: string, status: StatusType = Status.INFO, acknowledgeLabel: string = gettext('Confirm') ) {\n    const labels = {ok: acknowledgeLabel, cancel: null};\n    const modalRef = this.modalService.show(ConfirmModalComponent, {initialState: {title, body, labels, status}});\n    return await modalRef.content.result;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ModalModule as BsModalModule } from 'ngx-bootstrap/modal';\nimport { ConfirmModalComponent } from './modal-confirm.component';\nimport { ModalComponent } from './modal.component';\nimport { ModalService } from './modal.service';\nimport { CommonModule } from '../common/common.module';\nimport { PopoverConfirmComponent } from './popover-confirm.component';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\n\n/**\n * The angular module definition for modal.\n * @exports ConfirmModalComponent\n * @exports ModalComponent\n * @exports PopoverConfirmComponent\n */\n@NgModule({\n  imports: [\n    BsModalModule.forRoot(),\n    CommonModule,\n    PopoverModule.forRoot()\n  ],\n  exports: [\n    ConfirmModalComponent,\n    ModalComponent,\n    PopoverConfirmComponent\n  ],\n  declarations: [\n    ConfirmModalComponent,\n    ModalComponent,\n    PopoverConfirmComponent\n  ],\n  providers: [\n    ModalService\n  ],\n  entryComponents: [\n    ConfirmModalComponent\n  ]\n})\nexport class ModalModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { CommonModule } from '../common/common.module';\nimport { NavigatorItemComponent } from './navigator-entry.component';\nimport { NavigatorIconComponent } from './navigator-icon.component';\nimport { NavigatorNodeComponent } from './navigator-node.component';\nimport { NavigatorOutletComponent } from './navigator-outlet.component';\nimport { ModalModule } from '../modal/modal.module';\n\n/**\n * The angular module definition for the navigator.\n * @exports NavigatorOutletComponent\n * @exports NavigatorItemComponent\n */\n@NgModule({\n  declarations: [\n    NavigatorOutletComponent,\n    NavigatorNodeComponent,\n    NavigatorItemComponent,\n    NavigatorIconComponent\n  ],\n  imports: [\n    RouterModule,\n    CollapseModule.forRoot(),\n    CommonModule,\n    ModalModule\n  ],\n  exports: [\n    NavigatorOutletComponent,\n    NavigatorItemComponent\n  ],\n  entryComponents: [\n    NavigatorIconComponent\n  ]\n})\nexport class NavigatorModule { }\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { OptionsService } from '../../common/options.service';\nimport { gettext } from '../../i18n/gettext';\nimport { Cookie, CookieBannerSettings, CookiePreferences } from './cookie-banner.model';\n\n/**\n * This service is handling the cookie banner and cookie preferences related logic.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CookieBannerService {\n  readonly STORAGE_KEY: string = 'acceptCookieNotice';\n  readonly COOKIE_BANNER = 'cookieBanner';\n  readonly COOKIE_PREFERENCES_CONFIG = 'cookiePreferences';\n  isCookieBannerShowed$: Subject<boolean> = new Subject();\n\n  cookieDescriptions = {\n    required: gettext(\n      \"These cookies are required to enable core site functionality. They perform a task or operation without which a site's functionality would not be possible.\"\n    ),\n    functional: gettext(\n      'These cookies are used to track site usage and to process my personal data to measure and improve usability and performance. We will neither forward this data to any third party nor use this data for direct marketing purposes. I recognize that I can opt in and out of these cookies at any time.'\n    ),\n    marketing: gettext('These cookies are used to target advertising to a user.')\n  };\n\n  constructor(private options: OptionsService) {}\n\n  /**\n   * Returns Cookie preferences configuration.\n   * @returns {object} Return an object with cookie preferences configuration defined in application options.\n   */\n  getCookiePreferencesConfig(): CookiePreferences {\n    return this.options.get(this.COOKIE_PREFERENCES_CONFIG);\n  }\n\n  /**\n   * Returns Cookie banner configuration.\n   * @returns {object} Return an object with cookie banner configuration defined in application options.\n   */\n  getCookieBannerSettings(): CookieBannerSettings {\n    return this.options.get(this.COOKIE_BANNER) || {};\n  }\n\n  /**\n   * Converts the cookie preferences to boolean. Sets the cookie preferences configuration in local storage.\n   * @param {object} cookiePreferences Object with cookie preferences configuration\n   */\n  setCookies(cookiePreferences: CookiePreferences) {\n    const cookiesToSet = { ...cookiePreferences };\n    Object.entries(cookiesToSet).forEach(([cookieName, cookieValue]) => {\n      cookiesToSet[cookieName] = typeof cookieValue === 'string' ? true : cookieValue;\n    });\n    localStorage.setItem(this.STORAGE_KEY, JSON.stringify(cookiesToSet));\n  }\n\n  /**\n   * Verifies that cookie banner should be shown.\n   * @returns {boolean} Returns if the cookie banner should be shown.\n   */\n  shouldShowCookieBanner(): boolean {\n    const settings = this.getCookieBannerSettings();\n    return !!settings.cookieBannerText && !this.getUserCookiePreferences();\n  }\n\n  /**\n   * Gets the cookie preferences configuration from local storage.\n   * @returns {object} Object with cookie preferences configuration.\n   */\n  getUserCookiePreferences(): CookiePreferences {\n    return JSON.parse(localStorage.getItem(this.STORAGE_KEY));\n  }\n\n  /**\n   * Verifies that cookie preferences configuration is defined.\n   * @returns {boolean} Returns if the cookie preferences configuration is defined.\n   */\n  isConfigCookiePreferencesDefined(): boolean {\n    return !!this.getCookiePreferencesConfig();\n  }\n\n  /**\n   * Verifies that functional cookies are enabled.\n   * @returns {boolean} True when functional cookies are enabled.\n   */\n  isFunctionalCookieEnabled(): boolean {\n    const { functional }: CookiePreferences = this.getUserCookiePreferences() || {};\n    return functional === true;\n  }\n\n  /**\n   * Description of cookies.\n   * @param {'required' | 'functional' | 'marketing'} cookieType Takes one of the following options: 'required', 'functional', 'marketing'.\n   * @returns {string} The default cookie description, if not explicitly defined in application options.\n   */\n  getCookieDescription(cookieType: 'required' | 'functional' | 'marketing'): string {\n    const cookieBannerConfigSettings = this.getCookiePreferencesConfig();\n    return typeof cookieBannerConfigSettings[cookieType] === 'string'\n      ? cookieBannerConfigSettings[cookieType]\n      : this.cookieDescriptions[cookieType];\n  }\n\n  /**\n   * Transforms cookie preferences configuration object to an array of cookie preferences objects. Each object in returned array contains cookie 'name', 'value' and 'isReadonly' property.\n   * @param {object} cookiePreferences.\n   * @returns {Array} Array shows if the cookie is Readonly.\n   */\n  transformCookiePreferencesToList(cookiePreferences: CookiePreferences): Cookie[] {\n    return Object.entries(cookiePreferences).map(([name, value]) => {\n      const isReadonly = name === 'required';\n      return { name, value, isReadonly };\n    });\n  }\n\n  /**\n   * Transforms an array of cookie preferences objects to cookie preferences configuration object.\n   * @param {Array} cookiePreferencesList Array of cookie preferences.\n   * @returns {object} An object with cookie preferences configuration.\n   */\n  transformCookiePreferencesListToCookiePreferences(\n    cookiePreferencesList: Cookie[]\n  ): CookiePreferences {\n    return cookiePreferencesList.reduce((cookiePref: CookiePreferences, cookie: Cookie) => {\n      const key: string = cookie.name;\n      cookiePref[key] = cookie.value;\n      return cookiePref;\n    }, {});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { combineLatest, fromEvent, BehaviorSubject } from 'rxjs';\nimport { ICustomProperties } from '@c8y/client';\nimport { filter, delay, map, take } from 'rxjs/operators';\nimport { AppStateService } from '../common/ui-state.service';\nimport { OptionsService } from '../common/options.service';\nimport { TranslateService } from '../i18n/translate.service';\nimport { CookieBannerService } from '../bootstrap/cookie-banner/cookie-banner.service';\nimport { UserPreferencesService } from '../common/user-preferences/user-preferences.service';\n\n/**\n * A service to manage the Gainsight integration. It allows to load the\n * tag and\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GainsightService {\n  /**\n   * A subject that emits the tag function as soon as a new tag is set.\n   */\n  tagFunction$ = new BehaviorSubject(null);\n\n  readonly USER_PREFERENCES_KEY = 'gainsightEnabled';\n  private readonly GAINSIGHT_URL = 'web-sdk.aptrinsic.com/api/aptrinsic.js?a=';\n  private readonly GAINSIGHT_GLOBAL_SCOPE = 'aptrinsic';\n  private readonly SCRIPT_EXECUTION_WAIT_TIME = 500;\n  private readonly OPTIONS_KEY_CATEGORY = 'gainsight';\n  private readonly OPTIONS_KEY_NAME = 'api.key';\n  private isScriptLoaded: boolean = false;\n  private gainsightKey: string;\n\n  constructor(\n    private appState: AppStateService,\n    private options: OptionsService,\n    private cookieBannerService: CookieBannerService,\n    private userPreferencesService: UserPreferencesService\n  ) {}\n\n  async isGainsightDisabledInUserPreferences() {\n    const userGainsightPref = await this.userPreferencesService\n      .get(this.USER_PREFERENCES_KEY)\n      .toPromise();\n    return userGainsightPref === false;\n  }\n\n  setFunctionalCookie(value: boolean) {\n    const cookies = this.cookieBannerService.getUserCookiePreferences();\n    if (cookies) {\n      Object.keys(cookies).forEach(cookieName => {\n        if (cookieName === 'functional') {\n          cookies[cookieName] = value;\n          return;\n        }\n      });\n      localStorage.setItem('acceptCookieNotice', JSON.stringify(cookies));\n    }\n  }\n\n  async getGainsightKey() {\n    this.gainsightKey =\n      this.options.gainsightKey ||\n      (await this.options.getSystemOption(this.OPTIONS_KEY_CATEGORY, this.OPTIONS_KEY_NAME));\n    return this.gainsightKey;\n  }\n\n  /**\n   * Returns the tag global function which can be used to identify user\n   * or add special events.\n   */\n  get tagFunction() {\n    return (window as any)[this.GAINSIGHT_GLOBAL_SCOPE];\n  }\n\n  /**\n   * Load the script tag and calls the identify function to start the tracking.\n   * @param currentTenant The current tenant.\n   * @param identify If set to false, only the tag is loaded.\n   */\n  async loadTag(currentTenant, identify = true) {\n    const scriptTag = document.createElement('script');\n    const key = await this.getGainsightKey();\n\n    if (key && !this.isScriptLoaded) {\n      this.loadScriptTag(scriptTag, key);\n      combineLatest(\n        this.appState.currentUser,\n        fromEvent(scriptTag, 'load'),\n        this.appState.state$.pipe(\n          filter(({ versions }) => versions.backend),\n          map(({ versions }) => versions),\n          take(1)\n        )\n      )\n        .pipe(\n          delay(this.SCRIPT_EXECUTION_WAIT_TIME),\n          filter(([user, scriptEvent]) => !!(scriptEvent && user))\n        )\n        .subscribe(([user, scriptEvent, versions]) => {\n          const instanceId = this.getInstanceIdFromUrl();\n          if (identify) {\n            this.identify(user, currentTenant, instanceId, versions.ui.ngx, versions.backend);\n          }\n          this.isScriptLoaded = true;\n          this.tagFunction$.next(this.tagFunction);\n        });\n    }\n  }\n\n  /**\n   * Identifies the user/account at Gainsight.\n   * @param user The user which is given to Gainsight.\n   * @param tenant The tenant which is given to Gainsight.\n   * @param versionUI The UI version used.\n   * @param versionBE The BE version used.\n   */\n  identify(user, tenant, instanceId, versionUI?, versionBE?) {\n    const windowRef = window as any;\n    const { id: userId, email, userName, firstName, lastName } = user;\n    const { name, customProperties } = tenant;\n    const externalReference = customProperties && customProperties.externalReference;\n    windowRef[this.GAINSIGHT_GLOBAL_SCOPE](\n      'identify',\n      {\n        id: `${userId}_${name}_${instanceId}`,\n        email,\n        userName,\n        firstName,\n        lastName,\n        versionUI,\n        versionBE,\n        userLanguage: TranslateService.defaultLang(),\n        instanceId,\n        externalReference\n      },\n      {\n        id: `${name}_${instanceId}`,\n        instanceId\n      }\n    );\n  }\n\n  triggerEvent(eventName: string, props?: object) {\n    if (this.tagFunction && eventName) {\n      eventName = eventName.replace(/ /g, '_');\n      this.tagFunction('track', eventName, props);\n    }\n  }\n\n  /**\n   * Checks if the Gainsight's tag should be loaded.\n   * The decision to load Gainsight will depend on custom properties and functional cookies.\n   * @param customProperties Tenant's customProperties.\n   */\n  shouldLoadGainsightTag(customProperties: ICustomProperties): boolean {\n    return (\n      this.cookieBannerService.isConfigCookiePreferencesDefined() &&\n      this.cookieBannerService.isFunctionalCookieEnabled() &&\n      !this.isGainsightDisabled(customProperties)\n    );\n  }\n\n  async canEditProductExperienceSettings(): Promise<boolean> {\n    const currentTenant = this.appState.currentTenant.value;\n    const { customProperties } = currentTenant;\n\n    return (\n      !!this.gainsightKey ||\n      ((await this.getGainsightKey()) &&\n        this.cookieBannerService.isConfigCookiePreferencesDefined() &&\n        !this.isGainsightDisabled(customProperties) &&\n        !!this.cookieBannerService.getUserCookiePreferences())\n    );\n  }\n\n  private isGainsightDisabled(customProperties: ICustomProperties) {\n    const gainsightEnabled = customProperties && customProperties.gainsightEnabled;\n    return gainsightEnabled === false;\n  }\n\n  private loadScriptTag(scriptTag: HTMLScriptElement, key: string) {\n    try {\n      const windowRef = window as any;\n      const firstTag = document.getElementsByTagName('script')[0];\n      const protocol = location.protocol;\n      const gainsightGlobalScope = this.GAINSIGHT_GLOBAL_SCOPE;\n      scriptTag.src = `${protocol}//${this.GAINSIGHT_URL}${key}`;\n      (windowRef[this.GAINSIGHT_GLOBAL_SCOPE] =\n        windowRef[this.GAINSIGHT_GLOBAL_SCOPE] ||\n        // tslint:disable-next-line:only-arrow-functions\n        function() {\n          (windowRef[gainsightGlobalScope].q = windowRef[gainsightGlobalScope].q || []).push(\n            arguments\n          );\n        }),\n        (windowRef[gainsightGlobalScope].p = key);\n      scriptTag.async = true;\n      firstTag.parentNode.insertBefore(scriptTag, firstTag);\n    } catch (ex) {\n      console.warn('Failed to load Gainsight PX', ex);\n    }\n  }\n\n  private getInstanceIdFromUrl() {\n    const hostName = location.hostname;\n    return hostName.substring(hostName.indexOf('.') + 1);\n  }\n}\n","import { Directive, HostListener, Input } from '@angular/core';\nimport { GainsightService } from './gainsight.service';\n\n@Directive({\n  selector: '[c8yProductExperience]'\n})\nexport class ProductExperienceDirective {\n  @Input() actionName: string;\n  @Input() actionData: object;\n  constructor(private gainsightService: GainsightService) {}\n\n  @HostListener('click')\n  onClick() {\n    if (this.actionName) {\n      this.gainsightService.triggerEvent(this.actionName, this.actionData);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ICurrentTenant } from '@c8y/client';\nimport { combineLatest } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { CookieBannerService } from '../bootstrap/cookie-banner/cookie-banner.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { GainsightService } from './gainsight.service';\nimport { ProductExperienceDirective } from './product-experience.directive';\n/**\n * This module enables an tenant to activate the product experience\n * software [Gainsight](https://www.gainsight.com/product-experience/) to help\n * and track user actions. Gainsight is only activated, if the tenant custom\n * property `gainsightEnabled` is set to true.\n */\n@NgModule({\n  declarations: [ProductExperienceDirective],\n  exports: [ProductExperienceDirective],\n  providers: [GainsightService]\n})\nexport class ProductExperienceModule {\n  constructor(\n    private appState: AppStateService,\n    private gainsightService: GainsightService,\n    private cookieBannerService: CookieBannerService\n  ) {\n    combineLatest([\n      this.appState.currentTenant.pipe(filter<ICurrentTenant>(Boolean)),\n      this.cookieBannerService.isCookieBannerShowed$\n    ]).subscribe(async ([currentTenant, isCookieBannerShowed]) => {\n      if (isCookieBannerShowed) {\n        return;\n      }\n      const { customProperties, name } = currentTenant;\n      if (\n        this.gainsightService.shouldLoadGainsightTag(customProperties) &&\n        !(await this.gainsightService.isGainsightDisabledInUserPreferences())\n      ) {\n        this.gainsightService.loadTag(currentTenant);\n      }\n    });\n  }\n}\n","import { Component, Input, ViewChild, ElementRef } from '@angular/core';\nimport { Search } from './search.model';\nimport { sortBy } from 'lodash';\nimport { AlertService } from '../alert/alert.service';\nimport { Alert } from '../alert/alert.model';\n\n@Component({\n  selector: 'c8y-search-outlet',\n  templateUrl: './search-outlet.component.html'\n})\nexport class SearchOutletComponent {\n  @Input() search: Search[] = [];\n\n  constructor(private alertService: AlertService) {}\n\n  getByPriority() {\n    return sortBy(this.search, this.byPriority);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, Input, Output, ViewChild, EventEmitter } from '@angular/core';\nimport { Search } from './search.model';\nimport { SearchService } from './search.service';\n\n@Component({\n  selector: 'c8y-search',\n  templateUrl: './search.component.html'\n})\nexport class SearchComponent implements Search {\n  @Input() name: string;\n  @Input() icon: string = 'search';\n  @Input() priority: number = 0;\n  @ViewChild('template', {static: false}) template: any;\n  @Output() search = new EventEmitter<Search>();\n  @Input() term: string = '';\n\n  private viewInitTimeout;\n\n  constructor(private searchService: SearchService) { }\n\n  onSearch() {\n    this.search.emit(this);\n  }\n\n  ngAfterViewInit() {\n    this.template = undefined;\n    this.viewInitTimeout = setTimeout(() => this.searchService.add(this as Search));\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.searchService.remove(this as Search);\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  ViewChild\n} from '@angular/core';\nimport { escape, escapeRegExp } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-highlight',\n  template: '<span [innerHTML]=\"highlightedText\"></span>'\n})\nexport class HighlightComponent {\n  @ViewChild('text', { read: ElementRef, static: true })\n  container: ElementRef;\n\n  @Input()\n  pattern: string = '';\n\n  @Input()\n  text: string = '';\n\n  @Input()\n  elementClass: string = 'text-info';\n\n  highlightedText: string = '';\n\n  ngOnChanges(): void {\n    const textNoHtml = escape(this.text || '');\n    const patternNoHtml = escape(this.pattern || '');\n    const patternForRegex = escapeRegExp(patternNoHtml).replace(/\\\\\\*/g, '.*');\n    this.highlightedText = textNoHtml.replace(\n      new RegExp(patternForRegex, 'i'),\n      `<strong class=\"${this.elementClass}\">$&</strong>`\n    );\n  }\n}\n","import { Component, Input} from '@angular/core';\r\nimport { gettext } from '../i18n/gettext';\r\n\r\n@Component({\r\n  selector: 'c8y-search-result-empty',\r\n  templateUrl: './search-result-empty.component.html'\r\n})\r\nexport class SearchResultEmptyComponent {\r\n  private readonly NO_RESULT_FOUND = gettext('No results found.');\r\n  private msg: string = this.NO_RESULT_FOUND;\r\n\r\n  @Input('message')\r\n  set _message(msg: string) {\r\n    if (msg && msg.length > 0) {\r\n      this.msg = msg;\r\n    } else {\r\n      this.msg = this.NO_RESULT_FOUND;\r\n    }\r\n  }\r\n\r\n  get message() {\r\n    return this.msg;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { SearchOutletComponent } from './search-outlet.component';\nimport { SearchComponent } from './search.component';\nimport { SearchService } from './search.service';\nimport { FormsModule } from '@angular/forms';\nimport { HighlightComponent } from './highlight.component';\nimport { SearchResultEmptyComponent } from './search-result-empty.component';\n\n/**\n * The angular module definition for the search.\n * @exports SearchComponent\n * @exports SearchOutletComponent\n * @exports HighlightComponent A component to highlight search results.\n */\n@NgModule({\n  declarations: [\n    SearchOutletComponent,\n    SearchComponent,\n    HighlightComponent,\n    SearchResultEmptyComponent\n  ],\n  imports: [\n    FormsModule,\n    BsDropdownModule,\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    SearchOutletComponent,\n    SearchComponent,\n    HighlightComponent,\n    SearchResultEmptyComponent\n  ]\n})\nexport class SearchModule { }\n","import { Component, Input, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { UserMenuItem } from './user.model';\nimport { UserMenuService } from './user-menu.service';\n\n@Component({\n  selector: 'c8y-user-menu-item',\n  templateUrl: './user-menu-item.component.html'\n})\nexport class UserMenuItemComponent implements UserMenuItem  {\n  @Input()\n  icon: string;\n  @Input()\n  label: string;\n  @Input()\n  link: string;\n  @Input()\n  target: string;\n  @Input()\n  priority = 0;\n  @ViewChild('template', {static: false}) template: any;\n\n  @Output()\n  click = new EventEmitter<UserMenuItem>();\n  private viewInitTimeout;\n\n  constructor(private userService: UserMenuService) { }\n\n  ngAfterViewInit() {\n    this.viewInitTimeout = setTimeout(() =>\n      this.userService.add(this as UserMenuItem)\n    );\n  }\n\n  ngOnDestroy() {\n    clearTimeout(this.viewInitTimeout);\n    this.userService.remove(this as UserMenuItem);\n  }\n\n  onClick() {\n    this.click.emit(this);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BasicAuth, FetchClient, ICredentials, IUser, UserService } from '@c8y/client';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { UserPreferencesService } from '../common/user-preferences/user-preferences.service';\nimport { gettext } from '../i18n/gettext';\nimport { TranslateService } from '../i18n/translate.service';\nimport { take } from 'rxjs/operators';\nimport { ModalService } from '../modal/modal.service';\nimport { Status } from '../common/status.model';\nimport { GainsightService } from '../product-experience/gainsight.service';\nimport { CookieBannerService } from '../bootstrap/cookie-banner/cookie-banner.service';\n\n@Component({\n  selector: 'c8y-user-edit-modal',\n  templateUrl: './user-edit-modal.component.html'\n})\nexport class UserEditModalComponent implements OnInit {\n  currentUser: IUser;\n  lang: string;\n  changedLang: string;\n  loading = false;\n  showProductUsageSetting: boolean = false;\n  currentUsageTrackingState: boolean;\n  usageTrackingState: boolean;\n\n  constructor(\n    public modal: BsModalRef,\n    public user: UserService,\n    public ui: AppStateService,\n    private auth: BasicAuth,\n    private client: FetchClient,\n    private alert: AlertService,\n    private translate: TranslateService,\n    private userPreferences: UserPreferencesService,\n    private modalService: BsModalService,\n    private c8yModalService: ModalService,\n    private gainsightService: GainsightService,\n    private cookieBannerService: CookieBannerService\n  ) {\n    this.lang = this.ui.state.lang;\n    this.modalService.onHide.pipe(take(1)).subscribe((reason: string) => {\n      if (reason !== null && this.changedLang !== undefined) {\n        this.translate.switchToLanguage(this.lang);\n      }\n    });\n  }\n\n  async ngOnInit() {\n    this.updateUserInAppState();\n    this.showProductUsageSetting = await this.gainsightService.canEditProductExperienceSettings();\n    if (this.showProductUsageSetting) {\n      this.currentUsageTrackingState = !(await this.gainsightService.isGainsightDisabledInUserPreferences()) &&\n        this.cookieBannerService.isFunctionalCookieEnabled();\n    }\n  }\n\n  onDismiss() {\n    if (this.changedLang !== undefined) {\n      this.translate.switchToLanguage(this.lang);\n    }\n    this.modal.hide();\n  }\n\n  onLanguage(lang) {\n    this.changedLang = lang;\n    this.translate.switchToLanguage(this.changedLang);\n  }\n\n  onProductExperience(option: boolean) {\n    this.usageTrackingState = option;\n  }\n\n  async updateAndClose(user) {\n    this.loading = true;\n    try {\n      if (this.changedLang && this.changedLang !== this.lang) {\n        await this.persistLanguage(this.changedLang);\n      }\n      if (this.currentUsageTrackingState !== this.usageTrackingState) {\n        await this.userPreferences.set(this.gainsightService.USER_PREFERENCES_KEY, this.usageTrackingState);\n        this.gainsightService.setFunctionalCookie(this.usageTrackingState);\n        this.usageTrackingState ? this.gainsightService.loadTag(this.client.tenant) : await this.gainsightTrackingAppReload();\n      }\n      if (user.customProperties.userOrigin !== 'OAUTH2') {\n        await this.user.updateCurrent(user);\n        if (user.password) {\n          this.updateCredentials(user.password);\n        }\n        await this.updateUserInAppState();\n      }\n      this.modal.hide();\n      this.alert.success(gettext('User saved.'));\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  async persistLanguage(lang) {\n    try {\n      await this.c8yModalService.confirm(\n        gettext('Reload recommended'),\n        gettext(\n          'To change the language in the entire application, we recommend you to reload the page. If you have any unsaved changes, you can reload later. What would you like to do?'\n        ),\n        Status.WARNING,\n        {\n          ok: gettext('Reload now'),\n          cancel: gettext('Reload later')\n        }\n      );\n      this.translate.saveInLocalStorage(lang);\n      await this.userPreferences.set('language', lang);\n      location.reload();\n      this.lang = lang;\n    } catch (ex) {\n      this.translate.saveInLocalStorage(lang);\n      await this.userPreferences.set('language', lang);\n      this.lang = lang;\n    }\n  }\n\n  async gainsightTrackingAppReload() {\n    try {\n      await this.c8yModalService.confirm(\n        gettext('Reload required'),\n        gettext(\n          'To change the tracking option in the entire application, you need to reload the page. If you have any unsaved changes, you can reload later. What would you like to do?'\n        ),\n        Status.WARNING,\n        {\n          ok: gettext('Reload now'),\n          cancel: gettext('Reload later')\n        }\n      );\n      location.reload();\n    } catch (ex) {\n      // do nothing\n    }\n  }\n\n  private async updateUserInAppState() {\n    const currentUserResult = await this.user.current();\n    this.ui.currentUser.next(currentUserResult.data);\n  }\n\n  private updateCredentials(password: string) {\n    const newCredentials: ICredentials = {\n      password,\n      user: this.ui.currentUser.value.id,\n      tenant: this.client.tenant\n    };\n    this.auth.updateCredentials(newCredentials);\n  }\n}\n","import { Injectable, Optional } from '@angular/core';\nimport {\n  BasicAuth,\n  CookieAuth,\n  FetchClient,\n  IAuthentication,\n  ICredentials,\n  ITenantLoginOption,\n  TenantLoginOptionType,\n  Realtime,\n  TenantService,\n  UserService\n} from '@c8y/client';\nimport { AppStateService } from '../common/ui-state.service';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\nimport { ApiService } from '@c8y/ngx-components/api';\nimport { switchMap } from 'rxjs/operators';\nimport { EMPTY } from 'rxjs';\nimport { LocationStrategy } from '@angular/common';\nimport { get, isString } from 'lodash-es';\n\n/**\n * Service to manage the login.\n */\n@Injectable()\nexport class LoginService {\n  rememberMe: boolean = false;\n  TOKEN_KEY: string = '_tcy8';\n  TFATOKEN_KEY: string = 'TFAToken';\n  loginMode: any;\n  oauthOptions: any;\n  isFirstLogin = true;\n  GREEN_MIN_LENGTH_DEFAULT = 8;\n\n  // tslint:disable:max-line-length\n  ERROR_MESSAGES = {\n    minlength: gettext('Password must have at least 8 characters and no more than 32.'),\n    password_missmatch: gettext('Password confirmation does not match.'),\n    maxlength: gettext('Password must have at least 8 characters and no more than 32.'),\n    password_strength: gettext(\n      'Your password is not strong enough. Please include numbers, lower and upper case characters'\n    ),\n    remote_error: gettext('Server error occurred.'),\n    email: gettext('Invalid email address.'),\n    password_change: gettext('Your password is expired. Please set a new password.'),\n    password_reset_token_expired: gettext(\n      'Password reset link expired. Please enter your email address to receive a new one.'\n    ),\n    tfa_pin_invalid: gettext('The code you entered is invalid. Please try again.'),\n    pattern_phonenumber: gettext(\n      'Invalid phone number format. Only digits, spaces, slashes (\"/\") and dashes (\"-\") allowed.'\n    ),\n    pattern_newPassword: gettext(\n      'Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\\'\",.<>{}[]\\\\/'\n    ),\n    international_number_required: gettext(\n      'International phone number required, in the format +49 9 876 543 210.'\n    ),\n    phone_number_error: gettext('Could not update phone number.'),\n    pinAlreadySent: gettext(\n      'The verification code was already sent. For a new verification code, please click on the link above.'\n    ),\n    passwordConfirm: gettext('Password confirmation does not match.'),\n    tfaExpired: gettext('Two-factor authentication token expired.')\n  };\n  // tslint:enable:max-line-length\n\n  private SUCCESS_MESSAGES = {\n    password_changed: gettext('Password changed. You can now log in using new password.'),\n    password_reset_requested: gettext(\n      'Password reset request has been sent. Please check your email.'\n    ),\n    resend_sms: gettext('Verification code SMS resent.'),\n    send_sms: gettext('Verification code SMS sent.')\n  };\n\n  private passwordStrengthSetting = {\n    enforcePasswordStrength: false,\n    greenMinLength: this.GREEN_MIN_LENGTH_DEFAULT,\n    passwordStrengthValidity: false\n  };\n\n  private loginModeFilters = {\n    isOauth2Internal: ({ type, visibleOnLoginPage}): boolean => type === TenantLoginOptionType.OAUTH2_INTERNAL && visibleOnLoginPage,\n    isBasic: ({ type, visibleOnLoginPage }): boolean => type === TenantLoginOptionType.BASIC && visibleOnLoginPage,\n    isOauth2: ({type, visibleOnLoginPage, grantType}): boolean => type === TenantLoginOptionType.OAUTH2 && visibleOnLoginPage && grantType === 'AUTHORIZATION_CODE'\n  };\n\n  private localhostRegExp = new RegExp('localhost');\n  private localhostIpRegExp = new RegExp('127.0.0.1');\n  private showTenantRegExp = new RegExp('showTenant');\n\n  constructor(\n    private client: FetchClient,\n    private basicAuth: BasicAuth,\n    private cookieAuth: CookieAuth,\n    private ui: AppStateService,\n    private user: UserService,\n    private tenant: TenantService,\n    private realtime: Realtime,\n    private alert: AlertService,\n    private api: ApiService,\n    @Optional() private location: LocationStrategy\n  ) {\n    this.autoLogout();\n    this.initLoginOptions();\n  }\n\n  /**\n   * Returns the current tenant.\n   * @return The tenant name.\n   */\n  getTenant() {\n    return this.client.tenant;\n  }\n\n  initLoginOptions() {\n    const loginOptions = this.ui.state.loginOptions || [];\n    this.loginMode = loginOptions.find(this.loginModeFilters.isOauth2Internal) ||\n      loginOptions.find(this.loginModeFilters.isBasic) ||\n      loginOptions.find(this.loginModeFilters.isOauth2) || { type: TenantLoginOptionType.BASIC };\n    this.oauthOptions = loginOptions.find(this.loginModeFilters.isOauth2) || {};\n  }\n\n  redirectToOauth() {\n    const { initRequest } = this.oauthOptions;\n    const fullPath = (this.location ? (this.location as any)._platformLocation : window).location\n      .href;\n    const redirectUrl = encodeURIComponent(fullPath);\n    const originUriParam = `${initRequest.includes('?') ? '&' : '?'}originUri=${redirectUrl}`;\n    window.location.href = `${initRequest}${originUriParam}`;\n  }\n\n  autoLogout() {\n    const errorPattern = /invalid\\scredentials.*pin.*generate/i;\n    const isTfaExpired = data =>\n      data && typeof data.message === 'string' && errorPattern.test(data.message);\n    this.ui.currentUser\n      .pipe(\n        switchMap(u =>\n          u ? this.api.hookResponse(({ response }) => response.status === 401) : EMPTY\n        )\n      )\n      .subscribe(async (apiCall: any) => {\n        const { response } = apiCall;\n        let willLogout = false;\n        if (isTfaExpired(response.data)) {\n          willLogout = true;\n        } else {\n          if (typeof response.json === 'function') {\n            const data = await response.clone().json();\n            if (isTfaExpired(data)) {\n              willLogout = true;\n            }\n          }\n        }\n        if (willLogout) {\n          this.logout(false);\n          setTimeout(() => this.alert.danger(this.ERROR_MESSAGES.tfaExpired), 500);\n        }\n      });\n  }\n\n  /**\n   * Gets the minimal number of characters that a password should have to be considered a “green” strong one.\n   * @return The min length for password or default value.\n   */\n  async getGreenMinLength() {\n    const { greenMinLength } = await this.getBasicAuthLoginOption() || { greenMinLength: null };\n    this.passwordStrengthSetting.greenMinLength = greenMinLength || this.GREEN_MIN_LENGTH_DEFAULT;\n    return this.passwordStrengthSetting.greenMinLength;\n  }\n\n  /**\n   * Checks if password strength is enforced for system\n   * by retrieving value of `enforceStrength` property from loginOptions response\n   * @param refresh boolean used to refresh the app state where result of loginOptions response is stored.\n   * If false, it takes value from memory,\n   * if true, it refresh the app state value and then retrives data.\n   * @return boolean value, true if enforced, false otherwise.\n   */\n  async getEnforcePasswordStrength(refresh?) {\n    return this.getBasicAuthLoginOption(refresh).then((loginOption) => {\n      const enforcePasswordStrength = get(loginOption, 'enforceStrength');\n      if (isString(enforcePasswordStrength)) {\n        this.passwordStrengthSetting.enforcePasswordStrength = enforcePasswordStrength === 'true' ? true : false;\n      } else {\n        this.passwordStrengthSetting.enforcePasswordStrength = !!enforcePasswordStrength;\n      }\n      return this.passwordStrengthSetting.enforcePasswordStrength;\n    });\n  }\n\n  /**\n   * Checks if password strength is enforced for particular tenant\n   * by retrieving value of `strengthValidity` property from loginOptions response\n   * @param refresh boolean used to refresh the app state where result of loginOptions response is stored.\n   * If false, it takes value from memory,\n   * if true, it refresh the app state value and then retrives data.\n   * @return boolean value, true if enforced, false otherwise.\n   */\n  async getPasswordStrengthValidity(refresh?) {\n    return this.getBasicAuthLoginOption(refresh).then((loginOption) => {\n      const strengthValidity = get(loginOption, 'strengthValidity');\n      if (isString(strengthValidity)) {\n        this.passwordStrengthSetting.passwordStrengthValidity = strengthValidity === 'true' ? true : false;\n      } else {\n        this.passwordStrengthSetting.passwordStrengthValidity = !!strengthValidity;\n      }\n      return this.passwordStrengthSetting.passwordStrengthValidity;\n    });\n  }\n\n  /**\n   * Function determines if enforced strength checks should be enabled for current tenant\n   * based on properties retrieved from loginOptions\n   * @param options object containing specific options:\n   *    - {refresh: true} - refreshes values of app state and returns fresh values as result of call\n   * @return boolean value, true if strength is enforced for tenant, false otherwise.\n   */\n  async getPasswordStrengthEnforced(options?) {\n    const refresh = options && options.refresh;\n    return Promise.all([this.getEnforcePasswordStrength(refresh), this.getPasswordStrengthValidity(refresh)]).then((values) => {\n      const [enforcePasswordStrength, passwordStrengthValidity] = values;\n      return enforcePasswordStrength || passwordStrengthValidity;\n    });\n  }\n\n  /**\n   * Clears all backend errors.\n   */\n  cleanMessages() {\n    this.alert.clearAll();\n  }\n\n  /**\n   * Adds a new success message\n   * @param successKey The key of the success message as used in SUCCESS_MESSAGES\n   */\n  addSuccessMessage(successKey: string) {\n    const successMessage = this.SUCCESS_MESSAGES[successKey];\n    if (successMessage) {\n      this.alert.add({\n        text: successMessage,\n        type: 'success',\n        timeout: 0\n      });\n    }\n  }\n\n  /**\n   * Returns the current strategy. Defaults to cookie, if a token\n   * is found in local or session storage we switch to basic auth.\n   * @returns The current auth strategy.\n   */\n  getAuthStrategy(): IAuthentication {\n    let authStrategy = this.cookieAuth as IAuthentication;\n    const token = this.getStoredToken();\n    const tfa = this.getStoredTfaToken();\n    if (token) {\n      authStrategy = this.basicAuth;\n      this.setCredentials({ token, tfa }, this.basicAuth);\n    }\n    return authStrategy;\n  }\n\n  /**\n   * Forces the use of basic auth as strategy with this credentials.\n   * @param credentials The credentials to use.\n   */\n  useBasicAuth(credentials: ICredentials) {\n    this.setCredentials(credentials, this.basicAuth);\n    return this.basicAuth;\n  }\n\n  /**\n   * Tries to login a user with the given credentials.\n   * If successful, the current tenant and user is set. If not an error\n   * is thrown. It also verifies if the user is allowed to open the\n   * current app.\n   * @param auth The authentication strategy used.\n   * @param credentials The credentials to try to login.\n   */\n  async login(auth: IAuthentication = this.getAuthStrategy(), credentials?: ICredentials) {\n    this.client.setAuth(auth);\n\n    const tenantRes = await this.tenant.current();\n    const tenant = tenantRes.data;\n\n    if (await this.switchLoginMode(credentials)) {\n      auth = this.cookieAuth;\n    }\n\n    const userRes = await this.user.current();\n    const user = userRes.data;\n    await this.verifyAppAccess();\n\n    const supportUserName = this.getSupportUserName(credentials);\n    const token = this.setCredentials(\n      {\n        tenant: tenant.name,\n        user: (supportUserName ? `${supportUserName}$` : '') + user.userName\n      },\n      auth\n    );\n\n    if (token) {\n      this.storeBasicAuthToken(token);\n    }\n\n    await this.authFulfilled(tenant, user, supportUserName);\n  }\n\n  /**\n   * Saves tenant, user and support user info to the app state.\n   * @param tenant The current tenant object.\n   * @param user The current user object.\n   * @param supportUserName The current support user name.\n   */\n  async authFulfilled(tenant?, user?, supportUserName?) {\n    if (!tenant) {\n      const { data } = await this.tenant.current();\n      tenant = data;\n      this.client.tenant = tenant.name;\n    }\n\n    if (!user) {\n      const { data } = await this.user.current();\n      user = data;\n    }\n\n    if (!supportUserName) {\n      supportUserName = null;\n    }\n\n    this.ui.setUser({ user, supportUserName });\n    this.ui.currentTenant.next(tenant);\n  }\n\n  /**\n   * Switch the login mode to CookieAuth if the\n   * user has configured to use it in loginOptions.\n   * @param credentials The credentials for that login\n   */\n  async switchLoginMode(credentials?: ICredentials) {\n    const isPasswordGrantLogin = this.isPasswordGrantLogin(credentials);\n    if (isPasswordGrantLogin && credentials) {\n      const res = await this.generateOauthToken(credentials);\n      if (!(res as Response).ok) {\n        try {\n          const data = await res.json();\n          throw { res, data };\n        } catch (ex) {\n          throw ex;\n        }\n      }\n      this.client.setAuth(this.cookieAuth);\n      this.cleanLocalStorage();\n      this.basicAuth.logout();\n    }\n    return isPasswordGrantLogin;\n  }\n\n  async generateOauthToken(credentials?: ICredentials) {\n    if (this.isPasswordGrantLogin(credentials) && credentials) {\n      const params = new URLSearchParams({\n        grant_type: 'PASSWORD',\n        username: credentials.user,\n        password: credentials.password,\n        tfa_code: credentials.tfa\n      });\n      const urlParams = new URLSearchParams(this.loginMode.initRequest.split('?').pop());\n      credentials.tenant = urlParams.get('tenant_id');\n      return await this.client.fetch(`tenant/oauth?${urlParams.toString()}`, {\n        method: 'POST',\n        body: params.toString(),\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded;charset=UTF-8'\n        }\n      });\n    }\n  }\n\n  isPasswordGrantLogin(credentials?: ICredentials) {\n    return !!(\n      !this.isSupportUser(credentials) &&\n      this.loginMode &&\n      this.loginMode.type === TenantLoginOptionType.OAUTH2_INTERNAL\n    );\n  }\n\n  /**\n   * Verifies if the provided credentials use a support user to log in or not.\n   * @param credentials Credentials to check.\n   * @returns True if user is a support user.\n   */\n  isSupportUser(credentials?: ICredentials): boolean {\n    return credentials && credentials.user.includes('$');\n  }\n\n  /**\n   * Verifies if the tenant input field should be shown\n   * or not.\n   * @returns If true, show the tenant input.\n   */\n  showTenant(): boolean {\n    return !this.ui.state.loginOptions || this.isLocal() || this.isShowTenant();\n  }\n\n  /**\n   * Logs the user out\n   * @param reload If set to false, the page will not reload\n   */\n  async logout(reload = true) {\n    let resData = null;\n    try {\n      const [basicRes, cookieRes] = await this.reset();\n      resData = await cookieRes.json();\n    } catch (ex) {\n      this.alert.removeLastDanger();\n    } finally {\n      if (resData && resData.url) {\n        this.redirect(resData.url);\n      } else if (reload) {\n        this.location.replaceState({}, '', '', '');\n        window.location.reload();\n      }\n    }\n  }\n\n  /**\n   * Resets the stored auth-data\n   */\n  async reset() {\n    this.cleanLocalStorage();\n    this.cleanSessionStorage();\n    this.realtime.disconnect();\n    this.ui.currentUser.next(null);\n    return Promise.all([this.basicAuth.logout(), this.cookieAuth.logout()]);\n  }\n\n  /**\n   * Saves the TFA token to local or session storage.\n   * @param tfaToken The tfa token to save.\n   * @param storage The storage to use (local or session).\n   */\n  saveTFAToken(tfaToken: string, storage: Storage) {\n    storage.setItem(this.TFATOKEN_KEY, tfaToken);\n  }\n\n  /**\n   * Request the manifest -> on 401 user has no access to that application\n   * and we throw the error up to the login form.\n   */\n  async verifyAppAccess() {\n    try {\n      await this.ui.loadManifest();\n    } catch (ex) {\n      if (!(ex.res && ex.res.status === 404 && this.isLocal())) {\n        throw ex;\n      }\n    }\n  }\n\n  /**\n   * Sets the tenant to the client and updates the credentials on the\n   * auth strategy.\n   * @param credentials The name of the tenant.\n   * @param authStrategy The authentication strategy used.\n   * @return Returns the token if basic auth, otherwise undefined.\n   */\n  private setCredentials(credentials: ICredentials, authStrategy: IAuthentication) {\n    if (credentials.tenant) {\n      this.client.tenant = credentials.tenant;\n    }\n    // Check if a token is already set (case for support user login)\n    // if yes -> we just need to update the user, and reuse the token\n    // of the support user.\n    // Therefore we need to pass user and tenant, to get\n    // just the stored token and nothing else (see BasicAuth.ts:31).\n    const token = this.basicAuth.updateCredentials({\n      tenant: credentials.tenant,\n      user: credentials.user\n    });\n    const newCredentials = { token, ...credentials };\n\n    return authStrategy.updateCredentials(newCredentials);\n  }\n\n  /**\n   * Verifies if the current user is a developer or not.\n   * Running on localhost means development mode.\n   */\n  private isLocal(): boolean {\n    const hostname = window.location.hostname;\n    return this.localhostIpRegExp.test(hostname) || this.localhostRegExp.test(hostname);\n  }\n\n  /**\n   * Save the token to local or session storage.\n   * @param token The token to save.\n   * @param storage The storage to use (local or session).\n   */\n  private saveToken(token: string, storage: Storage) {\n    storage.setItem(this.TOKEN_KEY, token);\n  }\n\n  private storeBasicAuthToken(token: string) {\n    this.saveToken(token, sessionStorage);\n    if (this.rememberMe) {\n      this.saveToken(token, localStorage);\n    }\n  }\n\n  private cleanLocalStorage() {\n    localStorage.removeItem(this.TOKEN_KEY);\n    localStorage.removeItem(this.TFATOKEN_KEY);\n  }\n\n  private cleanSessionStorage() {\n    sessionStorage.removeItem(this.TOKEN_KEY);\n    sessionStorage.removeItem(this.TFATOKEN_KEY);\n  }\n\n  private isShowTenant(): boolean {\n    return this.showTenantRegExp.test(window.location.href);\n  }\n\n  private redirect(url: string) {\n    window.location.href = url;\n  }\n\n  private async getBasicAuthLoginOption(refresh?): Promise<ITenantLoginOption> {\n    if (refresh) {\n      await this.ui.refreshLoginOptions();\n    }\n    const loginOptions = this.ui.state.loginOptions || [];\n    const basicAuthLoginOption = loginOptions.find(({ type }) => type === 'BASIC');\n    return Promise.resolve(basicAuthLoginOption);\n  }\n\n  /**\n   * Gets support user name from credentials.\n   * @param credentials Credentials object (defaults to the stored one).\n   * @returns Support user name.\n   */\n  private getSupportUserName(credentials: ICredentials = this.getStoredCredentials()): string {\n    if (!credentials) {\n      return null;\n    }\n    const supportUserName = credentials.user.match(/^(.+\\/)?((.+)\\$)?(.+)?$/)[3];\n    return supportUserName;\n  }\n\n  /**\n   * Gets credentials object from the stored token.\n   * @returns Credentials object.\n   */\n  private getStoredCredentials(): ICredentials {\n    const token = this.getStoredToken();\n    if (!token) {\n      return null;\n    }\n    return this.decodeToken(token);\n  }\n\n  /**\n   * Gets stored token from local storage or session storage.\n   * @returns Stored token.\n   */\n  private getStoredToken(): string {\n    return localStorage.getItem(this.TOKEN_KEY) || sessionStorage.getItem(this.TOKEN_KEY);\n  }\n\n  /**\n   * Gets stored TFA token from local storage or session storage.\n   * @returns Stored TFA token.\n   */\n  private getStoredTfaToken(): string {\n    return localStorage.getItem(this.TFATOKEN_KEY) || sessionStorage.getItem(this.TFATOKEN_KEY);\n  }\n\n  /**\n   * Decodes token to credentials object.\n   * @param token Token to decode.\n   * @returns Credentials object.\n   */\n  private decodeToken(token: string): ICredentials {\n    const decoded = decodeURIComponent(escape(window.atob(token)));\n    const split = decoded.match(/(([^/]*)\\/)?([^/:]+):(.+)/);\n\n    return {\n      tenant: split[2],\n      user: split[3],\n      password: split[4]\n    };\n  }\n}\n","import { Component, Output, EventEmitter, ViewChild } from '@angular/core';\nimport { UserService, ICredentials, FetchClient, Client, IAuthentication } from '@c8y/client';\nimport { AppStateService } from '../common/ui-state.service';\nimport { AlertService } from '../alert/alert.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { LoginService } from '../login/login.service';\nimport { clone } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-password-confirm-modal',\n  templateUrl: './password-confirm-modal.component.html'\n})\nexport class PasswordConfirmModalComponent {\n  @Output() passwordConfirmedEmitter = new EventEmitter<boolean>();\n  loading = false;\n  password: string;\n\n  @ViewChild('modal', { static: false }) private modal: ModalComponent;\n\n  constructor(\n    public user: UserService,\n    public ui: AppStateService,\n    private client: FetchClient,\n    private alert: AlertService,\n    private loginService: LoginService\n  ) {}\n\n  async passwordConfirm() {\n    if (this.password) {\n      const supportUserName = this.ui.currentSupportUserName.value;\n      const userId = this.ui.currentUser.value.id;\n      const credentials: ICredentials = {\n        password: this.password,\n        user: `${supportUserName ? `${supportUserName}$` : ''}${userId}`,\n        tenant: this.client.tenant\n      };\n      try {\n        this.loading = true;\n        const strategy = clone(this.loginService.useBasicAuth({}));\n        delete credentials.tfa;\n        strategy.updateCredentials(credentials);\n        const newClient = this.createNewClient(strategy, this.client.baseUrl);\n        await newClient.user.current();\n        this.emitSuccessAndClose();\n      } catch (e) {\n        if (e.res && e.res.status === 401 && e.data && /pin|totp/i.test(e.data.message)) {\n          this.emitSuccessAndClose();\n        } else {\n          this.alert.danger(gettext(\"Provided password doesn't match your current one.\"));\n        }\n      } finally {\n        this.loading = false;\n      }\n    }\n  }\n\n  cancel() {\n    this.passwordConfirmedEmitter.emit(false);\n    this.modal._dismiss();\n  }\n\n  createNewClient(strategy: IAuthentication, baseUrl: string) {\n    return new Client(strategy, baseUrl);\n  }\n\n  private emitSuccessAndClose() {\n    this.passwordConfirmedEmitter.emit(true);\n    this.modal._dismiss();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PasswordStrength } from '@c8y/client';\nimport { filter } from 'lodash-es';\nimport { PasswordStrengthColor } from './password.model';\nimport { gettext } from '../i18n/gettext';\nimport { PasswordConfirmModalComponent } from './password-confirm-modal.component';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { take } from 'rxjs/operators';\n\n@Injectable()\nexport class PasswordService {\n  private DEFAULT_PASSWORD_MIN_LENGTH = 8;\n\n  private GREEN: PasswordStrengthColor = {\n    colorName: 'green',\n    color: 'rgb(0, 128, 0)',\n    description: gettext('strong'),\n    passwordStrength: PasswordStrength.GREEN\n  };\n  private YELLOW: PasswordStrengthColor = {\n    colorName: 'yellow',\n    color: 'rgb(255, 204, 51)',\n    description: gettext('medium'),\n    passwordStrength: PasswordStrength.YELLOW\n  };\n  private RED: PasswordStrengthColor = {\n    colorName: 'red',\n    color: 'rgb(170, 0, 51)',\n    description: gettext('weak'),\n    passwordStrength: PasswordStrength.RED\n  };\n\n  constructor(private modalService: BsModalService) {}\n\n  confirmPassword() {\n    const modalInstance: any = this.modalService.show(PasswordConfirmModalComponent);\n    return modalInstance.content.passwordConfirmedEmitter.pipe(take(1));\n  }\n\n  hasLowerCase(password: string) {\n    return (password.search(/[a-z]/) !== -1);\n  }\n\n  hasUpperCase(password: string) {\n    return (password.search(/[A-Z]/) !== -1);\n  }\n\n  hasNumbers(password: string) {\n    return (password.search(/[0-9]/) !== -1);\n  }\n\n  hasSpecialChars(password: string) {\n    return (password.search(/[^0-9a-zA-Z]+/) !== -1);\n  }\n\n  getStrengthColor(password: string): PasswordStrengthColor {\n    const passwordStrength = filter([\n      this.hasLowerCase(password),\n      this.hasUpperCase(password),\n      this.hasNumbers(password),\n      this.hasSpecialChars(password)\n    ]).length;\n\n    if (passwordStrength > 3) {\n      return this.GREEN;\n    } else if (passwordStrength >= 3) {\n      return this.YELLOW;\n    } else {\n      return this.RED;\n    }\n  }\n\n  getDefaultPasswordMinLength() {\n    return this.DEFAULT_PASSWORD_MIN_LENGTH;\n  }\n}\n","import { Component } from '@angular/core';\nimport { UserService } from '@c8y/client';\nimport { Status } from '../common/status.model';\nimport { gettext } from '../i18n/gettext';\nimport { ModalService } from '../modal/modal.service';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { LoginService } from '../login/login.service';\n\n@Component({\n  selector: 'c8y-user-totp-setup',\n  templateUrl: './user-totp-setup.component.html'\n})\nexport class UserTotpSetupComponent {\n  constructor(\n    private user: UserService,\n    private modalService: ModalService,\n    private modal: BsModalRef,\n    private loginService: LoginService) { }\n\n  async totpSetupVerified(token) {\n    await this.user.activateTotp();\n    this.modal.hide();\n    try {\n      await this.modalService.acknowledge(\n        gettext('Logout required'),\n        gettext('You must log out in order to apply your changes'),\n        Status.WARNING,\n        gettext('Log out')\n      );\n      await this.loginService.logout();\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  close() {\n    this.modal.hide();\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit\n} from '@angular/core';\nimport { IUser, UserService, TenantLoginOptionsService, TenantService } from '@c8y/client';\nimport { clone } from 'lodash-es';\nimport { AppStateService } from '../common/ui-state.service';\nimport { TranslateService } from '../i18n/translate.service';\nimport { NewPassword } from '../authentication/password.model';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { PasswordService } from '../authentication/password.service';\nimport { UserTotpSetupComponent } from './user-totp-setup.component';\nimport { AlertService } from '../alert/alert.service';\nimport { ModalService } from '../modal/modal.service';\nimport { UserPreferencesService } from '../common/user-preferences/user-preferences.service';\n\nexport interface User extends IUser {\n  phone: string;\n  sendPasswordResetEmail: boolean;\n  newsletter?: boolean;\n}\n\n@Component({\n  selector: 'c8y-user-edit',\n  templateUrl: './user-edit.component.html'\n})\nexport class UserEditComponent implements OnInit {\n  @Input() lang: string;\n  @Input() loading: boolean = false;\n  @Input() set user(u: User) {\n    this._user = clone(u);\n    this.userIsExternal = u.customProperties.userOrigin === 'OAUTH2';\n    this.isPhoneRequired = this.isPhoneRequired && u.twoFactorAuthenticationEnabled;\n  }\n  get user() {\n    return this._user;\n  }\n  @Input() showProductUsageSetting: boolean = false;\n  @Input() isUsageTrackingEnabled: boolean = true;\n  @Output() onUser: EventEmitter<User> = new EventEmitter();\n  @Output() onLanguage: EventEmitter<string> = new EventEmitter();\n  @Output() onProductExperience: EventEmitter<boolean> = new EventEmitter();\n  @Output() onCancel: EventEmitter<void> = new EventEmitter();\n  userHasActiveTotp = false;\n  userCanSetupTotp = false;\n  isPhoneRequired = false;\n  userIsExternal: boolean;\n  isTfaEnabled: boolean;\n\n  private _user: User;\n\n  constructor(\n    public state: AppStateService,\n    public translate: TranslateService,\n    public passwordService: PasswordService,\n    public modalConfirmService: ModalService,\n    private bsModalService: BsModalService,\n    private alert: AlertService,\n    private userService: UserService,\n    private tenantLoginOptionsService: TenantLoginOptionsService,\n    private tenantService: TenantService,\n    private userPreferencesService: UserPreferencesService\n  ) {}\n\n  async ngOnInit() {\n    const currentTenant = (await this.tenantService.current()).data;\n    const { enabledOnSystemLevel, enabledOnTenantLevel } = await this.tenantService.getTfaSettings(\n      currentTenant\n    );\n    this.isTfaEnabled = enabledOnSystemLevel || enabledOnTenantLevel;\n\n    await this.initializeTotpSettings();\n    if (this.user.twoFactorAuthenticationEnabled && !this.userCanSetupTotp) {\n      this.isPhoneRequired = true;\n    }\n  }\n\n  get langs() {\n    return this.state.state.langs;\n  }\n\n  setupTotp() {\n    this.bsModalService.show(UserTotpSetupComponent, { class: 'modal-sm' });\n    this.cancel(); // to close the user edit modal and prevent console errors on logout\n  }\n\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  async save() {\n    if (this.loading) {\n      return;\n    }\n\n    if (this.showProductUsageSetting) {\n      this.onProductExperience.emit(this.isUsageTrackingEnabled);\n      this.userPreferencesService.set('gainsightEnabled', this.isUsageTrackingEnabled);\n    }\n    this._user.password ? this.saveAfterPasswordConfirmation() : this.onUser.emit(this._user);\n  }\n\n  onNewPasswordChanged(newPassword: NewPassword) {\n    this._user.password = newPassword.password;\n  }\n\n  private async initializeTotpSettings() {\n    try {\n      this.userCanSetupTotp = await this.canUserSetupTotp();\n      if (this.userCanSetupTotp) {\n        const { data: totpActivity } = await this.userService.getActivityTotp();\n        this.userHasActiveTotp = totpActivity.isActive;\n      }\n    } catch (ex) {\n      this.alert.removeLastDanger();\n    }\n  }\n\n  private async canUserSetupTotp() {\n    // we don't check for tenant options here due to permission restrictions on that end-point\n    const { loginOptions } = (await this.tenantLoginOptionsService.detail()).data;\n    return loginOptions.some(({ tfaStrategy = '' }) => tfaStrategy.toLowerCase() === 'totp');\n  }\n\n  private saveAfterPasswordConfirmation() {\n    this.passwordService.confirmPassword().subscribe(confirmed => {\n      if (confirmed) {\n        this.onUser.emit(this._user);\n      }\n    });\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { TenantService, UserService } from '@c8y/client';\n\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { LoginService } from '../login/login.service';\nimport { ModalService } from '../modal/modal.service';\nimport { Observable } from 'rxjs';\nimport { OptionsService } from '../common/options.service';\nimport { Status } from '../common/status.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { UserEditModalComponent } from './user-edit-modal.component';\nimport { UserMenuItem } from './user.model';\nimport { gettext } from '../i18n/gettext';\nimport { map } from 'rxjs/operators';\nimport { sortBy } from 'lodash-es';\n\n@Component({\n  selector: 'c8y-user-menu-outlet',\n  templateUrl: './user-menu-outlet.component.html'\n})\nexport class UserMenuOutletComponent {\n  @Input()\n  items: UserMenuItem[];\n  open: boolean;\n\n  constructor(\n    public ui: AppStateService,\n    private bsModalService: BsModalService,\n    private modalService: ModalService,\n    private loginService: LoginService,\n    private translateService: TranslateService,\n    private tenantService: TenantService,\n    private alertService: AlertService,\n    private user: UserService,\n    private optionsService: OptionsService\n  ) {}\n\n  copyIt(text: string) {\n    const handler: EventListenerObject = {\n      handleEvent: (e: ClipboardEvent) => {\n        e.clipboardData.setData('text/plain', text);\n        e.preventDefault();\n      }\n    };\n    document.addEventListener('copy', handler);\n\n    let copied;\n    try {\n      copied = document.execCommand('copy');\n    } catch (e) {\n      copied = false;\n    }\n\n    if (copied) {\n      this.alertService.addByText('success', gettext('Copied to clipboard.'));\n    } else {\n      this.alertService.addByText('danger', gettext('Could not copy to clipboard.'));\n    }\n\n    document.removeEventListener('copy', handler);\n  }\n\n  async editUser() {\n    this.bsModalService.show(UserEditModalComponent);\n  }\n\n  async logout() {\n    await this.loginService.logout();\n  }\n\n  async activateSupportAccess() {\n    const title = gettext('Activate support user access');\n\n    const companyName = this.optionsService.get('companyName', 'Cumulocity');\n    const textWithCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to allow a support user from {{companyName}} to access your tenant to help you with your issue.'\n    );\n    const textWithoutCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to allow a support user to access your tenant to help you with your issue.'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const body = [\n      this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {\n        companyName\n      }),\n      this.translateService.instant(finalQuestion)\n    ].join(' ');\n\n    const labels = {\n      ok: gettext('Activate access'),\n      cancel: gettext('Cancel')\n    };\n\n    const successMsg = gettext('Support user access activated.');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.tenantService.enableSupportUser();\n      await this.refreshCurrentUser();\n      this.alertService.success(successMsg);\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  async deactivateSupportAccess() {\n    const title = gettext('Deactivate support user access');\n\n    const companyName = this.optionsService.get('companyName', 'Cumulocity');\n    const textWithCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to block a support user from {{companyName}} from accessing your tenant to help you with your issue.'\n    );\n    const textWithoutCompany = gettext(\n      // tslint:disable-next-line:max-line-length\n      'You are about to block a support user from accessing your tenant to help you with your issue.'\n    );\n    const { data: currentUser } = await this.user.current();\n    const isTenantAdmin = await this.user.hasRole(currentUser, 'ROLE_TENANT_ADMIN');\n    const tenantAdminNote = gettext(\n      // tslint:disable-next-line:max-line-length\n      'Deactivating support access as tenant admin will disable all other support requests on your tenant.'\n    );\n    const finalQuestion = gettext('Do you want to proceed?');\n    const body = [\n      this.translateService.instant(companyName ? textWithCompany : textWithoutCompany, {\n        companyName\n      }),\n      isTenantAdmin ? this.translateService.instant(tenantAdminNote) : '',\n      this.translateService.instant(finalQuestion)\n    ]\n      .filter(Boolean)\n      .join(' ');\n\n    const labels = {\n      ok: gettext('Deactivate access'),\n      cancel: gettext('Cancel')\n    };\n\n    const successMsg = gettext('Support user access deactivated.');\n\n    try {\n      await this.modalService.confirm(title, body, Status.DANGER, labels);\n      await this.tenantService.disableSupportUser();\n      await this.refreshCurrentUser();\n      this.alertService.success(successMsg);\n    } catch (ex) {\n      // intended empty\n    }\n  }\n\n  getSortedItems() {\n    return sortBy(Array.from(this.items), this.byPriority);\n  }\n\n  private async refreshCurrentUser() {\n    const currentUserResult = await this.user.current();\n    this.ui.currentUser.next(currentUserResult.data);\n  }\n\n  private byPriority(item) {\n    return -item.priority;\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { PasswordService } from './password.service';\nimport { LoginService } from '../login/login.service';\nimport { assign, map } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-password-check-list',\n  templateUrl: './password-check-list.component.html',\n  styles: []\n})\n\nexport class PasswordCheckListComponent implements OnInit {\n\n  @Input('password')\n  set password(password: string) {\n    if (typeof password === 'string') {\n      this.onPasswordChange(password);\n    }\n  }\n\n  minGreenLength: number = 0;\n\n  checklist = [\n    {\n      label: gettext('Include lowercase characters (e.g. abcdef)'),\n      check: this.passwordStrengthChecker.hasLowerCase,\n      icon: '',\n      contextualColor: ''\n\n    },\n    {\n      label: gettext('Include uppercase characters (e.g. ABCDEF)'),\n      check: this.passwordStrengthChecker.hasUpperCase,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Include numbers (e.g. 123456)'),\n      check: this.passwordStrengthChecker.hasNumbers,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Include symbols (e.g. !@#$%^)'),\n      check: this.passwordStrengthChecker.hasSpecialChars,\n      icon: '',\n      contextualColor: ''\n    },\n    {\n      label: gettext('Must have at least {{length}} characters'),\n      check: (password) => password.length >= this.minGreenLength,\n      icon: '',\n      contextualColor: ''\n    }\n  ];\n\n  constructor(\n    public loginService: LoginService,\n    private passwordStrengthChecker: PasswordService,\n    private passwordService: PasswordService\n  ) { }\n\n  async ngOnInit() {\n    this.minGreenLength = await this.loginService.getGreenMinLength();\n    if (!this.minGreenLength) {\n      this.minGreenLength = this.passwordService.getDefaultPasswordMinLength();\n    }\n  }\n\n  get translateParams() {\n    return {\n      length: this.minGreenLength\n    };\n  }\n\n  onPasswordChange(password) {\n    this.checklist = map(this.checklist, (requirement) => {\n      const checked = requirement.check(password);\n      assign(requirement, {\n        icon: checked ? 'check-circle' : '',\n        contextualColor: checked ? '' : 'text-muted'\n      });\n      return requirement;\n    });\n  }\n}\n","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[passwordConfirm]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: PasswordConfirm,\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\n\r\nexport class PasswordConfirm implements Validator {\r\n\r\n  constructor(@Attribute('passwordConfirm') public passwordConfirm: string) {\r\n  }\r\n\r\n  validate(abControl: AbstractControl): { [key: string]: any } {\r\n    const value = abControl.value;\r\n    const controlToCompareWith = abControl.root.get(this.passwordConfirm);\r\n    if (controlToCompareWith && value !== controlToCompareWith.value) {\r\n      return { passwordConfirm: true };\r\n    }\r\n    return null;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { PasswordStrength } from '@c8y/client';\nimport { filter } from 'lodash-es';\nimport { PasswordStrengthColor } from './password.model';\nimport { gettext } from '../i18n/gettext';\n\n@Injectable()\nexport class PasswordStrengthCheckerService {\n\n  private GREEN: PasswordStrengthColor = {\n    colorName: 'green',\n    color: 'rgb(0, 128, 0)',\n    description: gettext('strong'),\n    passwordStrength: PasswordStrength.GREEN\n  };\n  private YELLOW: PasswordStrengthColor = {\n    colorName: 'yellow',\n    color: 'rgb(255, 204, 51)',\n    description: gettext('medium'),\n    passwordStrength: PasswordStrength.YELLOW\n  };\n  private RED: PasswordStrengthColor = {\n    colorName: 'red',\n    color: 'rgb(170, 0, 51)',\n    description: gettext('weak'),\n    passwordStrength: PasswordStrength.RED\n  };\n\n  hasLowerCase(password: string) {\n    return (password.search(/[a-z]/) !== -1);\n  }\n\n  hasUpperCase(password: string) {\n    return (password.search(/[A-Z]/) !== -1);\n  }\n\n  hasNumbers(password: string) {\n    return (password.search(/[0-9]/) !== -1);\n  }\n\n  hasSpecialChars(password: string) {\n    return (password.search(/[^0-9a-zA-Z]+/) !== -1);\n  }\n\n  getStrengthColor(password: string): PasswordStrengthColor {\n    const passwordStrength = filter([\n      this.hasLowerCase(password),\n      this.hasUpperCase(password),\n      this.hasNumbers(password),\n      this.hasSpecialChars(password)\n    ]).length;\n\n    if (passwordStrength > 3) {\n      return this.GREEN;\n    } else if (passwordStrength >= 3) {\n      return this.YELLOW;\n    } else {\n      return this.RED;\n    }\n  }\n}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { PasswordService } from './password.service';\n\n@Component({\n  selector: 'c8y-password-strength',\n  templateUrl: './password-strength.component.html'\n})\n\nexport class PasswordStrengthComponent {\n\n  @Input('password')\n  set password(password: string) {\n    if (typeof password === 'string') {\n      this.model = this.passwordStrengthCheckerService.getStrengthColor(password);\n      this.strength.emit(this.model);\n    }\n  }\n  @Output()\n  strength = new EventEmitter();\n\n  model;\n\n  constructor(private passwordStrengthCheckerService: PasswordService) {\n    this.password = '';\n  }\n}\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { NewPassword } from './password.model';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { LoginService } from '../login/login.service';\n\n@Component({\n  selector: 'c8y-new-password',\n  templateUrl: './new-password.component.html',\n  viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]\n})\nexport class NewPasswordComponent implements OnInit {\n  @Output() password = new EventEmitter<NewPassword | {}>();\n  model: any = {};\n  changePassword: boolean = false;\n  passwordEnforced: boolean = false;\n  minlength: number;\n\n  constructor(\n    private loginService: LoginService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loadPasswordStrengthSettings();\n    this.loginService.getGreenMinLength().then(value => {\n      this.minlength = value;\n    });\n  }\n\n  newPasswordChanged() {\n    this.password.emit({\n      password: this.model.newPassword,\n      passwordStrength: this.model.strength\n    });\n  }\n\n  async loadPasswordStrengthSettings() {\n    this.passwordEnforced = await this.loginService.getPasswordStrengthEnforced({ refresh: true });\n  }\n\n  showPasswordStrength() {\n    return this.model.newPassword && this.model.newPassword.length >= this.minlength;\n  }\n\n  toggleChangePassword() {\n    this.changePassword = !this.changePassword;\n    if (!this.changePassword) {\n      this.password.emit({});\n      this.model = {};\n    }\n  }\n}\n","import { NG_VALIDATORS, AbstractControl, Validator } from '@angular/forms';\nimport { Directive } from '@angular/core';\nimport { parsePhoneNumberFromString } from 'libphonenumber-js/max';\n\n@Directive({\n  selector: '[c8yPhoneValidation]',\n  providers: [{provide: NG_VALIDATORS, useExisting: PhoneValidationDirective, multi: true}]\n})\nexport class PhoneValidationDirective implements Validator {\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const valid = this.validateInternationalPhoneNumber(control);\n    return valid ? null : {\n      internationalPhoneNumber: true\n    };\n  }\n\n  private validateInternationalPhoneNumber(control: AbstractControl) {\n    let numberValid;\n    try {\n      const phoneNumber = parsePhoneNumberFromString(control.value);\n      numberValid = phoneNumber.isValid();\n      if (numberValid && control.value !== phoneNumber.format('E.164')) {\n        control.setValue(phoneNumber.format('E.164'), { emitEvent: false, emitModelToViewChange: false });\n      }\n    } catch (e) {\n      numberValid = !control.value;\n    }\n    return numberValid;\n  }\n}\n","// tslint:disable: max-line-length\nimport { gettext } from '../i18n/gettext';\n\nexport interface ValidationRules {\n  pattern?: RegExp;\n  message?: string;\n  maxLength?: number;\n  minLength?: number;\n}\n\n// @dynamic\nexport class ValidationPattern {\n  static readonly messages = {\n    deviceId: gettext('Device ID must not contain spaces or slashes (\"/\").'),\n    domain: gettext(\n      'Only lowercase letters, digits and hyphens allowed in the first part of the URI. ' +\n        'Must start with a letter; hyphens only allowed in the middle. Must be a valid URI.'\n    ),\n    email: gettext('Invalid email address.'),\n    emails: gettext('Invalid email addresses.'),\n    internationalPhoneNumber: gettext(\n      'International phone number required, in the format +49 9 876 543 210.'\n    ),\n    loginAlias: gettext(\n      'Login alias must not contain slashes (\"/\", \"\\\\\") nor (\"+\"), (\":\"), (\"$\") signs.'\n    ),\n    max: gettext('Max value: {{ value }}'),\n    min: gettext('Min value: {{ value }}'),\n    opcuaBrowsePath: gettext('Invalid OPC UA URI.'),\n    password: gettext(\n      'Password must have at least 8 characters and no more than 32 and can only contain letters, numbers and following symbols: `~!@#$%^&*()_|+-=?;:\\'\",.<>{}[]\\\\/'\n    ),\n    passwordConfirm: gettext('Passwords do not match.'),\n    passwordStrength: gettext('Password not good enough, password must be stronger (green).'),\n    phoneNumber: gettext(\n      'Invalid phone number format. Only digits, spaces, slashes (\"/\") and dashes (\"-\") allowed.'\n    ),\n    required: gettext('This field is required.'),\n    tenantId: gettext(\n      'May contain lowercase letters, digits, and hyphens. ' +\n        'Must start with a letter; hyphens only allowed in the middle; minimum 2 characters.'\n    ),\n    urlSegment: gettext('Slash, single or double dots and white space not allowed.'),\n    user: gettext(\n      'Username must not contain spaces nor slashes (\"/\", \"\\\\\") nor (\"+\"), (\":\"), (\"$\") signs.'\n    )\n  };\n\n  static readonly rules = {\n    deviceId: {\n      pattern: /^[^\\s/]*$/\n    },\n    domain: {\n      pattern: /^[a-z]+[a-z0-9-]*[a-z0-9]+\\.{1}.+$/\n    },\n    groupName: {\n      maxLength: 254\n    },\n    hostname: {\n      pattern: /^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9-]*[A-Za-z0-9])$/\n    },\n    ip: {\n      pattern: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/\n    },\n    opcuaBrowsePath: {\n      pattern: /^(opc.tcp|http|https):\\/\\/[^ \"]+$/\n    },\n    password: {\n      pattern: /^[a-zA-Z0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]{8,32}$/\n    },\n    phoneNumber: {\n      pattern: /^$|^(\\+|0{2})[\\d\\s/-]{1,30}$/\n    },\n    tenantId: {\n      pattern: /^[a-z]+[a-z0-9-]*[a-z0-9]+$/\n    },\n    user: {\n      pattern: /^[^\\\\/\\s$:+]*$/\n    },\n    urlSegment: {\n      pattern: /^(([.]{1,2})|([/])+|(([/]*)([.]{1,2})([/]*))|((.*)([/]|[ ]+)(.*))|(\\s+))$/\n    },\n    loginAlias: {\n      pattern: /^[^\\\\/$:+]*$/\n    }\n  };\n\n  static get(key: string) {\n    const pattern = this.rules[key];\n    return pattern as ValidationRules;\n  }\n}\n","import { NG_VALIDATORS, AbstractControl, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\nimport { ValidationPattern } from './validation-pattern';\n\n@Directive({\n  selector: '[c8yDefaultValidation]',\n  providers: [{provide: NG_VALIDATORS, useExisting: DefaultValidationDirective, multi: true}]\n})\nexport class DefaultValidationDirective implements Validator {\n  @Input() c8yDefaultValidation: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    if (!control.value) {\n      return null;\n    }\n    const validation = ValidationPattern.get(this.c8yDefaultValidation);\n    if (!validation) {\n      throw new Error(`Pattern ${this.c8yDefaultValidation} not found.`);\n    }\n\n    let valid = true;\n    if (validation.pattern) {\n      valid = validation.pattern.test(control.value);\n    }\n    if (validation.maxLength) {\n      valid = control.value.length < validation.maxLength;\n    }\n    if (validation.minLength) {\n      valid = control.value.length >= validation.minLength;\n    }\n    return valid ? null : {[this.c8yDefaultValidation]: true };\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, ElementRef, Input } from '@angular/core';\n\nimport { isUndefined } from 'lodash-es';\n\n@Directive({\n  selector: '[min]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MinValidationDirective, multi: true}]\n})\nexport class MinValidationDirective implements Validator {\n  @Input() min: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const parsedMin = parseInt(this.min, 10);\n    if (isUndefined(control.value) || !this.min) {\n      return null;\n    }\n\n    let valid = true;\n    valid = (control.value !== null) ? !(control.value < parsedMin) : true;\n    return valid ? null : {min: { value: parsedMin } };\n  }\n}\n","import { AbstractControl, NG_VALIDATORS, Validator } from '@angular/forms';\nimport { Directive, Input } from '@angular/core';\n\nimport { isUndefined } from 'lodash-es';\n\n@Directive({\n  selector: '[max]',\n  providers: [{provide: NG_VALIDATORS, useExisting: MaxValidationDirective, multi: true}]\n})\nexport class MaxValidationDirective implements Validator {\n  @Input() max: string = '';\n\n  validate(control: AbstractControl): {[key: string]: any} | null {\n    const parsedMax = parseInt(this.max, 10);\n    if (isUndefined(control.value) || !this.max) {\n      return null;\n    }\n\n    let valid = true;\n    valid = !(control.value > parsedMax);\n    return valid ? null : {max: { value: parsedMax } };\n  }\n}\n","import { Directive, Input } from '@angular/core';\n\n@Directive({\n  selector: 'c8y-message',\n})\nexport class MessageDirective {\n  @Input() name: string;\n  @Input() text: string;\n}\n","import { Component, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { MessageDirective } from './message.directive';\nimport { ValidationPattern } from './validation-pattern';\nimport { isFunction } from 'lodash-es';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'c8y-messages',\n  templateUrl: './messages.component.html'\n})\nexport class MessagesComponent {\n  @Input() show: {} = {};\n  @Input() defaults: {} = ValidationPattern.messages;\n  @ContentChildren(MessageDirective) customMessages: QueryList<MessageDirective>;\n  messages = [];\n  messageMap: any = {};\n\n  constructor(private translateService: TranslateService) {}\n\n  ngAfterContentInit(): void {\n    this.messageMap = Object.assign({}, this.defaults, this.customMessages.reduce((messages, directive) => {\n      messages[directive.name] = directive.text;\n      return messages;\n    }, {}));\n  }\n\n  changVisibility(show: {}) {\n    this.show = show;\n    this.ngOnChanges();\n  }\n\n  ngOnChanges() {\n    if (this.show) {\n      this.messages = Object.keys(this.show)\n        .map((key) => this.toMessage(key, this.show[key]));\n    } else {\n      this.messages = [];\n    }\n  }\n\n  private toMessage(key, value) {\n    return this.translateService.instant(this.messageMap[key], value);\n  }\n}\n","import { Component, ContentChild, HostBinding, Input } from '@angular/core';\nimport { NgModel } from '@angular/forms';\nimport { Subscription, timer, merge } from 'rxjs';\nimport { debounce, filter } from 'rxjs/operators';\nimport { MessagesComponent } from './messages.component';\n/**\n * A form group helps to validate an input of a form element.\n *\n * ## Example:\n *\n * ```html\n *  <c8y-form-group [hasWarning]=\"user.email.length === 0\">\n *   <label translate for=\"userEmail\">Email</label>\n *   <input\n *     id=\"userEmail\"\n *     class=\"form-control\"\n *     type=\"email\"\n *     name=\"email\"\n *     [maxlength]=\"254\"\n *     autocomplete=\"off\"\n *     placeholder=\"{{'e.g. joe.doe@example.com' | translate}}\"\n *     [(ngModel)]=\"user.email\"\n *     email\n *     required\n *   >\n *   <c8y-messages>\n *     <c8y-message *ngIf=\"user.email.length === 0\" translate></c8y-message>\n *     <c8y-message name=\"required\" text=\"The E-Mail is SUPER required\"></c8y-message>\n *   </c8y-messages>\n *  </c8y-form-group>\n * ```\n *\n * @param status The current status could be error, warning or success.\n * @param hasError Set this to true to display a error.\n * @param hasWarning Set this to true to display a warning.\n * @param hasSuccess Set this to true to display a success.\n * @param novalidation Set this to true to disable automatic validation by this component.\n */\n@Component({\n  selector: 'c8y-form-group',\n  templateUrl: './form-group.component.html',\n  host: {\n    class: 'form-group'\n  }\n})\nexport class FormGroupComponent {\n  @Input() hasError = false;\n  @Input() hasWarning = false;\n  @Input() hasSuccess = false;\n  @Input() novalidation = false;\n  @Input() status: string;\n  @HostBinding('class.has-error') get error() {\n    return this.status === 'error' || this.hasError;\n  }\n  @HostBinding('class.has-warning') get warning() {\n    return this.status === 'warning' || this.hasWarning;\n  }\n  @HostBinding('class.has-success') get success() {\n    return this.status === 'success' || this.hasSuccess;\n  }\n  @ContentChild(MessagesComponent, { static: false }) customErrorMessage: MessagesComponent;\n  @ContentChild(NgModel, { static: true }) model: NgModel;\n\n  errors: {};\n  private subscription: Subscription;\n  private readonly VALIDATION_DEBOUNCE_MS = 1000;\n\n  ngAfterContentInit(): void {\n    this.initNgModel();\n  }\n\n  initNgModel() {\n    if (this.model) {\n      this.model.valueAccessor.registerOnTouched(() => {\n        if (this.model.control && !this.model.control.dirty) {\n          this.model.control.markAsDirty();\n          this.model.control.updateValueAndValidity({onlySelf: true});\n        }\n      });\n      this.subscription = merge(this.model.valueChanges, this.model.statusChanges)\n        .pipe(\n          filter(() => this.model.dirty && !this.novalidation),\n          debounce(() => (this.hasError ? timer(10) : timer(this.VALIDATION_DEBOUNCE_MS)))\n        )\n        .subscribe(() => this.update());\n    }\n  }\n\n  update() {\n    this.hasError = this.model.status === 'INVALID';\n    if (this.customErrorMessage) {\n      this.customErrorMessage.changVisibility(this.model.errors);\n    } else {\n      this.errors = this.model.errors;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  QueryList,\n  TemplateRef,\n  ContentChild,\n  EventEmitter\n} from '@angular/core';\n\n@Component({\n  selector: 'c8y-input-group-list',\n  templateUrl: 'input-group-list.component.html'\n})\nexport class InputGroupListComponent {\n  @Input() plus: boolean = true;\n  @Input() minus: boolean = true;\n  @Input() index: number;\n\n  @Output() onRemove: EventEmitter<number> = new EventEmitter<number>();\n  @Output() onAdd: EventEmitter<number> = new EventEmitter<number>();\n  add() {\n    this.onAdd.emit(this.index);\n  }\n\n  remove() {\n    this.onRemove.emit(this.index);\n  }\n}\n","import {\n  Directive,\n  Input,\n  Output,\n  QueryList,\n  AfterContentInit,\n  ContentChildren,\n  EventEmitter\n} from '@angular/core';\nimport { map } from 'lodash-es';\nimport { InputGroupListComponent } from './input-group-list.component';\n\n@Directive({\n  selector: '[c8yInputGroupListContainer]'\n})\nexport class InputGroupListContainerDirective implements AfterContentInit {\n  @ContentChildren(InputGroupListComponent) listProjections: QueryList<InputGroupListComponent>;\n\n  ngAfterContentInit() {\n    this.listProjections.map(element => {\n      if (element !== this.listProjections.last) {\n        setTimeout(() => {\n          element.plus = false;\n        });\n      }\n    });\n\n    this.listProjections.changes.subscribe(elements => {\n      if (elements.length === 1) {\n        setTimeout(() => {\n          elements.first.plus = true;\n          elements.first.minus = false;\n        });\n\n        return;\n      }\n      elements.map(element => {\n        setTimeout(() => {\n          element.minus = true;\n        });\n\n        if (element !== elements.last) {\n          setTimeout(() => {\n            element.plus = false;\n          });\n        }\n        if (element === elements.last) {\n          setTimeout(() => {\n            element.plus = true;\n          });\n        }\n      });\n    });\n  }\n}\n","import { Directive, EventEmitter, Output, OnInit, OnDestroy } from '@angular/core';\nimport { NgControl, AbstractControl } from '@angular/forms';\n\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { gettext } from '../i18n/index';\n\n@Directive({\n  selector: 'textarea[prettyValidJson]'\n})\nexport class JsonValidationPrettifierDirective implements OnInit, OnDestroy {\n  @Output() invalidJSON: EventEmitter<string> = new EventEmitter();\n  private abstractCtrl: AbstractControl;\n  private message: string = gettext('Must be a valid JSON object.');\n  private debounceTimeInMs: number = 1000;\n  private subscription: Subscription;\n\n  constructor(ngCtrl: NgControl) {\n    this.abstractCtrl = ngCtrl.control;\n  }\n\n  ngOnInit() {\n    this.subscription = this.abstractCtrl.valueChanges\n      .pipe(\n        tap(() => this.clearValidationMessage()),\n        debounceTime(this.debounceTimeInMs),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.validateInputAndPrettify(value);\n      });\n  }\n\n  ngOnDestroy() {\n    if (this.subscription && !this.subscription.closed) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  validateInputAndPrettify(value) {\n    if (value) {\n      try {\n        const validJsonObject = JSON.parse(value);\n        const pretty = JSON.stringify(validJsonObject, undefined, 2);\n        this.abstractCtrl.setValue(pretty);\n      } catch (ex) {\n        this.setErrorAndValidationMessage();\n      }\n    }\n  }\n\n  private setErrorAndValidationMessage() {\n    this.abstractCtrl.setErrors({ invalidBodyTemplate: true });\n    this.invalidJSON.emit(this.message);\n  }\n\n  private clearValidationMessage() {\n    this.invalidJSON.emit(undefined);\n  }\n}\n","import { Directive, ElementRef, Input, HostBinding, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: 'textarea[heightPerRow]'\n})\nexport class TextAreaRowHeightDirective {\n  @Input()\n  @HostBinding('rows')\n  rows: number = 1;\n\n  @Input('heightPerRow')\n  heightPerRow: string;\n\n  private minHeightPerRow = 20;\n\n  constructor(private elem: ElementRef, private renderer: Renderer2) {}\n\n  ngAfterViewInit() {\n    const convertedValue = Number(this.heightPerRow);\n    if (this.heightPerRow && convertedValue && convertedValue > this.minHeightPerRow) {\n      this.setHeight(`${this.rows * convertedValue}px`);\n    } else {\n      this.setHeight(`${this.rows * this.minHeightPerRow}px`);\n    }\n  }\n\n  private setHeight(value: string) {\n    this.renderer.setStyle(this.elem.nativeElement, 'height', value);\n  }\n}\n","import { Directive, ElementRef, Renderer2, AfterViewChecked } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Directive({\n  selector: 'input[required]'\n})\nexport class RequiredInputPlaceholderDirective implements AfterViewChecked {\n  private shouldSkipRequiredHint: boolean = false;\n  private placeholder: string;\n  private req: boolean;\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private translationService: TranslateService\n  ) {\n     this.shouldSkipRequiredHint = !!this.el.nativeElement.closest('[placeholder-no-required-hint]');\n  }\n\n  ngAfterViewChecked(): void {\n    if (this.el && this.el.nativeElement && this.el.nativeElement.required !== undefined) {\n      const required = this.el.nativeElement.required && !this.shouldSkipRequiredHint;\n      const placeholder = this.el.nativeElement.placeholder;\n\n      if (this.placeholder !== placeholder || this.req !== required) {\n        this.updatePlaceholder(this.getTextForPlaceholder(placeholder, required));\n      }\n    }\n  }\n\n  private getTextForPlaceholder(placeholder = '', required = false) {\n    this.req = required;\n    const requiredText = `(${this.translationService.instant(gettext('required'))})`;\n    const requiredTextIndex = placeholder.lastIndexOf(requiredText);\n    if (requiredTextIndex > 0) {\n      placeholder = placeholder.slice(0, requiredTextIndex - 1);\n    }\n    if (requiredTextIndex === 0) {\n      placeholder = '';\n    }\n    if (!required) {\n      return placeholder;\n    }\n    return placeholder.trim() ? `${placeholder} ${requiredText}` : requiredText;\n  }\n\n  private updatePlaceholder(placeholder) {\n    this.renderer.setAttribute(this.el.nativeElement, 'placeholder', placeholder);\n    this.placeholder = placeholder;\n  }\n}\n","import { Component, Input, OnChanges } from '@angular/core';\nimport { cloneDeep } from 'lodash-es';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'c8y-ip-range-input-list',\n  templateUrl: './ip-range-input-list.component.html'\n})\nexport class IpRangeInputListComponent {\n  @Input()\n  set data(list) {\n    this.ipRangeList = list;\n    if (this.ipRangeList.length === 0) {\n      this.add();\n    }\n  }\n\n  get data() {\n    return this.ipRangeList;\n  }\n\n  ipRangeList: Array<{ ip: string; cidr: number }>;\n\n  add() {\n    this.ipRangeList.push({ ip: '', cidr: undefined });\n  }\n\n  remove(index) {\n    this.ipRangeList.splice(index, 1);\n  }\n}\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { debounce, distinctUntilChanged, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'c8y-filter',\n  templateUrl: './filter-input.component.html'\n})\nexport class FilterInputComponent implements OnInit, OnDestroy {\n  @Input() icon: string;\n  @Output() onSearch = new EventEmitter<string>();\n  filterChange$ = new Subject();\n  filterTerm: string = '';\n  private readonly CARRIAGE_RETURN_KEY = 13;\n  private readonly CARRIAGE_RETURN_CODE = 'Enter';\n\n  ngOnInit() {\n    this.reset();\n    this.filterChange$\n      .pipe(\n        debounce((event: any) =>\n          event.code === this.CARRIAGE_RETURN_CODE || event.keyCode === this.CARRIAGE_RETURN_KEY\n            ? timer(10)\n            : timer(300)\n        ),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(filterTerm => {\n        this.filterTerm = filterTerm;\n        this.onSearch.emit(filterTerm);\n      });\n  }\n\n  reset() {\n    this.filterTerm = '';\n    this.onSearch.emit('');\n  }\n\n  ngOnDestroy(): void {\n    this.filterChange$.complete();\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport {\n  FormControl,\n  AbstractControl,\n  NG_VALIDATORS,\n  ValidationErrors,\n  Validator,\n  Validators\n} from '@angular/forms';\n\n/**\n * A directive that adds the `emails` validator to controls marked with the\n * `emails` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * **Example**\n *\n * ```html\n * <input type=\"text\" name=\"emails\" ngModel emails>\n * <input type=\"text\" name=\"emails\" ngModel emails=\"true\">\n * <input type=\"text\" name=\"emails\" ngModel [emails]=\"true\">\n * ```\n */\n@Directive({\n  selector: '[emails][formControlName],[emails][formControl],[emails][ngModel]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: EmailsValidatorDirective, multi: true }]\n})\nexport class EmailsValidatorDirective implements Validator {\n  private _enabled = false;\n  private _onChange?: () => void;\n  private separator: string = ',';\n\n  /**\n   * Tracks changes to the emails attribute bound to this directive.\n   */\n  @Input()\n  set emails(value: boolean | string) {\n    this._enabled = value === '' || value === true || value === 'true';\n    if (this._onChange) {\n      this._onChange();\n    }\n  }\n\n  /**\n   * Method that validates whether email addresses are valid.\n   * Returns the validation result if enabled, otherwise null.\n   */\n  validate(control: AbstractControl): ValidationErrors | null {\n    if (!this._enabled) {\n      return null;\n    }\n\n    const value = control.value || '';\n    const emails = value.split(this.separator).map(email => email.trim());\n    const invalid = emails.some(email => Validators.email(new FormControl(email)));\n    return invalid ? { emails: true } : null;\n  }\n\n  /**\n   * Registers a callback function to call when the validator inputs change.\n   */\n  registerOnValidatorChange(fn: () => void): void {\n    this._onChange = fn;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { PhoneValidationDirective } from './phone-validation.directive';\nimport { DefaultValidationDirective } from './default-validation.directive';\nimport { MinValidationDirective } from './min-validation.directive';\nimport { MaxValidationDirective } from './max-validation.directive';\nimport { CommonModule } from '../common/common.module';\nimport { FormsModule as NgFormsModule } from '@angular/forms';\nimport { FormGroupComponent } from './form-group.component';\nimport { MessageDirective } from './message.directive';\nimport { MessagesComponent } from './messages.component';\nimport { InputGroupListComponent } from './input-group-list.component';\nimport { InputGroupListContainerDirective } from './input-group-list-container.directive';\nimport { JsonValidationPrettifierDirective } from './json-validation-prettifier.directive';\nimport { TextAreaRowHeightDirective } from './text-area-row-height.directive';\nimport { RequiredInputPlaceholderDirective } from './required-input-placeholder.directive';\nimport { IpRangeInputListComponent } from './ip-range-input-list.component';\nimport { FilterInputComponent } from './filter-input.component';\nimport { EmailsValidatorDirective } from './emails-validator.directive';\n\n/**\n * @exports FormGroupComponent A component that allows to group an input and can display warnings and errors.\n * @exports PhoneValidationDirective Allows to validate international phone numbers.\n * @exports NewsletterDirective Allows to subscribe to the newsletter.\n * @exports DefaultValidationDirective Allows to validate some predefined patterns.\n * @exports MessageDirective A directive that allows to define messages.\n * @exports MessagesComponent Allows to display error messages.\n */\n@NgModule({\n  imports: [CommonModule, NgFormsModule],\n  exports: [\n    PhoneValidationDirective,\n    DefaultValidationDirective,\n    MinValidationDirective,\n    MaxValidationDirective,\n    NgFormsModule,\n    FormGroupComponent,\n    MessageDirective,\n    MessagesComponent,\n    InputGroupListComponent,\n    InputGroupListContainerDirective,\n    JsonValidationPrettifierDirective,\n    TextAreaRowHeightDirective,\n    RequiredInputPlaceholderDirective,\n    IpRangeInputListComponent,\n    FilterInputComponent,\n    EmailsValidatorDirective\n  ],\n  declarations: [\n    PhoneValidationDirective,\n    DefaultValidationDirective,\n    MinValidationDirective,\n    MaxValidationDirective,\n    FormGroupComponent,\n    MessageDirective,\n    MessagesComponent,\n    InputGroupListComponent,\n    InputGroupListContainerDirective,\n    JsonValidationPrettifierDirective,\n    TextAreaRowHeightDirective,\n    RequiredInputPlaceholderDirective,\n    IpRangeInputListComponent,\n    FilterInputComponent,\n    EmailsValidatorDirective\n  ]\n})\nexport class FormsModule {}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { NewPassword } from './password.model';\nimport { ControlContainer, NgForm } from '@angular/forms';\nimport { LoginService } from '../login/login.service';\nimport { UserService, ICredentials } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginViews } from '../login/login.model';\n\n@Component({\n  selector: 'c8y-totp-challenge',\n  templateUrl: './totp-challenge.component.html',\n  viewProviders: [ { provide: ControlContainer, useExisting: NgForm } ]\n})\n\nexport class TotpChallengeComponent {\n  /**\n   * Calls the verify endpoint if set to true (default true)\n   */\n  @Input() verify = true;\n  /**\n   * Emits the token on success.\n   */\n  @Output() onSuccess = new EventEmitter();\n\n  model = {\n    token: ''\n  };\n  @Input()\n  loading = false;\n  @Input()\n  hasError = false;\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private alert: AlertService\n  ) {}\n\n  async verifyCode() {\n    try {\n      this.loading = true;\n      this.hasError = false;\n      if (this.verify) {\n        await this.users.verifyTotpCode(this.model.token);\n      }\n      this.onSuccess.emit(this.model.token);\n    } catch (e) {\n      this.hasError = true;\n      this.alert.removeLastDanger();\n      this.loading = false;\n    }\n  }\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { UserService, ICredentials } from '@c8y/client';\nimport { LoginService } from '../login/login.service';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-sms-challenge',\n  templateUrl: './sms-challenge.component.html',\n  styles: []\n})\n\nexport class SmsChallengeComponent {\n\n  @Input() credentials: ICredentials;\n  @Output() onCancel = new EventEmitter();\n\n  model = {\n    smsToken: ''\n  };\n  isLoading = false;\n\n  private resendTfa: string = '0';\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private alert: AlertService\n  ) {}\n\n  async verifyTFACode() {\n    this.isLoading = true;\n    if (this.useOAuthInternal()) {\n      await this.verifyCodeWithOauth();\n    } else {\n      await this.verifyCodeWithBasicAuth();\n    }\n    this.isLoading = false;\n  }\n\n  async resendTFASms() {\n    try {\n      this.isLoading = true;\n      await this.users.verifyTFACode(this.resendTfa);\n    } catch (e) {\n      if (e.res.status === 403) {\n        this.loginService.cleanMessages();\n        this.loginService.addSuccessMessage('resend_sms');\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private useOAuthInternal() {\n    return this.loginService.isPasswordGrantLogin(this.credentials);\n  }\n\n  private async verifyCodeWithOauth() {\n    try {\n      const { credentials } = this;\n      await this.loginService.switchLoginMode({...credentials, tfa: this.model.smsToken});\n      await this.loginService.verifyAppAccess();\n      await this.loginService.authFulfilled();\n    } catch (e) {\n      const resStatus = e.res && e.res.status;\n      if (resStatus === 401) {\n        // it is assumed that the user and password are correct so it must be the tfa code\n        this.alert.danger(gettext('Invalid code'));\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    }\n  }\n\n  private async verifyCodeWithBasicAuth() {\n    try {\n      const { res } = await this.users.verifyTFACode(this.model.smsToken);\n      const tfaToken = res.headers.get('tfatoken');\n      this.credentials.tfa = tfaToken;\n      this.loginWithTFA(tfaToken);\n    } catch (e) {\n      const resStatus = e.res && e.res.status;\n      // BE returns 403 in case of invalid tfa code\n      if (resStatus === 403) {\n        this.alert.danger(gettext('Invalid code'));\n      } else {\n        this.alert.addServerFailure(e);\n      }\n    }\n  }\n\n  private async loginWithTFA(tfaToken) {\n    try {\n      await this.loginService.login(this.loginService.useBasicAuth({tfa: tfaToken}), this.credentials);\n      this.loginService.saveTFAToken(tfaToken, sessionStorage);\n      if (this.loginService.rememberMe) {\n        this.loginService.saveTFAToken(tfaToken, localStorage);\n      }\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ITotp, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n';\n\n@Component({\n  selector: 'c8y-totp-setup',\n  templateUrl: './totp-setup.component.html'\n})\nexport class TotpSetupComponent implements OnInit {\n  totpSecret: ITotp;\n\n  get qrCodeImage() {\n    return this.totpSecret ? this.totpSecret.secretQrUrl : '';\n  }\n\n  get secret() {\n    return this.totpSecret ? this.totpSecret.rawSecret : '';\n  }\n\n  get qrData() {\n    // TODO: waiting for BE:, now we need extract it from secretQrUrl\n    // https://cumulocity.atlassian.net/browse/MTM-36387\n    // return this.totpSecret ? this.totpSecret.qrData : '';\n    const otpAuth = this.qrCodeImage.split('chl=')[1];\n    if (!otpAuth) {\n      this.alert.danger(gettext('Failed to generate a QR code.'));\n      return '';\n    }\n    return decodeURIComponent(otpAuth);\n  }\n\n  constructor(private user: UserService, private alert: AlertService) {}\n\n  async ngOnInit() {\n    try {\n      const { data } = await this.user.generateTotpSecret();\n      this.totpSecret = data;\n    } catch (ex) {\n      this.alert.addServerFailure(ex);\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n  ViewChild\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { get, map, some } from 'lodash-es';\nimport { gettext } from '../i18n/gettext';\n\n/**\n * A drop-zone which is a file selector allowing users to select file(s) from their file system, either natively or by drag and drop.\n *\n * ## Example:\n *\n * ```html\n *  <div>\n *    <c8y-drop-area\n *      (dropped)=\"uploadFile($event)\"\n *      [icon]=\"'upload'\">\n *    </c8y-drop-area>\n *  </div>\n * ```\n */\n\n@Component({\n  selector: 'c8y-drop-area',\n  templateUrl: './drop-area.component.html',\n  providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: DropAreaComponent, multi: true }]\n})\nexport class DropAreaComponent implements OnInit, ControlValueAccessor {\n  @Input() title = gettext('Upload file');\n  @Input() message = gettext('Drop file here');\n  @Input() icon = 'plus-square';\n  @Input() loadingMessage = gettext('Uploading…');\n  /** Affects displaying both the drop zone and the list of dropped files. */\n  @Input() alwaysShow = false;\n  @Input() clickToOpen = true;\n  @Input() loading = false;\n  @Input() progress = -1; // -1 = spinner\n  @Output() dropped: EventEmitter<DroppedFile[]> = new EventEmitter();\n  @Input() maxAllowedFiles = Infinity;\n  @Input() files: FileList;\n  /** Specifies a filter for what file types the user can pick from the file input dialog box. */\n  @Input() accept: string;\n  isOver: boolean = false;\n  errors: boolean = false;\n  errorMessage: string;\n  filesNameString: string;\n\n  @ViewChild('area', { static: true }) area: ElementRef;\n  @ViewChild('zone', { static: false }) zone: ElementRef;\n  @ViewChild('picker', { static: false }) picker: ElementRef;\n\n  constructor(private cd: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.alwaysShow = this.alwaysShow || this.area.nativeElement.children.length === 0;\n    if (this.files && this.files.length > 0) {\n      this.onFilesSelected(this.files);\n    }\n  }\n\n  /**\n   * Toggles the style of the drop zone element when a file is dragged over the component.\n   */\n  toggle($event?): void {\n    this.zone.nativeElement.style.height = this.area.nativeElement.offsetHeight + 'px';\n    this.onOver();\n  }\n\n  /**\n   * Shows computer browser with files to drop into drop-area zone.\n   */\n  showPicker($event?): void {\n    this.preventDefault($event);\n    this.picker.nativeElement.value = '';\n    this.picker.nativeElement.click();\n  }\n\n  /**\n   * Triggered when file is on over drop area, but not dropped.\n   */\n  onOver(): void {\n    if (!this.isOver) {\n      this.isOver = true;\n      document.addEventListener('dragover', this.preventDefault);\n      document.addEventListener('drop', this.preventDefault);\n    }\n  }\n\n  /**\n   * Triggered when file is dropped.\n   */\n  onPick($event): void {\n    this.errors = false;\n    this.preventDefault($event);\n    this.onFilesSelected($event.target.files);\n  }\n\n  /**\n   * Handle file when it is dropped into drop-area.\n   */\n  onDrop($event): void {\n    this.preventDefault($event);\n    this.onFilesSelected($event.dataTransfer.files);\n    this.stopDragging();\n  }\n\n  /**\n   * Checks condition what should be displayed: drop-area zone or list of dropped files.\n   */\n  shouldShowFilesList(): boolean {\n    return (\n      this.alwaysShow &&\n      !this.isFilesArrayEmpty() &&\n      !this.hasEmptyFiles() &&\n      !this.isTooManyFiles()\n    );\n  }\n\n  /**\n   * Triggered when file is picked over web application.\n   */\n  stopDragging(): void {\n    document.removeEventListener('dragover', this.preventDefault);\n    document.removeEventListener('drop', this.preventDefault);\n    this.isOver = false;\n  }\n\n  /**\n   * Delete files already dropped files.\n   */\n  onDelete() {\n    delete this.files;\n    delete this.filesNameString;\n    this.clearErrors();\n    this.dropped.emit(undefined);\n    this.onChange(undefined);\n  }\n\n  onChange: (value: any) => void = _ => undefined;\n  onTouched: () => void = () => undefined;\n\n  writeValue(value: any) {\n    this.files = value;\n    if (!value) {\n      this.onDelete();\n    }\n    this.cd.detectChanges();\n  }\n  registerOnChange(fn: any) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn: any) {\n    this.onTouched = fn;\n  }\n\n  private onFilesSelected(files: FileList) {\n    this.files = files;\n    this.filesNameString = this.getFilesNamesAsString(files);\n    this.errors = false;\n    if (!this.isFilesArrayEmpty() && !this.isTooManyFiles()) {\n      if (this.hasEmptyFiles()) {\n        this.errors = true;\n        this.errorMessage = gettext('File must not be empty, select another one.');\n      } else {\n        const droppedFiles: DroppedFile[] = this.compose(files);\n        this.dropped.emit(droppedFiles);\n        this.onChange(droppedFiles);\n      }\n    } else {\n      this.errors = true;\n      this.errorMessage = gettext('Too many files selected.');\n    }\n  }\n\n  private getFilesNamesAsString(files: FileList): string {\n    return map(files, ({ name }) => name).join(', ');\n  }\n\n  private isFilesArrayEmpty() {\n    return get(this, 'files.length', 0) === 0;\n  }\n\n  private isTooManyFiles() {\n    return get(this, 'files.length', 0) > this.maxAllowedFiles;\n  }\n\n  private hasEmptyFiles() {\n    let result = true;\n    if (!this.isFilesArrayEmpty()) {\n      result = this.isAnyFileEmpty();\n    }\n    return result;\n  }\n\n  private isAnyFileEmpty(): boolean {\n    return some(Array.from(this.files), ['size', 0]);\n  }\n\n  private clearErrors() {\n    delete this.errorMessage;\n    this.errors = false;\n  }\n\n  private preventDefault($event?) {\n    if ($event) {\n      $event.preventDefault();\n    }\n  }\n\n  private compose(files: FileList): DroppedFile[] {\n    return Array.from(files).map(file => ({\n      file,\n      readAsJson: async () => JSON.parse(await this.read(file, ReadAsType.TEXT)),\n      readAsText: async () => this.read(file, ReadAsType.TEXT),\n      readAsArrayBuffer: async () => this.read(file, ReadAsType.ARRAY_BUFFER),\n      readAsBinaryString: async () => this.read(file, ReadAsType.BINARY_STRING),\n      readAsDataURL: async () => this.read(file, ReadAsType.DATA_URL)\n    }));\n  }\n\n  private async read(file, type: ReadAsType): Promise<string> {\n    return new Promise<string>((resolve, reject) => {\n      const reader = new FileReader();\n      switch (type) {\n        case ReadAsType.TEXT: {\n          reader.readAsText(file);\n          break;\n        }\n        case ReadAsType.ARRAY_BUFFER: {\n          reader.readAsArrayBuffer(file);\n          break;\n        }\n        case ReadAsType.BINARY_STRING: {\n          reader.readAsBinaryString(file);\n          break;\n        }\n        case ReadAsType.DATA_URL: {\n          reader.readAsDataURL(file);\n          break;\n        }\n      }\n      reader.onload = () => this.onLoad(reader, resolve, reject);\n    });\n  }\n\n  private onLoad(reader, resolve, reject) {\n    if (reader.readyState !== 2) {\n      return;\n    }\n    if (reader.error) {\n      reject(reader.error);\n    }\n    resolve(reader.result);\n  }\n}\n\nexport interface DroppedFile {\n  file: File;\n  readAsText();\n  readAsArrayBuffer();\n  readAsBinaryString();\n  readAsDataURL();\n  readAsJson();\n}\n\nenum ReadAsType {\n  TEXT,\n  DATA_URL,\n  ARRAY_BUFFER,\n  BINARY_STRING\n}\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\nimport { LoginService } from '../login/login.service';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginViews } from '../login/login.model';\nimport { ICredentials, UserService } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-provide-phone-number',\n  templateUrl: './provide-phone-number.component.html'\n})\nexport class ProvidePhoneNumberComponent {\n  @Input() credentials: ICredentials;\n  @Output() onCancel = new EventEmitter();\n  @Output() onChangeView = new EventEmitter();\n\n  phoneNumber: string;\n  requestInProgress = false;\n  private readonly sendTfa: string = '0';\n\n  constructor(\n    public loginService: LoginService,\n    public alert: AlertService,\n    private userService: UserService\n  ) {}\n\n  async save() {\n    try {\n      this.requestInProgress = true;\n      await this.userService.savePhoneNumber(this.phoneNumber);\n      await this.sendTFASms();\n      this.onChangeView.emit({\n        view: LoginViews.SmsChallenge,\n        credentials: this.credentials\n      });\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.requestInProgress = false;\n    }\n  }\n\n  private async sendTFASms() {\n    try {\n      await this.userService.verifyTFACode(this.sendTfa);\n    } catch (e) {\n      if (e.res.status === 403) {\n        this.loginService.cleanMessages();\n        this.loginService.addSuccessMessage('send_sms');\n      } else {\n        throw e;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { PasswordCheckListComponent } from './password-check-list.component';\nimport { PasswordConfirm } from './password-confirm.directive';\nimport { PasswordStrengthCheckerService } from './password-strength-checker.service';\nimport { PasswordStrengthComponent } from './password-strength.component';\nimport { NewPasswordComponent } from './new-password.component';\nimport { PasswordConfirmModalComponent } from './password-confirm-modal.component';\nimport { ModalModule } from '../modal/modal.module';\nimport { FormsModule } from '../forms/forms.module';\nimport { TotpChallengeComponent } from './totp-challenge.component';\nimport { SmsChallengeComponent } from './sms-challenge.component';\nimport { TotpSetupComponent } from './totp-setup.component';\nimport { PasswordService } from './password.service';\nimport { QRCodeModule } from 'angularx-qrcode';\nimport { ProvidePhoneNumberComponent } from './provide-phone-number.component';\n\n/**\n * The angular module definition for new password.\n * @exports PasswordStrengthComponent\n * @exports PasswordCheckListComponent\n * @exports PasswordConfirm\n * @exports NewPasswordComponent\n * @exports PasswordConfirmModalComponent\n */\n@NgModule({\n  declarations: [\n    TotpChallengeComponent,\n    PasswordConfirm,\n    PasswordStrengthComponent,\n    PasswordCheckListComponent,\n    NewPasswordComponent,\n    PasswordConfirmModalComponent,\n    SmsChallengeComponent,\n    TotpSetupComponent,\n    ProvidePhoneNumberComponent\n  ],\n  imports: [FormsModule, TooltipModule, CommonModule, ModalModule, QRCodeModule],\n  exports: [\n    TotpChallengeComponent,\n    PasswordStrengthComponent,\n    PasswordCheckListComponent,\n    PasswordConfirm,\n    NewPasswordComponent,\n    PasswordConfirmModalComponent,\n    SmsChallengeComponent,\n    TotpSetupComponent,\n    ProvidePhoneNumberComponent\n  ],\n  entryComponents: [PasswordConfirmModalComponent],\n  providers: [PasswordStrengthCheckerService, PasswordService]\n})\nexport class AuthenticationModule {}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { IUser, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-user-totp-revoke',\n  templateUrl: './user-totp.component.html'\n})\nexport class UserTotpRevokeComponent {\n  @Input() user: IUser;\n  @Output('revoke') revokeEmitter = new EventEmitter<undefined>();\n  constructor(\n    private users: UserService,\n    private alert: AlertService,\n  ) { }\n\n  async revoke() {\n    try {\n      await this.users.totpRevokeSecret(this.user);\n      this.alert.success(gettext('User TOTP secret revoked.'));\n      this.revokeEmitter.next();\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { ModalModule } from '../modal/modal.module';\nimport { UserMenuItemComponent } from './user-menu-item.component';\nimport { UserEditModalComponent } from './user-edit-modal.component';\nimport { UserEditComponent } from './user-edit.component';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { UserMenuOutletComponent } from './user-menu-outlet.component';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { UserMenuService } from './user-menu.service';\nimport { AlertModule } from '../alert/alert.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '../forms/forms.module';\nimport { UserTotpSetupComponent } from './user-totp-setup.component';\nimport { UserTotpRevokeComponent } from './user-totp-revoke.component';\n\n/**\n * The angular module definition for the user menu.\n * @exports UserMenuComponent\n * @exports UserMenuItemComponent\n * @exports UserEditComponent\n * @exports UserEditModalComponent\n */\n@NgModule({\n  declarations: [\n    UserMenuOutletComponent,\n    UserEditComponent,\n    UserEditModalComponent,\n    UserMenuItemComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    ModalModule,\n    BsDropdownModule,\n    AuthenticationModule,\n    AlertModule,\n    RouterModule,\n    TooltipModule.forRoot(),\n    PopoverModule\n  ],\n  exports: [\n    UserMenuOutletComponent,\n    UserMenuItemComponent,\n    UserEditComponent,\n    UserEditModalComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent\n  ],\n  entryComponents: [\n    UserEditModalComponent,\n    UserTotpSetupComponent,\n    UserTotpRevokeComponent\n  ]\n})\nexport class UserModule { }\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ActionModule } from '../action/action.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\nimport { CommonModule } from '../common/common.module';\nimport { NavigatorModule } from '../navigator/navigator.module';\nimport { ProductExperienceModule } from '../product-experience/product-experience.module';\nimport { SearchModule } from '../search/search.module';\nimport { UserModule } from '../user/user.module';\nimport { AppIconComponent } from './application/app-icon.component';\nimport { AppSwitcherComponent } from './application/app-switcher.component';\nimport { HeaderBarComponent } from './header-bar/header-bar.component';\nimport { RightDrawerComponent } from './right-drawer/right-drawer.component';\nimport { TitleOutletComponent } from './title/title-outlet.component';\nimport { TitleComponent } from './title/title.component';\n\n/**\n * The angular module definition for the header of the application.\n * @exports HeaderBarComponent\n * @exports TitleComponent\n * @exports TitleOutletComponent\n * @exports AppIconComponent\n * @exports AppSwitcherComponent\n */\n@NgModule({\n  declarations: [\n    TitleComponent,\n    HeaderBarComponent,\n    TitleOutletComponent,\n    AppIconComponent,\n    AppSwitcherComponent,\n    RightDrawerComponent\n  ],\n  imports: [\n    BsDropdownModule,\n    UserModule,\n    SearchModule,\n    CommonModule,\n    ActionModule,\n    BreadcrumbModule,\n    NavigatorModule,\n    ProductExperienceModule\n  ],\n  exports: [\n    HeaderBarComponent,\n    TitleComponent,\n    TitleOutletComponent,\n    AppIconComponent,\n    AppSwitcherComponent,\n    RightDrawerComponent\n  ]\n})\nexport class HeaderModule {}\n","import { Component, OnInit, Output, Input, EventEmitter } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { PasswordService } from '../authentication/password.service';\nimport { IResetPassword, ICredentials, UserService } from '@c8y/client';\nimport { OptionsService } from '../common/options.service';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-change-password',\n  templateUrl: './change-password.component.html',\n  styles: []\n})\nexport class ChangePasswordComponent implements OnInit {\n  @Input() credentials: ICredentials;\n  @Output() onChangeView = new EventEmitter();\n\n  passwordPattern = /^[a-zA-Z0-9`~!@#$%^&*()_|+\\-=?;:'\",.<>{}[\\]\\\\/]{8,32}$/;\n  isLoading = false;\n  model = {\n    tenantId: '',\n    email: '',\n    newPassword: '',\n    newPasswordConfirm: ''\n  };\n  emailReadOnly = false;\n  passwordStrengthEnforced = false;\n\n  private TOKEN_PARAM = 'token';\n  private EMAIL_PARAM = 'email';\n\n  constructor(\n    public loginService: LoginService,\n    private users: UserService,\n    private passwordStrengthCheckerService: PasswordService,\n    private options: OptionsService,\n    private alert: AlertService\n  ) { }\n\n  async ngOnInit() {\n    this.model.tenantId = this.loginService.getTenant();\n    this.model.email = this.options.get(this.EMAIL_PARAM, '');\n    this.emailReadOnly = !!this.model.email;\n    this.passwordStrengthEnforced = await this.loginService.getPasswordStrengthEnforced();\n  }\n\n  async changePassword() {\n    const passwordStrengthColor: any = this.passwordStrengthCheckerService.getStrengthColor(\n      this.model.newPassword\n    );\n    const resetPassword: IResetPassword = {\n      token: this.credentials.token,\n      email: this.model.email,\n      newPassword: this.model.newPassword,\n      passwordStrength: passwordStrengthColor.passwordStrength\n    };\n    try {\n      this.isLoading = true;\n      const { res } = await this.users.resetPassword(resetPassword, this.model.tenantId);\n      if (res.status === 200) {\n        this.loginService.addSuccessMessage('password_changed');\n        this.credentials.token = undefined;\n        this.options.set(this.TOKEN_PARAM, undefined);\n        this.onChangeView.emit({ view: LoginViews.Credentials });\n      }\n    } catch (e) {\n      this.alert.addServerFailure(e);\n    } finally {\n      this.loginService.reset();\n      this.isLoading = false;\n    }\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { ICredentials } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { AppStateService } from '../common/ui-state.service';\nimport { gettext } from '../i18n/gettext';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-credentials',\n  templateUrl: './credentials.component.html',\n  styles: []\n})\nexport class CredentialsComponent implements OnInit {\n  @Output() onChangeView = new EventEmitter();\n\n  LOGIN_VIEWS = LoginViews;\n  model: ICredentials = {};\n  isLoading: boolean = false;\n  showLoginForm: boolean = false;\n  showBasicAuth: boolean = false;\n  oauthOptions: any = {};\n\n  private readonly PASSWORD_RESET_HEADER_NAME = 'passwordresettoken';\n  private readonly NO_PHONE_HEADER_NAME = 'NoPhoneHeader';\n\n  constructor(\n    public loginService: LoginService,\n    public alert: AlertService,\n    public ui: AppStateService\n  ) {}\n\n  ngOnInit() {\n    const { oauthOptions, loginMode } = this.loginService;\n    this.model.tenant = this.loginService.getTenant();\n    this.showLoginForm =\n      typeof loginMode.visibleOnLoginPage === 'undefined' || loginMode.visibleOnLoginPage;\n    this.showBasicAuth = loginMode.type === 'BASIC';\n    this.oauthOptions = oauthOptions;\n  }\n\n  redirectToOauth() {\n    this.loginService.redirectToOauth();\n  }\n\n  /**\n   * Allows to login into the application using basic auth.\n   * If successful logged in the client is set in shared/cumulocity.service.ts\n   */\n  async login() {\n    try {\n      this.isLoading = true;\n      const basicAuth = this.loginService.useBasicAuth(this.model);\n      await this.loginService.login(basicAuth, this.model);\n    } catch (e) {\n      if (e.res && e.res.headers && e.res.headers.get(this.PASSWORD_RESET_HEADER_NAME)) {\n        this.handlePasswordReset(e.res);\n      } else if (e.res && e.res.status === 401 && /pin/i.test(e.data.message)) {\n        this.handleSmsChallenge(e.data.message);\n      } else if (e.res && e.res.status === 401 && /TOTP/i.test(e.data.message)) {\n        this.handleTotpChallenge(e.data.message);\n      } else if (\n        e.res &&\n        e.res.headers &&\n        e.res.headers.get(this.NO_PHONE_HEADER_NAME) &&\n        !this.loginService.isSupportUser(this.model)\n      ) {\n        this.handleNoPhoneNumberProvided();\n      } else {\n        this.loginService.generateOauthToken(this.model);\n        this.loginService.reset();\n        this.alert.addServerFailure(e);\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  private handlePasswordReset(e: any) {\n    this.alert.removeLastDanger();\n    this.model.token = e.headers.get(this.PASSWORD_RESET_HEADER_NAME);\n    this.onChangeView.emit({ view: LoginViews.ChangePassword, credentials: this.model });\n  }\n\n  private handleTotpChallenge(message) {\n    if (/TOTP setup required/i.test(message)) {\n      this.onChangeView.emit({ view: LoginViews.TotpSetup, credentials: this.model });\n    } else {\n      this.onChangeView.emit({ view: LoginViews.TotpChallenge, credentials: this.model });\n    }\n  }\n\n  private handleSmsChallenge(message: string) {\n    if (/pin has already been generated/i.test(message)) {\n      this.alert.warning(\n        gettext(\n          'The verification code was already sent. For a new verification code, please click on the link above.'\n        )\n      );\n    }\n    this.alert.removeLastDanger();\n    this.onChangeView.emit({ view: LoginViews.SmsChallenge, credentials: this.model });\n  }\n\n  private handleNoPhoneNumberProvided() {\n    this.onChangeView.emit({ view: LoginViews.ProvidePhoneNumber, credentials: this.model });\n    this.alert.warning(\n      gettext(\n        'Two-factor authentication has been turned on for this account. Provide your phone number above to save it in your user profile and start receiving verification codes via SMS.'\n      )\n    );\n  }\n}\n","import { Component, Input, OnInit, HostBinding, HostListener, ViewChild } from '@angular/core';\nimport { ICredentials } from '@c8y/client';\nimport { LoginService } from './login.service';\nimport { OptionsService } from '../common/options.service';\nimport { LoginViews } from './login.model';\nimport { AlertService } from '../alert/alert.service';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-login',\n  templateUrl: './login.component.html',\n  styles: []\n})\nexport class LoginComponent implements OnInit {\n  currentView: LoginViews = LoginViews.None;\n  LOGIN_VIEWS = LoginViews;\n\n  disabled = false;\n\n  @Input() name: string;\n\n  credentials: ICredentials = {};\n  displayAlerts: boolean = false;\n  private TOKEN_PARAM = 'token';\n\n  /**\n   * Just DI.\n   */\n  constructor(\n    public loginService: LoginService,\n    private options: OptionsService,\n    private alert: AlertService\n  ) {}\n\n  ngOnInit() {\n    const token = this.getResetPasswordToken();\n    if (this.loginService.isFirstLogin) {\n      if (!token) {\n        this.loginAutomatically();\n      } else {\n        this.credentials.token = token;\n        this.reset();\n      }\n    }\n    this.loginService.isFirstLogin = false;\n  }\n\n  handleLoginTemplate(event) {\n    this.currentView = event.view;\n    this.credentials = event.credentials || {};\n  }\n\n  @HostListener('keyup', ['$event']) onkeyup(event: KeyboardEvent) {\n    if (event.key !== 'Enter') {\n      this.loginService.cleanMessages();\n    }\n  }\n\n  reset() {\n    this.loginService.reset();\n    this.setView();\n    this.loginService.cleanMessages();\n  }\n\n  private async loginAutomatically() {\n    try {\n      await this.loginService.login();\n    } catch (e) {\n      const loginMode = this.loginService.loginMode.type;\n      if (loginMode === 'OAUTH2') {\n        this.loginService.redirectToOauth();\n      } else {\n        this.reset();\n        if (loginMode === 'OAUTH2_INTERNAL' && window.location.protocol !== 'https:') {\n          this.alert.danger(gettext('Current login mode only supports HTTPS.'));\n        } else if (e.res && e.res.status === 403) {\n          this.alert.addServerFailure(e);\n        }\n      }\n    }\n  }\n\n  private setView() {\n    if (this.credentials && this.credentials.token) {\n      this.handleLoginTemplate({ view: LoginViews.ChangePassword, credentials: this.credentials });\n    } else {\n      this.handleLoginTemplate({ view: LoginViews.Credentials });\n    }\n  }\n\n  private getResetPasswordToken() {\n    const token = this.options.get(this.TOKEN_PARAM);\n    if (token) {\n      this.options.set(this.TOKEN_PARAM, undefined); // only use once\n    }\n    return token;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { UserService } from '@c8y/client';\nimport { LoginService } from './login.service';\nimport { LoginViews } from './login.model';\n\n@Component({\n  selector: 'c8y-recover-password',\n  templateUrl: './recover-password.component.html',\n  styles: []\n})\n\nexport class RecoverPasswordComponent implements OnInit {\n\n  @Output() onChangeView = new EventEmitter();\n  LOGIN_VIEWS = LoginViews;\n  isLoading = false;\n  model = {\n    email: '',\n    tenantId: ''\n  };\n\n  constructor(\n    private users: UserService,\n    public loginService: LoginService) {\n  }\n\n  ngOnInit() {\n    this.model.tenantId = this.loginService.getTenant();\n  }\n\n  async resetPassword() {\n    try {\n      this.isLoading = true;\n      const { res } = await this.users.sendPasswordResetMail(this.model.email, this.model.tenantId);\n      if (res.status === 200) {\n        this.loginService.addSuccessMessage('password_reset_requested');\n      }\n    } finally {\n      this.loginService.reset();\n      this.isLoading = false;\n    }\n  }\n\n}\n","import { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport { ICredentials, UserService } from '@c8y/client';\nimport { AlertService } from '../alert/alert.service';\nimport { LoginService } from './login.service';\nimport { LoginViews } from './login.model';\nimport { gettext } from '../i18n/gettext';\n\n@Component({\n  selector: 'c8y-totp-auth',\n  templateUrl: './totp-auth.component.html'\n})\nexport class TotpAuthComponent implements OnInit {\n  @Input() credentials: ICredentials;\n  @Input() view: LoginViews;\n  @Output() onCancel = new EventEmitter();\n  LOGIN_VIEWS = LoginViews;\n  loading = false;\n  hasError = false;\n\n  get isSetup() {\n    return this.view === LoginViews.TotpSetup;\n  }\n\n  constructor(\n    public loginService: LoginService,\n    private userService: UserService,\n    private alert: AlertService\n  ) {}\n\n  /**\n   * In case of a setup we need the user to be authorized\n   * first.\n   */\n  async ngOnInit() {\n    if (this.view === this.LOGIN_VIEWS.TotpSetup) {\n      await this.loginService.switchLoginMode(this.credentials);\n    }\n  }\n\n  async onTotpSuccess(code) {\n    try {\n      this.loading = true;\n      this.hasError = false;\n      this.credentials.tfa = code;\n      if (this.isSetup) {\n        await this.userService.activateTotp();\n      }\n      await this.loginService.switchLoginMode(this.credentials);\n      await this.loginService.verifyAppAccess();\n      await this.loginService.authFulfilled();\n    } catch (e) {\n      this.alert.removeLastDanger();\n      if (e.data && e.data.message === 'Access is denied') {\n        this.alert.addServerFailure(e);\n      }\n      if (e.data && e.data.message === 'Authentication failed! : User account is locked') {\n        this.alert.warning(gettext('Authentication failed due to: user account is locked.'));\n      } else {\n        this.hasError = true;\n      }\n    } finally {\n      this.loading = false;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PasswordService } from '../authentication';\nimport { PasswordStrength } from '@c8y/client';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrengthValidatorService {\n\n  constructor(private passwordService: PasswordService) {\n  }\n\n  isStrong(password: string): boolean {\n    return this.isPasswordGreen(this.passwordService.getStrengthColor(password).passwordStrength);\n  }\n\n  private isPasswordGreen(strength: PasswordStrength) {\n    return strength as PasswordStrength === PasswordStrength.GREEN as PasswordStrength;\n  }\n}\n","import { Directive, Input } from '@angular/core';\nimport { AbstractControl, NG_VALIDATORS, ValidationErrors, Validator } from '@angular/forms';\nimport { StrengthValidatorService } from './strength-validator-service';\n\n@Directive({\n  selector: '[passwordStrengthEnforced]',\n  providers: [{ provide: NG_VALIDATORS, useExisting: PasswordStrengthValidatorDirective, multi: true }]\n})\nexport class PasswordStrengthValidatorDirective implements Validator {\n\n  private forced: boolean;\n\n  @Input() set passwordStrengthEnforced(value) {\n    this.forced = value;\n  }\n\n  constructor(\n    public passwordService: StrengthValidatorService) {\n  }\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    const strengthFulfilled = this.passwordService.isStrong(control.value || '');\n    const enforcementForcedAndNotFulfilled = this.forced && !strengthFulfilled;\n    return enforcementForcedAndNotFulfilled ? { passwordStrength: true } : null;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FormsModule as C8yFormsModule } from '../forms/forms.module';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\nimport { ChangePasswordComponent } from './change-password.component';\nimport { CredentialsComponent } from './credentials.component';\nimport { LoginComponent } from './login.component';\nimport { LoginService } from './login.service';\nimport { RecoverPasswordComponent } from './recover-password.component';\nimport { AuthenticationModule } from '../authentication/authentication.module';\nimport { AlertModule } from '../alert/alert.module';\nimport { TotpAuthComponent } from './totp-auth.component';\nimport { PasswordStrengthValidatorDirective } from './password-strength-validator.directive';\n\n/**\n * The angular module definition for the login.\n * @exports LoginComponent\n */\n@NgModule({\n  declarations: [\n    LoginComponent,\n    RecoverPasswordComponent,\n    ChangePasswordComponent,\n    CredentialsComponent,\n    TotpAuthComponent,\n    PasswordStrengthValidatorDirective\n  ],\n  imports: [\n    FormsModule,\n    TooltipModule,\n    CommonModule,\n    AuthenticationModule,\n    AlertModule,\n    C8yFormsModule\n  ],\n  exports: [LoginComponent]\n})\nexport class LoginModule {\n  static forRoot() {\n    return {\n      ngModule: LoginModule,\n      providers: LoginModule.providers()\n    };\n  }\n  static providers() {\n    return [LoginService];\n  }\n}\n","import {\n  Component,\n  ViewChild,\n  Input,\n  ViewContainerRef,\n  AfterContentInit,\n  OnDestroy\n} from '@angular/core';\nimport { TabsService } from './tabs.service';\nimport { Tab } from './tab.model';\n\n@Component({\n  selector: 'c8y-tab',\n  template: '<ng-template #tpl><ng-content></ng-content></ng-template>'\n})\nexport class TabComponent implements AfterContentInit, OnDestroy, Tab {\n  @ViewChild('tpl', { static: false }) template: ViewContainerRef;\n  @Input() path: string;\n  @Input() label: string = '';\n  @Input() icon: string;\n  @Input() priority: number;\n  @Input() orientation: 'horizontal' | 'vertical';\n  constructor(private tabs: TabsService) {}\n\n  ngAfterContentInit() {\n    setTimeout(() => this.tabs.add(this as Tab));\n  }\n\n  ngOnDestroy() {\n    this.tabs.remove(this as Tab);\n  }\n}\n","import {\n  Component,\n  Input,\n  HostBinding,\n  Renderer2,\n  ElementRef,\n  OnChanges,\n  ViewChild,\n  OnDestroy,\n  AfterContentInit,\n  AfterContentChecked} from '@angular/core';\nimport { debounceTime } from 'rxjs/operators';\nimport { fromEventPattern, fromEvent, merge, Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { Tab } from './tab.model';\n\n@Component({\n  selector: 'c8y-tabs-outlet,c8y-ui-tabs',\n  templateUrl: './tabs-outlet.component.html',\n})\nexport class TabsOutletComponent implements OnDestroy, AfterContentInit {\n  @Input() tabs: any[] = [];\n  @Input() orientation: 'vertical' | 'horizontal' = 'vertical';\n  @Input() navigatorOpen = false;\n  showLeft: boolean = false;\n  showRight: boolean = false;\n  @HostBinding('class.navigator-open') get isNavigatorOpen() {\n    return this.navigatorOpen;\n  }\n  @HostBinding('class.page-tabs') get hasTabs() {\n    let visibleTabs = [];\n    if (this.tabs) {\n      visibleTabs = this.tabs.filter(tab => tab.hide !== true);\n    }\n    return visibleTabs.length;\n  }\n  @HostBinding('class.page-tabs-horizontal') get isHorizontal() {\n    return this.orientation === 'horizontal';\n  }\n  @HostBinding('class.page-tabs-vertical') get isVertical() {\n    return this.orientation !== 'horizontal';\n  }\n  @ViewChild('container', {read: ElementRef, static: true}) private container: ElementRef;\n  @ViewChild('left', {read: ElementRef, static: false}) private leftBtn: ElementRef;\n  @ViewChild('right', {read: ElementRef, static: false}) private rightBtn: ElementRef;\n  @ViewChild('tabsContainer', {read: ElementRef, static: false}) private tabsContainer: ElementRef;\n  private scrollSubscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  ngOnDestroy() {\n    if (this.scrollSubscription) {\n      this.scrollSubscription.unsubscribe();\n    }\n  }\n\n  ngAfterContentInit() {\n    if (this.orientation === 'horizontal') {\n      this.scrollSubscribe();\n    }\n\n  }\n\n  isActive(tab: Tab) {\n    if (tab && tab.path) {\n      return this.router.isActive(tab.path, false);\n    } else {\n      return false;\n    }\n  }\n\n  navigateTo(path) {\n    this.router.navigate([path]);\n  }\n\n  scroll(direction: 'right' | 'left' = 'right') {\n    const { widthScroll, width, scrollLeft } = this.getDimensions();\n    const multiplier = direction === 'left' ? -1 : 1;\n\n    let targetScroll = scrollLeft + width * multiplier;\n    if (targetScroll < 0) {\n      targetScroll = 0;\n    }\n    if (targetScroll > widthScroll - width) {\n      targetScroll = widthScroll - width;\n    }\n    // TODO: we should animate this\n    this.container.nativeElement.scrollLeft = targetScroll;\n  }\n\n  private scrollSubscribe() {\n    let unlisten;\n    this.scrollSubscription = merge(\n      fromEvent(this.container.nativeElement, 'scroll'),\n      fromEventPattern(\n        (handler: any) => {\n          unlisten = this.renderer.listen('window', 'resize', handler);\n        },\n        () => unlisten()\n      )\n    ).pipe(\n      debounceTime(250)\n    ).subscribe(() => this.updateScroll());\n  }\n\n  private updateScroll() {\n    const { widthScroll, width, scrollLeft } = this.getDimensions();\n    this.showLeft = !!scrollLeft;\n    this.showRight = widthScroll > width + scrollLeft;\n  }\n\n  private getDimensions() {\n    const elTabs = this.tabsContainer.nativeElement;\n    const el = this.container.nativeElement;\n    const widthScroll =   elTabs.scrollWidth;\n    const width = el.clientWidth;\n    const scrollLeft = el.scrollLeft;\n    return { widthScroll, width, scrollLeft };\n  }\n}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Tab } from './tab.model';\nimport { TabsService } from './tabs.service';\n\n/**\n * Register this component on the parent route of a view with multiple tabs where the first tab\n * is displayed only conditionally.\n *\n * Given the following routes leading to a single view with multiple tabs:<br>\n * /yourpath/tab-a -> Tab A<br>\n * /yourpath/tab-b -> Tab B<br>\n * /yourpath/tab-c -> Tab C\n *\n * Your components will be registered like\n * ```typescript\n * export const routes: Route[] = [\n *   {\n *     path: 'yourpath/tab-a',\n *     component: TabAComponent\n *   },\n *   {\n *     path: 'yourpath/tab-b',\n *     component: TabBComponent\n *   },\n *   {\n *     path: 'yourpath/tab-c',\n *     component: TabCComponent\n *   }\n * ];\n * ```\n *\n * In the simple case where Tab A is the first tab on the view and it is always displayed, you can register\n * your view in the navigation with a similar navigator node:\n *\n * ```typescript\n * new NavigatorNode({\n *   label: gettext('My tabs'),\n *   path: 'yourpath/tab-a',\n *   icon: 'gears',\n *   parent: gettext('Some parent node'),\n *   priority: 100\n * })\n * ```\n *\n * This will navigate to the first tab's component and activate the first tab in the view.\n *\n * In case Tab A is displayed conditionally you cannot link it from a navigator node since it may not be available in some cases.\n * In this situation `ConditionalTabsOutletComponent` comes handy as it will forward users to the first available tab on your view:\n *\n * ```typescript\n * new NavigatorNode({\n *   label: gettext('My tabs'),\n *   path: 'yourpath', // note that here we use only the parent route\n *   icon: 'gears',\n *   parent: gettext('Some parent node'),\n *   priority: 100\n * })\n *\n * [...]\n *\n * export const routes: Route[] = [\n *   {\n *     path: 'yourpath',\n *     component: ConditionalTabsOutletComponent // we register ConditionalTabsOutletComponent for the parent path\n *   },\n *   {\n *     path: 'yourpath/tab-a',\n *     component: TabAComponent\n *   },\n *   {\n *     path: 'yourpath/tab-b',\n *     component: TabBComponent\n *   },\n *   {\n *     path: 'yourpath/tab-c',\n *     component: TabCComponent\n *   }\n * ];\n * ```\n */\n@Component({\n  selector: 'c8y-conditional-tabs-outlet',\n  template: `\n    <router-outlet></router-outlet>\n  `\n})\nexport class ConditionalTabsOutletComponent implements OnInit, OnDestroy {\n  private endSubscriptions$: Subject<void> = new Subject();\n\n  constructor(private tabsService: TabsService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.tabsService.firstTab$.pipe(takeUntil(this.endSubscriptions$)).subscribe((tab: Tab) => {\n      if (tab) {\n        this.router.navigateByUrl(tab.path, { replaceUrl: true });\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.endSubscriptions$.next();\n    this.endSubscriptions$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CommonModule } from '../common/common.module';\nimport { TabComponent } from './tab.component';\nimport { TabsOutletComponent } from './tabs-outlet.component';\nimport { ConditionalTabsOutletComponent } from './conditional-tabs-outlet.component';\n\n@NgModule({\n  declarations: [\n    ConditionalTabsOutletComponent,\n    TabsOutletComponent,\n    TabComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild([])\n  ],\n  exports: [\n    ConditionalTabsOutletComponent,\n    TabsOutletComponent,\n    TabComponent\n  ]\n})\nexport class TabsModule {}\n","import { Component, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Status, StatusType } from '../../../common/status.model';\nimport { gettext } from '../../../i18n/gettext';\nimport { ConfirmModalComponent } from '../../../modal/modal-confirm.component';\nimport { ModalLabels } from '../../../select-modal/select-modal.model';\nimport { Cookie, CookiePreferences } from '../cookie-banner.model';\nimport { CookieBannerService } from '../cookie-banner.service';\n\n@Component({\n  selector: 'c8y-cookie-banner-preferences-modal',\n  templateUrl: './cookie-banner-preferences-modal.component.html'\n})\nexport class CookieBannerPreferencesModalComponent {\n  @ViewChild('modalRef', { static: false }) modalRef: ConfirmModalComponent;\n  closeSubject: Subject<CookiePreferences> = new Subject();\n  title = gettext('Cookie preferences');\n  labels: ModalLabels = { ok: gettext('Save settings'), cancel: gettext('Cancel') };\n  status: StatusType = Status.INFO;\n  configCookiePreferences: CookiePreferences;\n  configCookiePreferencesList: Cookie[];\n\n  constructor(private cookieBannerService: CookieBannerService) {}\n\n  ngOnInit() {\n    this.configCookiePreferencesList = this.cookieBannerService.transformCookiePreferencesToList(\n      this.configCookiePreferences\n    );\n  }\n\n  async ngAfterViewInit() {\n    try {\n      await this.modalRef.result;\n      this.onClose();\n    } catch (error) {\n      this.onDismiss();\n    }\n  }\n\n  onClose() {\n    const cookiePref: CookiePreferences = this.cookieBannerService.transformCookiePreferencesListToCookiePreferences(\n      this.configCookiePreferencesList\n    );\n\n    this.closeSubject.next(cookiePref);\n    this.closeSubject.complete();\n  }\n\n  onDismiss() {\n    this.closeSubject.next(undefined);\n    this.closeSubject.complete();\n  }\n\n  getCookieDescription(cookieType: 'required' | 'functional' | 'marketing'): string {\n    return this.cookieBannerService.getCookieDescription(cookieType);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { BsModalService } from 'ngx-bootstrap/modal';\nimport { CookieBannerPreferencesModalComponent } from './cookie-banner-preferences-modal/cookie-banner-preferences-modal.component';\nimport { CookieBannerSettings, CookiePreferences } from './cookie-banner.model';\nimport { CookieBannerService } from './cookie-banner.service';\n\n@Component({\n  selector: 'c8y-cookie-banner',\n  templateUrl: './cookie-banner.component.html'\n})\nexport class CookieBannerComponent implements OnInit {\n  settings: CookieBannerSettings;\n  showBanner: boolean;\n  shouldDisable: boolean = false;\n  cookiePreferences: CookiePreferences;\n  constructor(\n    private bsModalService: BsModalService,\n    private cookieBannerService: CookieBannerService\n  ) {}\n\n  ngOnInit() {\n    this.settings = this.cookieBannerService.getCookieBannerSettings();\n    this.cookiePreferences = this.cookieBannerService.getCookiePreferencesConfig();\n    this.shouldShowCookieBanner();\n  }\n\n  onConfigurePreferences() {\n    this.disableButtons(true);\n\n    const initialState = {\n      configCookiePreferences: this.cookiePreferences\n    };\n\n    const modalRef = this.bsModalService.show(CookieBannerPreferencesModalComponent, {\n      initialState\n    });\n\n    modalRef.content.closeSubject.subscribe((userCookiePreferences: CookiePreferences) => {\n      this.disableButtons(false);\n      if (userCookiePreferences) {\n        this.cookieBannerService.setCookies(userCookiePreferences);\n        this.setCookieBannerVisibility(false);\n      }\n    });\n  }\n\n  acceptCookies() {\n    this.cookieBannerService.setCookies(\n      this.cookiePreferences || { required: true }\n    );\n    this.setCookieBannerVisibility(false);\n  }\n\n  private shouldShowCookieBanner() {\n    this.setCookieBannerVisibility(this.cookieBannerService.shouldShowCookieBanner());\n  }\n\n  private disableButtons(shouldDisable: boolean) {\n    this.shouldDisable = shouldDisable;\n  }\n\n  private setCookieBannerVisibility(shouldShow: boolean) {\n    this.showBanner = shouldShow;\n    this.cookieBannerService.isCookieBannerShowed$.next(shouldShow);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\nimport { AlertModule } from '../alert/alert.module';\nimport { CommonModule } from '../common/common.module';\nimport { HeaderModule } from '../header/header.module';\nimport { LoginModule } from '../login/login.module';\nimport { ModalModule } from '../modal/modal.module';\nimport { NavigatorModule } from '../navigator/navigator.module';\nimport { TabsModule } from '../tabs/tabs.module';\nimport { BootstrapComponent } from './bootstrap.component';\nimport { CookieBannerPreferencesModalComponent } from './cookie-banner/cookie-banner-preferences-modal/cookie-banner-preferences-modal.component';\nimport { CookieBannerComponent } from './cookie-banner/cookie-banner.component';\nimport { CookieBannerService } from './cookie-banner/cookie-banner.service';\n\n/**\n * The module which allows to bootstrap a custom application.\n * Use it as `bootstrap: []` component in your main app module\n * or as `<c8y-bootstrap>` in your main app.\n */\n@NgModule({\n  declarations: [BootstrapComponent, CookieBannerComponent, CookieBannerPreferencesModalComponent],\n  imports: [\n    FormsModule,\n    CommonModule,\n    HeaderModule,\n    LoginModule,\n    RouterModule,\n    TabsModule,\n    ActionBarModule,\n    AlertModule,\n    NavigatorModule,\n    TooltipModule,\n    ModalModule\n  ],\n  exports: [BootstrapComponent],\n  entryComponents: [BootstrapComponent, CookieBannerPreferencesModalComponent],\n  providers: [CookieBannerService]\n})\nexport class BootstrapModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { DropAreaComponent } from './drop-area.component';\n\n/**\n * The angular module definition for a drop-area.\n * @exports DropAreaComponent\n */\n@NgModule({\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    DropAreaComponent,\n  ],\n  declarations: [\n    DropAreaComponent,\n  ]\n})\nexport class DropAreaModule { }\n","import { Route as ngRoute } from '@angular/router';\nimport { ExtensionFactory } from '../common/extension-hooks';\nimport { Tab } from '../tabs/tab.model';\n\nexport enum ViewContext {\n  Device = 'device/:id',\n  Group = 'group/:id',\n  User = 'users/:id',\n  Application = 'applications/:id',\n  SubscribedApplications = 'subscribedApplications/:id',\n  Tenant = 'tenants/:id',\n  Report = 'reports/:id'\n}\n\nexport type Route = Partial<ngRoute> & {\n  path: string;\n  label?: string;\n  icon?: string;\n  context?: ViewContext;\n  priority?: number;\n\n  /**\n   * Allow to emit multiple tabs on one context route.\n   */\n  tabs?: Tab[];\n};\n\nexport type RouteFactory = ExtensionFactory<Route>;\n","import { Component, Output, Input, EventEmitter, ViewChild, OnInit } from '@angular/core';\nimport { DroppedFile, DropAreaComponent } from '../drop-area/drop-area.component';\nimport { PickedFiles } from './file-picker.model';\n\n/**\n * User can upload a binary directly or use an URL.\n *\n * ## Usage Example:\n *\n * ```html\n * <div>\n * <c8y-file-picker [maxAllowedFiles]=\"1\" (onFilesPicked)=\"onFile($event)\">\n * </c8y-file-picker>\n * </div>\n * ```\n */\n\n@Component({\n  selector: 'c8y-file-picker',\n  templateUrl: './file-picker.component.html'\n})\nexport class FilePickerComponent implements OnInit {\n  @ViewChild(DropAreaComponent, { static: true }) dropArea: DropAreaComponent;\n  @Output() onFilesPicked: EventEmitter<PickedFiles> = new EventEmitter();\n  @Input() maxAllowedFiles: number = Infinity;\n  @Input() uploadChoice: 'uploadBinary' | 'uploadUrl' = 'uploadBinary';\n  @Input() fileUrl: string;\n  @Input() fileBinary: DroppedFile;\n\n  droppedFiles: DroppedFile[];\n  private fileToSave: PickedFiles;\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    if (this.fileBinary) {\n      this.droppedFiles = [this.fileBinary];\n    }\n  }\n\n  /**\n   * Triggered by dropped file in component and pass it into drop-area component.\n   */\n  onFileDropped(droppedFiles: DroppedFile[]): void {\n    this.onFilesPicked.emit({\n      droppedFiles\n    });\n  }\n\n  /**\n   * Triggered when user changes upload choice, from upload url to upload binary.\n   */\n  clearInputFromUrl(): void {\n    delete this.fileUrl;\n    this.fileToSave = {\n      url: undefined\n    };\n    this.onFilesPicked.emit(this.fileToSave);\n  }\n\n  /**\n   * Triggered when user changes upload choice, to avoid cumulation of droppedFiles.\n   */\n  clearSelectedFiles(): void {\n    this.dropArea.onDelete();\n    this.fileToSave = {\n      droppedFiles: undefined\n    };\n    this.onFilesPicked.emit(this.fileToSave);\n  }\n\n  /**\n   * Triggered when user puts binary's url to upload.\n   */\n  onFileUrlChange(urlStr): void {\n    this.fileToSave = {\n      url: urlStr\n    };\n    this.onFilesPicked.emit(this.fileToSave);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule as C8yCommonModule } from '../common/common.module';\nimport { FilePickerComponent } from './file-picker.component';\nimport { DropAreaModule } from '../drop-area/drop-area.module';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule as C8yFormsModule } from '../forms/forms.module';\n\n/**\n * The angular module definition for a drop-area.\n * @exports FilePickerComponent\n */\n@NgModule({\n  imports: [\n    C8yFormsModule,\n    CommonModule,\n    DropAreaModule,\n    FormsModule,\n    C8yCommonModule\n  ],\n  exports: [\n    FilePickerComponent,\n  ],\n  declarations: [\n    FilePickerComponent,\n  ]\n})\nexport class FilePickerModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { PickedDates } from './date-picker.model';\n\n@Component({\n  selector: 'c8y-date-picker',\n  templateUrl: './date-picker.component.html'\n})\nexport class DatePickerComponent implements OnInit {\n  @Output() onDateSelected: EventEmitter<PickedDates> = new EventEmitter();\n\n  dateFrom: string;\n  dateTo: string;\n  fgDatePicker: FormGroup;\n\n  ngOnInit() {\n    this.fgDatePicker = new FormGroup({\n      dateFrom: new FormControl(),\n      dateTo: new FormControl()\n    });\n  }\n\n  filter() {\n    this.onDateSelected.emit(this.fgDatePicker.value);\n    this.dateFrom = this.fgDatePicker.get('dateFrom').value;\n    this.dateTo = this.fgDatePicker.get('dateTo').value;\n  }\n\n  clearFilter() {\n    this.fgDatePicker.setValue({\n      dateFrom: null,\n      dateTo: null\n    });\n    this.onDateSelected.emit(null);\n    this.dateFrom = null;\n    this.dateTo = null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule as C8yCommonModule } from '../common/common.module';\nimport { DatePickerComponent } from './date-picker.component';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule as C8yFormsModule } from '../forms/index';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\n\n/**\n * The angular module definition for a date picker - it allows you to pick either one date or a range of two.\n * @exports DatePickerComponent\n */\n@NgModule({\n  imports: [\n    C8yFormsModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BsDropdownModule.forRoot(),\n    BsDatepickerModule.forRoot(),\n    C8yCommonModule\n  ],\n  exports: [DatePickerComponent],\n  declarations: [DatePickerComponent]\n})\nexport class DatePickerModule {}\n","import { Injector, Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router } from '@angular/router';\nimport { from, isObservable, of, Observable } from 'rxjs';\nimport { every, filter, map, mergeMap, toArray, tap, debounceTime } from 'rxjs/operators';\nimport { Tab } from '../tabs/tab.model';\nimport { Route } from './router.models';\n\n@Injectable()\nexport class RouterTabsResolver {\n  constructor(private injector: Injector, private router: Router) {}\n\n  get routerStateSnapshot() {\n    return this.router.routerState.snapshot;\n  }\n\n  resolve(route: ActivatedRouteSnapshot) {\n    const latestChildren = this.router.config.find(r => route.routeConfig.path === r.path).children;\n    return from(latestChildren || []).pipe(\n      mergeMap((child: Route) =>\n        from(this.getGuards(child)).pipe(\n          map((guard: CanActivate) => guard.canActivate(route, this.routerStateSnapshot)),\n          mergeMap((result: any) => {\n            if (isObservable(result)) {\n              return result;\n            }\n            if (result && typeof result.then === 'function') {\n              return from(result);\n            }\n            return of(result);\n          }),\n          tap(result => {\n            if (Array.isArray(result)) {\n              child.tabs = result;\n            }\n          }),\n          every(result => !!result),\n          filter(result => result),\n          mergeMap(() => (Array.isArray(child.tabs) ? from(child.tabs) : of(child as Tab))),\n          map(result =>\n            result.label || result.path\n              ? ({\n                  label: result.label,\n                  icon: result.icon,\n                  path: `${decodeURIComponent(route.url.join('/'))}/${result.path}`,\n                  priority: result.priority,\n                  hide: result.hide\n                } as Tab)\n              : undefined\n          )\n        )\n      ),\n      filter(tabs => !!tabs),\n      toArray()\n    ) as Observable<Tab[]>;\n  }\n\n  private getGuards(child: Route) {\n    const guards = (child.canActivate || []).map(guard => {\n      return this.injector.get(guard);\n    });\n    if (child.data && child.data.showIf) {\n      guards.push({ canActivate: child.data.showIf });\n    }\n    return guards;\n  }\n}\n","import {\n  InventoryService,\n  UserService,\n  ApplicationService,\n  TenantService,\n} from '@c8y/client';\nimport { ViewContext } from './router.models';\n\nexport class ViewContextServices {\n  static services = new Map<ViewContext, any>([\n    [ViewContext.Device, InventoryService],\n    [ViewContext.Group, InventoryService],\n    [ViewContext.User, UserService],\n    [ViewContext.Application, ApplicationService],\n    [ViewContext.SubscribedApplications, ApplicationService],\n    [ViewContext.Tenant, TenantService],\n    [ViewContext.Report, InventoryService]\n  ]);\n\n  static contextToService(context: ViewContext) {\n    return ViewContextServices.services.get(context);\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport {\n  ActivatedRoute,\n  NavigationEnd,\n  PRIMARY_OUTLET,\n  Router,\n  UrlSegmentGroup,\n  UrlTree\n} from '@angular/router';\nimport { ApiService, ApiCall } from '@c8y/ngx-components/api';\nimport { NEVER, Observable, Subject, Subscription } from 'rxjs';\nimport { filter, map, merge, switchMap, tap } from 'rxjs/operators';\nimport { Tab } from '../tabs/tab.model';\nimport { TabsService } from '../tabs/tabs.service';\nimport { RouterTabsResolver } from './router-tabs.resolver';\nimport { ViewContextServices } from './view-context.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContextRouteService {\n  private dataSubscription: Subscription;\n  private routerSubscription: Subscription;\n  private lastAddedTabs = [];\n  private refreshTrigger = new Subject();\n\n  constructor(\n    private tabsResolver: RouterTabsResolver,\n    private tabsService: TabsService,\n    private router: Router,\n    private apiService: ApiService,\n    private injector: Injector\n  ) {}\n\n  init(route: ActivatedRoute): void {\n    this.routerSubscription = this.router.events\n      .pipe(filter(e => e instanceof NavigationEnd))\n      .subscribe(() => this.redirectToFirstTab());\n\n    this.dataSubscription = route.data\n      .pipe(\n        merge(this.updatedContext(route), this.refreshTrigger),\n        switchMap(() => this.tabsResolver.resolve(route.snapshot)),\n      )\n      .subscribe(tabs => this.updateTabs(tabs));\n  }\n\n  destroy(): void {\n    this.dataSubscription.unsubscribe();\n    this.routerSubscription.unsubscribe();\n    this.lastAddedTabs.forEach(t => this.tabsService.remove(t));\n  }\n\n  refreshContext() {\n    this.refreshTrigger.next();\n  }\n\n  updatedContext(route: ActivatedRoute): Observable<ApiCall> {\n    const { data } = route.snapshot;\n    const serviceInstance = ViewContextServices.contextToService(data.context);\n    if (serviceInstance) {\n      const service = this.injector.get(serviceInstance);\n      const detailsUrlRegex = service.getDetailUrl(data.contextData).replace(/\\d+/g, '?\\\\d*');\n      const contextRegex = new RegExp(detailsUrlRegex, 'i');\n      const childrenRegex = new RegExp(`${detailsUrlRegex}/child`, 'i');\n      const filterResponse = ({ url, method }) => {\n        const contextChanged = contextRegex.test(url) && ['POST', 'PUT'].includes(method);\n        const childrenAffected = childrenRegex.test(url) && ['POST', 'DELETE'].includes(method);\n        return contextChanged || childrenAffected;\n      };\n      return this.apiService.hookResponse(filterResponse);\n    }\n    return NEVER;\n  }\n\n  private updateTabs(tabs = []) {\n    this.lastAddedTabs.forEach(t => this.tabsService.remove(t));\n    this.lastAddedTabs = tabs;\n    tabs.forEach(t => this.tabsService.add(t));\n    this.redirectToFirstTab();\n  }\n\n  private redirectToFirstTab() {\n    if (this.needsRedirect()) {\n      this.tabsService.firstTab$.subscribe((tab: Tab) => {\n        if (tab) {\n          this.router.navigateByUrl(tab.path, { replaceUrl: true });\n        }\n      });\n    }\n  }\n\n  private needsRedirect() {\n    const tree: UrlTree = this.router.parseUrl(this.router.url);\n    const groups: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n    const isContextRoute = groups.segments.length === 2;\n    return isContextRoute;\n  }\n}\n","import { Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { fromFactories } from '../common/extension-hooks';\nimport { RouteFactory, Route } from './router.models';\nimport { TabsService } from '../tabs/tabs.service';\nimport { ContextRouteService } from './context-route.service';\n\n/**\n * A hook to use for Multi Provider extension.\n */\nexport const HOOK_ONCE_ROUTE = new InjectionToken('RouteFactory');\n\n/**\n * A service which defines routes\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouterService {\n  constructor(\n    @Optional() @Inject(HOOK_ONCE_ROUTE) factories: RouteFactory[],\n    private router: Router,\n    public tabsService: TabsService,\n    private contextRouteService: ContextRouteService\n  ) {\n    fromFactories(factories).subscribe((routes: Route[]) => {\n      this.addRoute(routes);\n    });\n  }\n\n  /**\n   * Refresh the current context\n   */\n  refresh() {\n    this.contextRouteService.refreshContext();\n  }\n\n  /**\n   * Add a new route to the router configuration or a context.\n   * @param route The route to add\n   */\n  addRoute(route: Route | Route[]) {\n    this.addRoutes(Array.isArray(route) ? route : [route]);\n  }\n\n  private addRoutes(routes) {\n    const emptyRoute = this.router.config.find(r => r.path === '**');\n    this.router.resetConfig(\n      [\n        ...this.router.config.filter(r => r.path !== '**'),\n        ...routes.map((r: Route) => this.convertRoute(this.router.config, r)),\n        emptyRoute\n      ].filter(Boolean)\n    );\n  }\n\n  private convertRoute(initialConfig, route: Route) {\n    if (route.context) {\n      initialConfig.forEach((r: Route) => {\n        if (r.data && r.data.context === route.context) {\n          r.children = [route, ...(r.children || [])];\n        }\n      });\n      return;\n    }\n    return route;\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ContextRouteService } from './context-route.service';\n\n@Component({\n  selector: 'c8y-context-route',\n  templateUrl: './context-route.component.html'\n})\nexport class ContextRouteComponent {\n  constructor(private route: ActivatedRoute, private contextRouteService: ContextRouteService) {}\n\n  ngOnInit(): void {\n    this.contextRouteService.init(this.route);\n  }\n\n  ngOnDestroy(): void {\n    this.contextRouteService.destroy();\n  }\n\n  refreshTabs() {\n    this.contextRouteService.refreshContext();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { FetchClient, IFetchOptions } from '@c8y/client';\nimport { Subject, Observable } from 'rxjs';\nimport { ApiCall, ApiCallOptions } from './api.model';\nimport { filter } from 'rxjs/operators';\n\n@Injectable()\nexport class ApiService {\n  calls: Observable<ApiCall>;\n  private callsSubject = new Subject<ApiCall>();\n\n  constructor(private client: FetchClient) {\n    this.calls = this.callsSubject.asObservable();\n    this.hookIntoClientFetch();\n  }\n\n  hookResponse(hookFilter: (call: ApiCall) => boolean) {\n    return this.callsSubject.pipe(\n      filter(({ phase }) => phase === 'finish'),\n      filter(hookFilter)\n    );\n  }\n\n  hookRequest(hookFilter: (call: ApiCall) => boolean) {\n    return this.callsSubject.pipe(\n      filter(({ phase }) => phase === 'start'),\n      filter(hookFilter)\n    );\n  }\n\n  async onFinish(call: ApiCall) {\n    this.callsSubject.next({ phase: 'finish', ...call });\n  }\n\n  onStart(call: ApiCall) {\n    this.callsSubject.next({ phase: 'start', ...call });\n  }\n\n  async resolveData(call: ApiCall): Promise<any> {\n    const { response, method } = call;\n    if ('data' in response) {\n      return Promise.resolve({ data: response.data, method });\n    } else {\n      const cb = (data) => ({ data, method});\n      return (response as Response).clone().json().then(cb, cb);\n    }\n  }\n\n  private hookIntoClientFetch() {\n    const fetch = this.client.fetch.bind(this.client);\n    this.client.fetch = async (url, options: ApiCallOptions & IFetchOptions = { method: 'GET'}) => {\n      const { method } = options;\n      this.onStart({ options, method, url });\n      let fetchPromise = fetch(url, options);\n      if (typeof options.responseInterceptor === 'function') {\n        fetchPromise = fetchPromise.then(options.responseInterceptor);\n      }\n      fetchPromise.then(\n        (response: Response) => this.onFinish({ response, url, options, method }),\n        (response: Response) => this.onFinish({ response, url, options, method })\n      );\n      return fetchPromise;\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BasicAuth, FetchClient, Realtime, CookieAuth } from '@c8y/client';\nimport { ApiService } from './api.service';\nimport * as services from './services';\n\nfunction toProvider(provide) {\n  let deps: any[] = [FetchClient, Realtime];\n  if (provide === FetchClient)  {\n    deps = [CookieAuth];\n  }\n  if (provide === BasicAuth || provide === CookieAuth)  {\n    deps = [];\n  }\n  if (provide === Realtime) {\n    deps = [FetchClient];\n  }\n  return {provide, useClass: provide, deps};\n}\n\nconst providers: any[] = (Object.keys(services).map((k) => toProvider(services[k])) as any[])\n  .concat([\n    { provide: ApiService, useClass: ApiService, deps: [FetchClient] }\n  ]);\n// @dynamic\n@NgModule()\nexport class DataModule {\n  static providers() {\n    return providers;\n  }\n  static forRoot() {\n    return {\n      ngModule: DataModule,\n      providers\n    };\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\nimport { from, of } from 'rxjs';\nimport { catchError, map, shareReplay, tap } from 'rxjs/operators';\nimport { ViewContextServices } from './view-context.service';\nimport { InventoryService } from '../../api';\n\n@Injectable()\nexport class ContextRouteGuard implements CanActivate {\n  private caches = new Map();\n  constructor(private injector: Injector) {}\n\n  canActivate(route: ActivatedRouteSnapshot) {\n    const id = route.paramMap.get('id');\n    const service = this.service(route);\n    this.clearDetailCached(service, id);\n    return this.detailCached(service, id).pipe(\n      tap(contextData => (route.data = { ...route.data, contextData })),\n      map(() => true),\n      catchError(ex => of(false))\n    );\n  }\n\n  private service(route) {\n    const serviceInstance = ViewContextServices.contextToService(route.data.context);\n    return this.injector.get(serviceInstance);\n  }\n\n  private detailCached(service, id) {\n    const cache = this.getCache(service);\n    let cached = cache[id];\n    if (!cached) {\n      const params = service instanceof InventoryService ? { withChildren: false } : undefined;\n      cached = from(service.detail(id, params)).pipe(\n        map(({ data }) => data),\n        shareReplay(1)\n      );\n      cache[id] = cached;\n    }\n    return cached;\n  }\n\n  private clearDetailCached(service, id) {\n    const cache: Map<any, any> = this.getCache(service);\n    delete cache[id];\n  }\n\n  private getCache(service) {\n    let cache = this.caches.get(service);\n    if (!cache) {\n      cache = {};\n      this.caches.set(service, cache);\n    }\n    return cache;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({selector: 'empty', template: ''})\nexport class EmptyComponent {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule as NgRouterModule } from '@angular/router';\nimport { RouterService } from './router.service';\nimport { ContextRouteComponent } from './context-route.component';\nimport { HeaderModule } from '../header/header.module';\nimport { CommonModule } from '../common/common.module';\nimport { ContextRouteGuard } from './context-route.guard';\nimport { ViewContext, Route } from './router.models';\nimport { RouterTabsResolver } from './router-tabs.resolver';\nimport { EmptyComponent } from './empty.component';\n\nexport const routes: Route[] = [{\n  path: 'users/new',\n  component: EmptyComponent\n},\n{\n  path: 'tenants/new',\n  component: EmptyComponent\n}];\n// tslint:disable-next-line: forin\nfor (const key in ViewContext) {\n  const context = ViewContext[key];\n  routes.push({\n    path: context,\n    component: ContextRouteComponent,\n    canActivate: [ ContextRouteGuard ],\n    data: { context, contextData: {} },\n    resolve: {\n      tabs: RouterTabsResolver,\n    }\n  });\n}\n\n@NgModule({\n  declarations: [ ContextRouteComponent, EmptyComponent],\n  imports: [\n    NgRouterModule.forRoot(routes),\n    HeaderModule,\n    CommonModule\n  ],\n  entryComponents: [ContextRouteComponent, EmptyComponent]\n})\nexport class RouterModule {\n  static providers() {\n    return [\n      ContextRouteGuard,\n      RouterTabsResolver,\n      RouterService\n    ];\n  }\n\n  static forRoot() {\n    return {\n      ngModule: RouterModule,\n      providers: RouterModule.providers()\n    };\n  }\n\n  constructor(routerService: RouterService) {\n    // Declared but never used is intended: to always have a instance of RouterService.\n  }\n}\n","import { gettext } from '../i18n/gettext';\nimport { formatDate } from '@angular/common';\n// TODO remove  when c8y-icon will works\n\nexport enum SendStatus {\n  AVAILABLE = 'AVAILABLE',\n  UNAVAILABLE = 'UNAVAILABLE',\n  UNKNOWN = 'UNKNOWN',\n  MAINTENANCE = 'MAINTENANCE',\n  NOT_MONITORED = 'NOT_MONITORED'\n}\n\nexport enum PushStatus {\n  CONNECTED = 'CONNECTED',\n  DISCONNECTED = 'DISCONNECTED',\n  UNKNOWN = 'UNKNOWN',\n  MAINTENANCE = 'MAINTENANCE'\n}\n\nexport enum SendStatusLabels {\n  AVAILABLE = gettext('Send connection: online'),\n  NOT_MONITORED = gettext('Send connection: not monitored'),\n  UNAVAILABLE = gettext('Send connection: offline'),\n  UNKNOWN = gettext('Send connection status unknown'),\n  MAINTENANCE = gettext('Device is under maintenance')\n}\n\nexport enum PushStatusLabels {\n  CONNECTED = gettext('Push connection: active'),\n  DISCONNECTED = gettext('Push connection: inactive'),\n  UNKNOWN = gettext('Push connection: inactive'),\n  MAINTENANCE = gettext('Device is under maintenance')\n}\n\nexport const deviceAvailabilityIconMap = {\n  sendData: {\n    [SendStatus.AVAILABLE]: {\n      icon: 'long-arrow-right',\n      class: 'statusOk'\n    },\n    [SendStatus.UNAVAILABLE]: {\n      icon: 'long-arrow-right',\n      class: 'statusNok'\n    },\n    [SendStatus.UNKNOWN]: {\n      icon: 'long-arrow-right',\n      class: 'statusUnknown'\n    },\n    [SendStatus.NOT_MONITORED]: {\n      icon: 'long-arrow-right',\n      class: 'statusUnknown'\n    }\n  },\n  push: {\n    [PushStatus.CONNECTED]: {\n      icon: 'long-arrow-left',\n      class: 'statusOk'\n    },\n    [PushStatus.DISCONNECTED]: {\n      icon: 'long-arrow-left',\n      class: 'statusUnknown'\n    },\n    [PushStatus.UNKNOWN]: {\n      icon: 'long-arrow-left',\n      class: 'statusUnknown'\n    },\n    [PushStatus.MAINTENANCE]: {\n      icon: 'wrench',\n      class: 'statusAlert'\n    }\n  },\n  device: {\n    MAINTENANCE: {\n      icon: 'wrench',\n      class: 'statusAlert'\n    }\n  }\n};\n\nexport const tooltips = {\n  sendStatusConnected: (lastMessage, translateService) => {\n    const date = formatDate(new Date(lastMessage), 'medium', translateService.currentLang);\n    return translateService.instant(gettext('Device last request:\\n{{date}}'), { date });\n  },\n  sendStatusDisconnected: gettext('Connection not monitored'),\n  pushStatusConnected: gettext('Connection to device established'),\n  pushStatusDisconnected: gettext(\n    'Connection to device not established (not supported by device or no connectivity)'\n  ),\n  maintenance: gettext('Device is under maintenance')\n};\n","import { Component, Input, AfterContentInit, OnChanges } from '@angular/core';\nimport {\n  deviceAvailabilityIconMap,\n  PushStatusLabels,\n  SendStatusLabels,\n  tooltips\n} from './device-availability';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get } from 'lodash-es';\n\n@Component({\n  selector: 'device-status',\n  templateUrl: './device-status.component.html'\n})\nexport class DeviceStatusComponent implements AfterContentInit, OnChanges {\n  @Input('mo') set node(value) {\n    this._mo = value.mo || value;\n  }\n\n  private _mo;\n  private requiredAvailability;\n  private availabilityStatus;\n  private pushStatus;\n  private sendStatus;\n\n  constructor(private translateService: TranslateService) {}\n\n  get() {\n    return this._mo;\n  }\n\n  ngOnChanges() {\n    this.setStatusProperites();\n  }\n\n  ngAfterContentInit() {\n    this.setStatusProperites();\n  }\n\n  setStatusProperites() {\n    this.requiredAvailability = get(this._mo, 'c8y_RequiredAvailability');\n    this.availabilityStatus = get(this._mo, 'c8y_Availability.status');\n\n    this.pushStatus = get(this._mo, 'c8y_Connection.status') || 'UNKNOWN';\n    this.sendStatus =\n      this.availabilityStatus || (this.requiredAvailability ? 'UNKNOWN' : 'NOT_MONITORED');\n  }\n\n  status() {\n    let statuses;\n\n    if (this.availabilityStatus === 'MAINTENANCE' || this.pushStatus === 'MAINTENANCE') {\n      statuses = this.getMaintenanceStatus();\n    } else {\n      statuses = this.getSendPushStatus();\n    }\n\n    return statuses;\n  }\n\n  getMaintenanceStatus() {\n    return {\n      sendStatus: false,\n      pushStatus: false,\n      maintenanceStatus: {\n        icon: deviceAvailabilityIconMap.device.MAINTENANCE.icon,\n        class: deviceAvailabilityIconMap.device.MAINTENANCE.class,\n        tooltip: tooltips.maintenance\n      }\n    };\n  }\n\n  private getSendPushStatus() {\n    return {\n      sendStatus: {\n        icon: deviceAvailabilityIconMap.sendData[this.sendStatus].icon,\n        class: deviceAvailabilityIconMap.sendData[this.sendStatus].class,\n        status: this.sendStatus,\n        label: SendStatusLabels[this.sendStatus],\n        tooltip: this.getSendStatusTooltip(this._mo)\n      },\n      pushStatus: {\n        icon: deviceAvailabilityIconMap.push[this.pushStatus].icon,\n        class: deviceAvailabilityIconMap.push[this.pushStatus].class,\n        status: this.pushStatus,\n        label: PushStatusLabels[this.pushStatus],\n        tooltip: this.getPushStatusTooltip(this.pushStatus === 'CONNECTED')\n      },\n      maintenanceStatus: false\n    };\n  }\n\n  private getSendStatusTooltip(device) {\n    const availability = device && device.c8y_Availability;\n    const lastMessage = availability && availability.lastMessage;\n    if (lastMessage) {\n      return tooltips.sendStatusConnected(lastMessage, this.translateService);\n    }\n    return tooltips.sendStatusDisconnected;\n  }\n\n  private getPushStatusTooltip(isActive) {\n    return isActive ? tooltips.pushStatusConnected : tooltips.pushStatusDisconnected;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { DeviceStatusComponent } from './device-status.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { CommonModule } from '../common/common.module';\n/**\n * The angular module definition for a device-status.\n * @exports DeviceStatusComponent\n */\n@NgModule({\n    imports: [\n        CommonModule,\n        TooltipModule\n    ],\n    exports: [\n        DeviceStatusComponent\n    ],\n    declarations: [\n        DeviceStatusComponent\n    ]\n})\nexport class DeviceStatusModule { }\n","import { Directive, Input, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '[c8y-guide-href]'\n})\nexport class GuideHrefDirective {\n  @Input('c8y-guide-href')\n  c8yGuideHref;\n\n  private htmlAnchor: HTMLAnchorElement;\n\n  set baseHref(href) {\n    this.htmlAnchor.href = `${href}/${this.c8yGuideHref}`;\n  }\n\n  constructor(private elementRef: ElementRef) {\n    this.htmlAnchor = this.elementRef.nativeElement as HTMLAnchorElement;\n    if (!this.htmlAnchor.hasAttribute('target')) {\n      this.htmlAnchor.setAttribute('target', '_blank');\n    }\n  }\n}\n","import {\n  Component,\n  OnInit,\n  ContentChildren,\n  QueryList,\n  ContentChild,\n  AfterContentInit,\n  ElementRef,\n  Renderer2, OnDestroy\n} from '@angular/core';\nimport { GuideHrefDirective } from './guide-href.directive';\nimport { DocsService } from './docs.service';\nimport { C8yTranslateDirective } from '../i18n/c8y-translate.directive';\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: '[c8y-guide-docs]',\n  templateUrl: './guide-docs.component.html'\n})\nexport class GuideDocsComponent implements OnInit, AfterContentInit, OnDestroy {\n  baseUrl: string;\n  @ContentChildren(GuideHrefDirective, { descendants: true }) links: QueryList<GuideHrefDirective>;\n\n  /**\n   * Provides access to translate directive, so it is possible to adjust anchor html tags, after\n   * content is translated.\n   */\n  @ContentChild(C8yTranslateDirective, { static: false }) translateDirective;\n\n  private destroyed$: ReplaySubject<boolean> = new ReplaySubject(1);\n\n  constructor(private docs: DocsService, private el: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    this.baseUrl = this.docs.getBaseUrl();\n  }\n\n  /**\n   * After content is initialized we subscribe for translation events, then we are able to modify\n   * anchor just as C8yGuideHrefDirective does.\n   */\n  ngAfterContentInit() {\n    if (this.translateDirective) {\n      this.translateDirective.htmlUpdateEvent\n        .pipe(takeUntil(this.destroyed$))\n        .subscribe(() => {\n          this.replaceAnchorAttributes();\n        });\n    } else {\n      this.replaceAnchorAttributes();\n    }\n  }\n\n  /**\n   * Find and modify anchor elements\n   */\n  replaceAnchorAttributes() {\n    const anchors = this.findGuideAnchors(this.el.nativeElement);\n    anchors.forEach(a => {\n      const guideHref = `${this.baseUrl}/${a.getAttribute('c8y-guide-href')}`;\n      this.renderer.setAttribute(a, 'href', guideHref);\n      if (!a.hasAttribute('target')) {\n        this.renderer.setAttribute(a, 'target', '_blank');\n      }\n    });\n  }\n\n  /**\n   * Recursive function, returns array of Anchor elements inside HTMLElement.\n   */\n  findGuideAnchors(el: HTMLElement): HTMLElement[] {\n    const isAnchor = () => el.nodeName === 'A';\n    const hasGuideHrefAttr = () => !!el.attributes.getNamedItem('c8y-guide-href');\n    const hasChildren = () => el.childNodes && el.childNodes.length > 0;\n\n    let result = [];\n\n    if (isAnchor() && hasGuideHrefAttr()) {\n      result.push(el);\n    } else if (hasChildren()) {\n      el.childNodes.forEach((node: HTMLElement) => {\n        const searchResult = this.findGuideAnchors(node);\n        if (searchResult) {\n          result = [...result, ...searchResult];\n        }\n      });\n    }\n    return result;\n  }\n\n  ngAfterViewInit(): void {\n    this.links.forEach(guide => {\n      guide.baseHref = this.baseUrl;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed$.next(true);\n    this.destroyed$.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DocsService } from './docs.service';\nimport { GuideHrefDirective } from './guide-href.directive';\nimport { GuideDocsComponent } from './guide-docs.component';\n\n@NgModule({\n  declarations: [\n    GuideHrefDirective,\n    GuideDocsComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    GuideHrefDirective,\n    GuideDocsComponent\n  ],\n  providers: [DocsService],\n})\nexport class DocsModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { ConfigOption, FieldArrayType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'c8y-array-type',\n  templateUrl: './array.type.component.html'\n})\nexport class ArrayTypeComponent extends FieldArrayType implements OnInit {\n  static readonly CONFIG: ConfigOption = {\n    types: [{ name: 'array', component: ArrayTypeComponent }]\n  };\n\n  ngOnInit(): void {\n    if (this.to.required && !this.field.fieldGroup.length) {\n      this.add();\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfigOption, FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'c8y-field-checkbox',\n  templateUrl: './checkbox.type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FieldCheckbox extends FieldType {\n  static readonly CONFIG: ConfigOption = {\n    types: [\n      {\n        name: 'checkbox',\n        component: FieldCheckbox\n      },\n      {\n        name: 'boolean',\n        extends: 'checkbox'\n      }\n    ]\n  };\n\n  defaultOptions = {\n    templateOptions: {\n      indeterminate: true,\n      formCheck: 'custom' // 'custom' | 'custom-inline' | 'custom-switch' | 'stacked' | 'inline' | 'nolabel'\n    }\n  };\n}\n","import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { ConfigOption, FieldType } from '@ngx-formly/core';\nimport { DropAreaComponent } from '../../drop-area';\n\n@Component({\n  selector: 'c8y-field-file',\n  templateUrl: './file.type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FieldFile extends FieldType implements OnInit {\n  static readonly CONFIG: ConfigOption = {\n    types: [\n      {\n        name: 'file',\n        component: FieldFile\n      }\n    ]\n  };\n\n  readonly dropAreaInputs: string[] = [\n    'title',\n    'message',\n    'icon',\n    'loadingMessage',\n    'alwaysShow',\n    'clickToOpen',\n    'loading',\n    'progress',\n    'maxAllowedFiles',\n    'files',\n    'accept'\n  ];\n\n  @ViewChild('dropArea', { static: true }) dropArea: DropAreaComponent;\n\n  ngOnInit(): void {\n    this.dropAreaInputs\n      .filter(input => this.to[input] !== undefined)\n      .forEach(input => (this.dropArea[input] = this.to[input]));\n  }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ConfigOption, FieldWrapper } from '@ngx-formly/core';\n\n@Component({\n  selector: 'c8y-wrapper-form-field',\n  templateUrl: './form-field.wrapper.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class WrapperFormField extends FieldWrapper implements OnInit {\n  static readonly CONFIG: ConfigOption = {\n    wrappers: [{ name: 'c8y-form-field', component: WrapperFormField }]\n  };\n\n  maxHelpBlockLength: number = 64;\n  showDescriptionAsPopup: boolean;\n\n  ngOnInit(): void {\n    this.showDescriptionAsPopup =\n      this.field.type === 'radio' ||\n      (this.to.description && this.to.description.length > this.maxHelpBlockLength);\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfigOption, FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'c8y-field-input',\n  templateUrl: './input.type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FieldInput extends FieldType {\n  static readonly CONFIG: ConfigOption = {\n    types: [\n      {\n        name: 'input',\n        component: FieldInput,\n        wrappers: ['c8y-form-field']\n      },\n      { name: 'string', extends: 'input' },\n      {\n        name: 'number',\n        extends: 'input',\n        defaultOptions: {\n          templateOptions: {\n            type: 'number'\n          }\n        }\n      },\n      {\n        name: 'integer',\n        extends: 'input',\n        defaultOptions: {\n          templateOptions: {\n            type: 'number'\n          }\n        }\n      }\n    ]\n  };\n\n  get type() {\n    return this.to.type || 'text';\n  }\n}\n","import { Component } from '@angular/core';\nimport { ConfigOption, FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'c8y-object-type',\n  templateUrl: './object.type.component.html'\n})\nexport class ObjectTypeComponent extends FieldType {\n  static readonly CONFIG: ConfigOption = {\n    types: [{ name: 'object', component: ObjectTypeComponent }]\n  };\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ConfigOption, FieldType } from '@ngx-formly/core';\n\n@Component({\n  selector: 'c8y-field-radio',\n  templateUrl: './radio.type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FieldRadio extends FieldType {\n  static readonly CONFIG: ConfigOption = {\n    types: [\n      {\n        name: 'radio',\n        component: FieldRadio,\n        wrappers: ['c8y-form-field']\n      }\n    ]\n  };\n\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      formCheck: 'custom' // 'custom' | 'custom-inline' | 'stacked' | 'inline'\n    }\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { ConfigOption, FieldType, FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { DropAreaModule } from '../drop-area/drop-area.module';\nimport { FormsModule } from '../forms/index';\nimport { C8yTranslateModule } from './../i18n/c8y-translate.module';\nimport { ArrayTypeComponent } from './array/array.type.component';\nimport { FieldCheckbox } from './checkbox/checkbox.type.component';\nimport { FieldFile } from './file/file.type.component';\nimport { WrapperFormField } from './form-field/form-field.wrapper.component';\nimport { FieldInput } from './input/input.type.component';\nimport { ObjectTypeComponent } from './object/object.type.component';\nimport { FieldRadio } from './radio/radio.type.component';\n\nexport const FIELD_TYPES: Array<Type<FieldType>> = [\n  FieldCheckbox,\n  ArrayTypeComponent,\n  WrapperFormField,\n  FieldFile,\n  FieldInput,\n  FieldRadio,\n  ObjectTypeComponent\n];\n\nexport function fieldTypeFactory() {\n  // tslint:disable-next-line:no-string-literal\n  return FIELD_TYPES.map(type => type['CONFIG']).reduce(\n    (formlyConfig: ConfigOption, typeConfig: ConfigOption) =>\n      ({\n        ...formlyConfig,\n        types: [...formlyConfig.types, ...(typeConfig.types || [])],\n        wrappers: [...formlyConfig.wrappers, ...(typeConfig.wrappers || [])]\n      } as ConfigOption),\n    { types: [], wrappers: [] }\n  );\n}\n\n/**\n * This module declares field type components for dynamic forms that match C8Y styleguide.\n *\n * @dynamic\n */\n@NgModule({\n  declarations: [...FIELD_TYPES],\n  entryComponents: [...FIELD_TYPES],\n  imports: [\n    CommonModule,\n    PopoverModule,\n    ReactiveFormsModule,\n    C8yTranslateModule,\n    DropAreaModule,\n    FormsModule,\n    FormlyModule,\n    FormlySelectModule\n  ],\n  providers: [\n    {\n      provide: FORMLY_CONFIG,\n      useFactory: fieldTypeFactory,\n      multi: true\n    }\n  ]\n})\nexport class DynamicFormsUIThemeModule {}\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TranslateParser, TranslateService } from '@ngx-translate/core';\nimport { combineLatest, isObservable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { gettext } from '../../i18n';\n\nexport class TranslateExtension {\n  constructor(private translate: TranslateService, private parser: TranslateParser) {}\n  prePopulate(field: FormlyFieldConfig) {\n    const to = field.templateOptions || {};\n    if (!to.label || to._translated) {\n      return;\n    }\n\n    to._translated = true;\n    field.expressionProperties = {\n      ...(field.expressionProperties || {}),\n      'templateOptions.label': to.label ? this.translate.stream(to.label) : to.label,\n      'templateOptions.description': to.description\n        ? this.translate.stream(to.description)\n        : to.description,\n      'templateOptions.placeholder': to.placeholder\n        ? combineLatest([\n            this.translate.stream(to.placeholder),\n            this.translate.stream(gettext('e.g. {{ example }}'))\n          ]).pipe(\n            map(([placeholder, expression]) => this.parser.interpolate(expression, { example: placeholder }))\n          )\n        : to.placeholder,\n      'templateOptions.options': (isObservable(to.options) ? to.options : of(to.options)).pipe(\n        map((options: Array<{ label: string }>) =>\n          (options || []).map(option => ({\n            ...option,\n            label: this.translate.instant(option.label)\n          }))\n        )\n      )\n    };\n  }\n}\n\nexport function registerTranslateExtension(translate: TranslateService, parser: TranslateParser) {\n  return {\n    extensions: [\n      {\n        name: 'translate',\n        extension: new TranslateExtension(translate, parser)\n      }\n    ]\n  };\n}\n","import { NgModule } from '@angular/core';\nimport { FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { TranslateParser, TranslateService } from '@ngx-translate/core';\nimport { registerTranslateExtension } from './translate.extension';\nimport { C8yTranslateModule } from './../../i18n/c8y-translate.module';\n\n@NgModule({\n  imports: [FormlyModule, C8yTranslateModule],\n  providers: [\n    {\n      provide: FORMLY_CONFIG,\n      multi: true,\n      useFactory: registerTranslateExtension,\n      deps: [TranslateService, TranslateParser]\n    }\n  ]\n})\nexport class I18nModule {}\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { FormlyJsonschema } from '@ngx-formly/core/json-schema';\nimport { FormlyJsonschemaOptions } from '@ngx-formly/core/json-schema/formly-json-schema.service';\nimport { JSONSchema7 } from 'json-schema';\n\n@Injectable()\nexport class C8yJSONSchema extends FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return super.toFieldConfig(schema, this.c8yOptions((options || {}).map));\n  }\n\n  private c8yOptions(\n    map: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig\n  ): FormlyJsonschemaOptions {\n    return {\n      map(mappedField: FormlyFieldConfig, mapSource: JSONSchema7) {\n        let result: FormlyFieldConfig = mappedField;\n\n        /** `const` type is represented as hidden input */\n        if (mapSource.const) {\n          result = {\n            ...result,\n            defaultValue: mapSource.const,\n            templateOptions: { ...result.templateOptions, type: 'hidden' }\n          };\n        }\n\n        /** `writeOnly` field represented as password input */\n        if (mapSource.writeOnly) {\n          result = {\n            ...result,\n            templateOptions: { ...result.templateOptions, type: 'password', autocomplete: 'off' }\n          };\n        }\n\n        /** `examples` values used as placeholder */\n        if (mapSource.examples) {\n          result = {\n            ...result,\n            templateOptions: {\n              ...result.templateOptions,\n              placeholder: (mapSource.examples as string[]).join(', ')\n            }\n          };\n        }\n\n        /** `enum` field represented as radio button group */\n        if (mapSource.enum) {\n          result = {\n            ...result,\n            type: 'radio'\n          };\n        }\n\n        /** fields with `contentMediaType` or `contentEncoding` are represented as file inputs */\n        if (mapSource.contentMediaType || mapSource.contentEncoding) {\n          result = {\n            ...result,\n            type: 'file',\n            templateOptions: {\n              ...result.templateOptions,\n              accept: mapSource.contentMediaType,\n              maxAllowedFiles: 1,\n              contentEncoding: mapSource.contentEncoding\n            }\n          };\n        }\n\n        return map ? map(result, mapSource) : result;\n      }\n    };\n  }\n}\n","import { FormlyFieldConfig } from '@ngx-formly/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { gettext } from '../../i18n/gettext';\n\nexport function c8yValidationConfigFactory(translate: TranslateService) {\n  return {\n    validationMessages: [\n      {\n        name: 'required',\n        message() {\n          return translate.stream(gettext('This field is required.'));\n        }\n      },\n      {\n        name: 'pattern',\n        message(error: any, field: FormlyFieldConfig) {\n          return translate.stream(gettext('Does not match pattern {{ requiredPattern }}'), error);\n        }\n      }\n    ]\n  };\n}\n","import { Type } from '@angular/core';\nimport { IResultList } from '@c8y/client';\n\n/*\n * For reference: the structure of current device column-related objects.\n * TODO: Can be removed when \"All devices\" is fully migrated.\n *\n * Services involved:\n * - c8yFilteringSortingColumns\n * - c8yFilteringSortingInventoryQueries\n * - c8yDeviceListColumns\n * - c8yFilteringSortingCollections?? -> for other tables in tenant/cell ID usage statistics feature\n *\n * Components involved:\n * - c8yFilteredSortedList -> this needs to be gravely adapted\n *\n * States saved in user preferences:\n * - Columns config (ALL_DEVICES_COLUMNS_CONFIG_USER_PREFERENCES_KEY)\n * - Columns meta (ALL_DEVICES_COLUMNS_META_USER_PREFERENCES_KEY_PREFIX)\n *\n * States saved in dynamic group object:\n * - Columns config (COLUMNS_CONFIG_FRAGMENT)\n * - Columns meta (COLUMNS_META_FRAGMENT)\n * - Query string (QUERY_STRING_FRAGMENT)\n *\n * TO-FUTURE-SELF note:\n * - `col.config.filtering` and `col.config.sorting` (the models) populate\n * `col.filtering` and `col.sorting` (the views).\n * - `getFilter` can return a query object (for server-side filtering) or\n * a filter function (for server-side filtering).\n */\ninterface DeviceColumn {\n  name: string;\n  header: string;\n  config: {\n    filtering: object;\n    sorting: {\n      order: number;\n    };\n    override: DeviceColumn;\n  };\n  cell: {\n    class: string;\n    innerClass: string;\n    scopeExtensions: object;\n    template: string;\n    style: object;\n  };\n  filtering: {\n    form: object[];\n    schema: {\n      type: string;\n      properties: {\n        type: string;\n        [key: string]: any;\n      };\n    };\n    getFilter(filteringModel: object): object | FilterFunction;\n  };\n  sorting: {\n    path?: string;\n    paths?: string;\n  };\n  meta: {\n    custom: boolean;\n    key: string;\n    headerName: string;\n    fragmentPath: string;\n    active: boolean;\n    filteringMode: 'EQUALITY' | 'EXISTENCE';\n  };\n}\n\ntype FilterFunction = (item: object) => boolean;\n\nexport interface DataGrid {\n  columns: Column[];\n  rows: Row[];\n  pagination: Pagination;\n  serverSideDataCallback: ServerSideDataCallback;\n  selectable: boolean;\n  selectionPrimaryKey: string;\n  displayOptions: DisplayOptions;\n  actionControls: ActionControl[];\n  bulkActionControls: BulkActionControl[];\n}\n\n/*\n * Column\n */\nexport interface Column {\n  name: string | SpecialColumnName;\n  header?: string;\n  path?: string;\n  visible?: boolean;\n  positionFixed?: boolean;\n\n  /*\n   * Cosmetics\n   */\n  dataType?: ColumnDataType;\n  gridTrackSize?: string;\n  headerCSSClassName?: string | string[];\n  cellCSSClassName?: string | string[];\n\n  /*\n   * Sorting-Filtering\n   */\n  sortable?: boolean;\n  sortOrder?: SortOrder;\n\n  filterable?: boolean;\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: any;\n\n  /*\n   * Custom renderer\n   */\n  cellRendererComponent?: Type<any>;\n  headerCellRendererComponent?: Type<any>;\n  filteringFormRendererComponent?: Type<any>;\n}\n\nexport interface ColumnConfig {\n  name?: string;\n  visible?: boolean;\n  sortOrder?: SortOrder;\n  filter?: Filter;\n}\n\nexport interface Filter {\n  externalFilterQuery?: any;\n}\n\nexport interface GridConfig {\n  columns: ColumnConfig[];\n  pagination: Pagination;\n}\n\nexport const enum SpecialColumnName {\n  Checkbox = 'checkbox',\n  Actions = 'actions'\n}\n\nexport const enum ColumnDataType {\n  Icon = 'icon',\n  Numeric = 'numeric',\n  TextShort = 'text-short',\n  TextLong = 'text-long'\n}\n\nexport const enum ColumnDataRecordClassName {\n  Icon = 'data-record-icon',\n  Header = 'data-record-header',\n  Default = ''\n}\n\nexport const minColumnGridTrackSize = 80;\n\nexport const ratiosByColumnTypes = {\n  icon: 1,\n  numeric: 1,\n  'text-short': 1.67,\n  'text-long': 3.33\n};\n\nexport type SortOrder = 'asc' | 'desc' | '';\n\nexport type FilterPredicateFunction = (item: object, path: string) => boolean;\n\nexport enum FilteringActionType {\n  ApplyFilter = 'APPLY_FILTER',\n  ResetFilter = 'RESET_FILTER'\n}\n\nexport interface Row {\n  id: string;\n  [key: string]: any;\n}\n\nexport interface Pagination {\n  currentPage: number;\n  nextPage?: number;\n  pageSize: number;\n}\n\nexport type ServerSideDataCallback = (\n  dataSourceModifier: DataSourceModifier\n) => ServerSideDataResult;\nexport interface DataSourceModifier {\n  columns: Column[];\n  searchText: string;\n  pagination: Pagination;\n  selection: {\n    enabled: boolean;\n    primaryKey: string;\n  };\n}\n\n/**\n * Describes result from server with data and additional statistics.\n */\nexport type ServerSideDataResult = IResultList<object> & {\n  /** The real grand total number of items (the whole dataset). */\n  size: number;\n\n  /** The number of items after filtering applied to the whole dataset (subset). */\n  filteredSize: number;\n\n  /** The list of ids of all filtered items (subset). */\n  filteredDataIds?: string[];\n};\n\nexport interface DataSourceStats {\n  /** The real grand total number of items (the whole dataset). */\n  size: number;\n\n  /** The number of items after filtering applied to the whole dataset (subset). */\n  filteredSize: number;\n\n  /** The number of the current page. */\n  currentPage: number;\n\n  /** The number of the next page. */\n  nextPage?: number;\n\n  /** The number of items currently shown in the list view, a.k.a. current page (what the user sees on screen). */\n  currentPageSize: number;\n\n  /** The number of items on the first page.  */\n  firstPageSize: number;\n}\n\nexport interface DisplayOptions {\n  /** Show or hide zebra-striping in the table */\n  striped: boolean;\n  /** Show or hide each cell border */\n  bordered: boolean;\n  /** Show or hide the grid header */\n  gridHeader: boolean;\n  /** Show or hide filter label in the grid header */\n  filter: boolean;\n}\n\nexport interface ActionControl {\n  type: BuiltInActionType | string;\n  text?: string;\n  icon?: string;\n  // tslint:disable-next-line:ban-types\n  callback: ((item: Row, reload: () => void) => void) | Function;\n  [key: string]: any;\n}\n\nexport interface BulkActionControl extends ActionControl {\n  callback(selectedItemIds: string[], reload: () => void): void;\n}\n\nexport const enum BuiltInActionType {\n  Edit = 'EDIT',\n  Delete = 'DELETE',\n  Export = 'EXPORT'\n}\n","import { NgModule } from '@angular/core';\nimport { FormlyModule, FORMLY_CONFIG } from '@ngx-formly/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { C8yTranslateModule } from '../../i18n/c8y-translate.module';\nimport { c8yValidationConfigFactory } from './validation-config.factory';\n\n@NgModule({\n  imports: [C8yTranslateModule, FormlyModule],\n  providers: [\n    {\n      provide: FORMLY_CONFIG,\n      multi: true,\n      useFactory: c8yValidationConfigFactory,\n      deps: [TranslateService]\n    }\n  ]\n})\nexport class ValidationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { DynamicFormsUIThemeModule } from './dynamic-forms-ui-theme.module';\nimport { I18nModule } from './i18n/i18n.module';\nimport { C8yJSONSchema } from './json-schema/c8y-json-schema.service';\nimport { ValidationModule } from './validation/validation.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    ValidationModule,\n    DynamicFormsUIThemeModule,\n    FormlyModule.forRoot()\n  ],\n  providers: [C8yJSONSchema],\n  exports: [FormlyModule, ReactiveFormsModule]\n})\nexport class DynamicFormsModule {}\n","import { Component, InjectionToken, Type } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n/**\n * A hook to add dynamic components to the UI (e.g. widgets).\n */\nexport const HOOK_COMPONENTS = new InjectionToken('Hook Dynamic Component');\n\n/**\n * A hook to add dynamic components to the UI (e.g. widgets).\n * @deprecated: Use HOOK_COMPONENTS\n */\nexport const HOOK_COMPONENT = new InjectionToken('Hook Dynamic Component @deprecated');\n\n/**\n * A dynamic component can be defined in a the HOOK_COMPONENTS to display any kind\n * of component dynamically just by referencing it's id. The most common use case is on dashboards,\n * where the `configComponent` is used to define what is displayed on the `component`\n * on the dashboard.\n *\n * To use the component you can use the c8y-dynamic-component.\n *\n * ```\n *   <c8y-dynamic-component\n *     componentId=\"angular.widget.demo\"\n *     [config]=\"{ text: 'Hello world' }\"\n *     [mode]=\"editComponent ? 'config' : 'component'\"\n *   ></c8y-dynamic-component>\n *   ```\n */\nexport interface DynamicComponentDefinition {\n  /**\n   * Unique serializable id\n   */\n  id: string;\n  /**\n   * The component which is used when the component should be displayed (e.g. on a dashboard)\n   */\n  component: Type<Component>;\n  /**\n   * The configuration component used when a widget is added or edited.\n   */\n  configComponent?: Type<Component>;\n  /**\n   * The label shown for this dynamic component on add widgets\n   */\n  label: string;\n  /**\n   * The description shown on add widget\n   */\n  description: string;\n  /**\n   * Add any random data, specially to angular.js dashboards.\n   * Should be searilzabled to allow to save it to the API.\n   */\n  data?: any;\n  /**\n   * An url to an preview image.\n   */\n  previewImage?: string;\n}\n\n/**\n * Use this interface on any component to define the interchange between\n * config and display component.\n */\nexport interface DynamicComponent {\n  /**\n   * The configuration which is shared between configuration component and display component.\n   * Should be searilzabled to allow to save it to the API.\n   */\n  config: any;\n  /**\n   * A reference to the ng1Form on angularjs dashboards to disable/enable the save button.\n   * @deprecated: Will not work on Angular-Dashboards (1.6.1.0). Use `ContextServiceDashboard.formDisabled` instead.\n   */\n  ng1FormRef?: any;\n}\n\n/**\n * An lifecycle hook which is called before an configuration is saved.\n */\nexport interface OnBeforeSave {\n  /**\n   * Called before a configuration object is saved. The function can be used to manipulate the\n   * passed config object or to cancel the saving (return false or Observable<boolean>).\n   */\n  onBeforeSave(config?: any): boolean | Promise<boolean> | Observable<boolean>;\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, Observable, of, Subject } from 'rxjs';\nimport { filter, mergeMap, take } from 'rxjs/operators';\nimport { ExtensionPoint, fromFactories } from '../common/extension-hooks';\nimport { StateService } from '../common/state-service.abstract';\nimport {\n  DynamicComponentDefinition,\n  HOOK_COMPONENT,\n  HOOK_COMPONENTS\n} from './dynamic-component.model';\n\ndeclare const __MODE__: string;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicComponentService extends StateService\n  implements ExtensionPoint<DynamicComponentDefinition> {\n  items$: Observable<DynamicComponentDefinition[]>;\n  readonly refreshTrigger = new Subject();\n  readonly state$ = new BehaviorSubject<Set<DynamicComponentDefinition>>(\n    new Set<DynamicComponentDefinition>()\n  );\n\n  constructor(private injector: Injector, router: Router) {\n    super();\n\n    this.items$ = fromFactories(\n      [() => this.injector.get(HOOK_COMPONENTS, []), () => this.getComponentsViaDeprecatedHook()],\n      router,\n      false\n    );\n    this.items$.subscribe(cmps => {\n      cmps.forEach(cmp => {\n        this.state.add(cmp);\n      });\n      this.emitNewState();\n    });\n  }\n\n  getComponentsViaDeprecatedHook() {\n    const componentsViaDeprecatedHook: DynamicComponentDefinition[] = this.injector.get(\n      HOOK_COMPONENT,\n      []\n    ) as DynamicComponentDefinition[];\n    if (\n      componentsViaDeprecatedHook &&\n      componentsViaDeprecatedHook.length &&\n      __MODE__ !== 'production'\n    ) {\n      console.warn('HOOK_COMPONENT is now deprecated. Use HOOK_COMPONENTS instead.');\n    }\n\n    return componentsViaDeprecatedHook;\n  }\n\n  refresh() {\n    this.refreshTrigger.next(1);\n  }\n\n  get state() {\n    return this.state$.value;\n  }\n\n  /**\n   * Returns a component by it's id as an observable.\n   * @param id The id of the component.\n   */\n  getById$(id) {\n    return this.state$.pipe(\n      filter((cmps: Set<DynamicComponentDefinition>) => cmps.size > 0),\n      mergeMap((cmps: Set<DynamicComponentDefinition>) =>\n        of(Array.from(cmps).find(cmp => cmp.id === id))\n      ),\n      take(1)\n    );\n  }\n\n  add(component: DynamicComponentDefinition) {\n    this.state.add(component);\n    this.emitNewState();\n  }\n\n  remove(component: DynamicComponentDefinition) {\n    this.state.delete(component);\n    this.emitNewState();\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewChild,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ComponentRef\n} from '@angular/core';\nimport {\n  DynamicComponent,\n  DynamicComponentDefinition,\n  OnBeforeSave\n} from './dynamic-component.model';\nimport { DynamicComponentService } from './dynamic-component.service';\nimport { of, isObservable, Observable } from 'rxjs';\nimport { isUndefined } from 'lodash-es';\n\n/**\n * C8y dynamic component.\n * ## Example:\n *\n * register component in HOOK in module:\n * ```typescript\n *  import { HOOK_COMPONENT } from '@c8y/ngx-components';\n *\n * @NgModule({\n *  ...,\n *  providers: [{\n *      provide: HOOK_COMPONENT,\n *      multi: true,\n *      useValue: [{\n *          id: 'test-component',\n *          label: 'My test component',\n *          description: 'this is test component',\n *          component: TestComponent\n *      }],\n *  ...\n *  }]\n *\n * ```\n * Showing dynamic component:\n * ```html\n * <c8y-dynamic-component [componentId]=\"'test-component'\" [config]=\"config\"></c8y-dynamic-component>\n * ```\n */\n@Component({\n  selector: 'c8y-dynamic-component',\n  templateUrl: './dynamic-component.component.html'\n})\nexport class DynamicComponentComponent {\n  /**\n   * The ID of the registered component. It needs to be a component that is hooked\n   * with the HOOK_COMPONENTS extension hook.\n   */\n  @Input() componentId: string;\n  /**\n   * The configuration to pass.\n   */\n  @Input() config: any;\n  /**\n   * DynamicComponents can have two modes, an edit (config) and an view (component) mode.\n   * By default it is shown in the component mode.\n   */\n  @Input() mode: 'config' | 'component' = 'component';\n  /**\n   * Disable this to hide the error that is shown if the component was not found.\n   */\n  @Input() notFoundError = true;\n  /**\n   * @ignore\n   */\n  @ViewChild('host', { read: ViewContainerRef, static: true }) host: ViewContainerRef;\n  /**\n   * @ignore\n   */\n  error: any;\n  /**\n   * @ignore\n   */\n  expandErrorDetails = false;\n  private componentRef: ComponentRef<Component>;\n\n  /**\n   * @ignore only DI\n   */\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private dynamicComponentService: DynamicComponentService\n  ) {}\n\n  /**\n   * Calls the dynamic component life cycle hook. Currently only\n   * supporting onBeforeSave, a hook which is called before a config component\n   * is saved.\n   */\n  callLifeCycleHooks() {\n    return this.callOnBeforeSaveHook();\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnChanges(): void {\n    this.dynamicComponentService\n      .getById$(this.componentId)\n      .subscribe(cmp => this.loadComponent(cmp));\n  }\n\n  private loadComponent(dynamicComponent: DynamicComponentDefinition) {\n    try {\n      this.error = undefined;\n      const componentFactory = this.componentFactoryResolver.resolveComponentFactory(\n        this.mode === 'component' ? dynamicComponent.component : dynamicComponent.configComponent\n      );\n      this.host.clear();\n      this.componentRef = this.host.createComponent(componentFactory);\n      (this.componentRef.instance as DynamicComponent).config = this.config;\n    } catch (ex) {\n      this.error = ex;\n    }\n  }\n\n  private callOnBeforeSaveHook() {\n    if (!this.componentRef) {\n      return of(true);\n    }\n    const hook = (this.componentRef.instance as OnBeforeSave).onBeforeSave;\n    if (hook) {\n      const result = hook.call(this.componentRef.instance, this.config);\n      if (isUndefined(result)) {\n        return of(true);\n      }\n      return isObservable(result) ? result : (of(result) as Observable<boolean>);\n    }\n    return of(true);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { DynamicComponentComponent } from './dynamic-component.component';\nimport { DynamicComponentService } from './dynamic-component.service';\nimport { I18nModule } from '../i18n/i18n.module';\n\n@NgModule({\n  declarations: [DynamicComponentComponent],\n  imports: [CommonModule, CollapseModule, RouterModule.forChild([]), I18nModule],\n  exports: [DynamicComponentComponent],\n  providers: [DynamicComponentService]\n})\nexport class DynamicComponentModule {}\n","import { Component, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'c8y-dashboard-child-action',\n  templateUrl: './dashboard-child-action.component.html'\n})\nexport class DashboardChildActionComponent {\n  @ViewChild('template', { static: false }) template: any;\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'c8y-dashboard-child-title',\n  templateUrl: './dashboard-child-title.component.html'\n})\nexport class DashboardChildTitleComponent {}\n","import {\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostBinding,\n  Input,\n  AfterContentInit,\n  QueryList,\n  forwardRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  ChangeDetectionStrategy\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { DashboardChildComponent } from './dashboard-child.component';\nimport { DashboardChange } from './dashboard.model';\n\n/**\n * Displays a CSS grid which is customizable by the customer. You can set\n * `c8y-dashboard-child`-components on it or position any element on it by\n * setting the grid CSS properties. On change (resize, or rearrange) the\n * component emits an change event.\n *\n * ## Example:\n *\n * ```html\n * <c8y-title>Hello from outlet</c8y-title>\n *\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"addRandom()\"><i c8yIcon=\"plus-circle\"></i> Add random</button>\n * </c8y-action-bar-item>\n * <c8y-action-bar-item [placement]=\"'right'\">\n *   <button class=\"btn btn-link\" (click)=\"isFrozen = !isFrozen\">\n *     <i [c8yIcon]=\"isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *   </button>\n * </c8y-action-bar-item>\n *\n * <c8y-dashboard (dashboardChange)=\"dashboardChange($event)\">\n *   <c8y-dashboard-child\n *     [isFrozen]=\"isFrozen\"\n *     title=\"dynamic\"\n *     *ngFor=\"let widget of widgets\"\n *     #current\n *   >\n *     x: {{ current.x }}<br />\n *     y: {{ current.y }}<br />\n *     width: {{ current.width }}<br />\n *     height: {{ current.height }}<br />\n *   </c8y-dashboard-child>\n *   <c8y-dashboard-child\n *     #cpWidget\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"1\"\n *     [width]=\"3\"\n *     [height]=\"2\"\n *     [data]=\"widget\"\n *     [class]=\"'card card-dashboard panel-title-regular panel-content-branded panel-title-overlay'\"\n *   >\n *     <c8y-dashboard-child-title>\n *       <span>World!</span>\n *     </c8y-dashboard-child-title>\n *     x: {{ cpWidget.x }}<br />\n *     y: {{ cpWidget.y }}<br />\n *     width: {{ cpWidget.width }}<br />\n *     height: {{ cpWidget.height }}<br />\n *   </c8y-dashboard-child>\n *   <c8y-dashboard-child\n *     #cpWidget2\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"8\"\n *     [y]=\"1\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card card-dashboard panel-content-dark'\"\n *   >\n *     <c8y-dashboard-child-title>\n *       <span>Hello!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget2.isFrozen = !cpWidget2.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget2.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget2.x }}<br />\n *     y: {{ cpWidget2.y }}<br />\n *     width: {{ cpWidget2.width }}<br />\n *     height: {{ cpWidget2.height }}<br />\n *   </c8y-dashboard-child>\n *\n *   <c8y-dashboard-child\n *     #cpWidget3\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"3\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card-dashboard panel-content-transparent'\"\n *   >\n *     <c8y-dashboard-child-title *ngIf=\"showTitle\">\n *       <span>Transparent!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"showTitle = !showTitle; (false)\">\n *         <i [c8yIcon]=\"'heading'\"></i> Hide/show title\n *       </a>\n *     </c8y-dashboard-child-action>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget3.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget3.x }}<br />\n *     y: {{ cpWidget3.y }}<br />\n *     width: {{ cpWidget3.width }}<br />\n *     height: {{ cpWidget3.height }}<br />\n *   </c8y-dashboard-child>\n * </c8y-dashboard>\n * ```\n */\n@Component({\n  selector: 'c8y-dashboard',\n  templateUrl: './dashboard.component.html',\n  host: {\n    class: 'c8y-grid-dashboard dashboard-grid'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DashboardComponent implements AfterContentInit {\n  /**\n   * All children in that dashboard.\n   */\n  @ContentChildren(forwardRef(() => DashboardChildComponent)) children: QueryList<\n    DashboardChildComponent\n  >;\n\n  /**\n   * The amount of columns on that dashboard.\n   */\n  @Input() columns = 12;\n\n  /**\n   * The spacing between each children in pixel.\n   */\n  @Input() gap = 12;\n\n  /**\n   * The amount of rows to dusplay. Set to auto to\n   * auto extend the rows.\n   */\n  @Input() rows: number | 'auto' = 'auto';\n\n  /**\n   * An event fired if the dashboard was changed.\n   */\n  @Output() dashboardChange = new EventEmitter<DashboardChange>();\n\n  dashboardRect;\n  private lastRow = 1;\n  private readonly DEFAULT_ROW_SIZE = 68;\n\n  /**\n   * The current column size.\n   */\n  get columnSize() {\n    return this.dashboardRect.width / this.columns;\n  }\n\n  /**\n   * The current row size.\n   */\n  get rowSize() {\n    return this.rows === 'auto' ? this.DEFAULT_ROW_SIZE : this.calculateRowSize();\n  }\n\n  /**\n   * Returns all positioning styles. Nasty workaround for that issue:\n   * https://github.com/angular/angular/issues/9343\n   */\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `\n        -ms-grid-columns: (1fr)[${this.columns}];\n        grid-template-columns: repeat(${this.columns}, 1fr);\n        ${this.rows !== 'auto' ? `grid-template-rows: repeat(${this.rows}, 1fr);` : ''}\n        grid-auto-rows: ${this.rowSize + this.gap}px;\n        -ms-grid-rows: (${this.rowSize + this.gap}px)[${\n        this.rows === 'auto' ? this.lastRow : this.rows\n      }];\n        margin: -${this.gap}px;\n      `\n    );\n  }\n\n  constructor(private element: ElementRef, private sanitizer: DomSanitizer) {}\n\n  ngAfterContentInit(): void {\n    this.onResize();\n    this.getLastRow();\n  }\n\n  @HostListener('window:resize')\n  onResize() {\n    this.updateRectSize();\n  }\n\n  /**\n   * Gets the last row\n   * (mainly for IE11 which doesn't support grid-auto-rows CSS property)\n   */\n  getLastRow() {\n    let lastRow = 1;\n    this.children.forEach(widget => {\n      if (lastRow < widget.y + widget.width) {\n        lastRow = widget.y + widget.width;\n      }\n    });\n    this.lastRow = lastRow + 1;\n  }\n\n  /**\n   * Updates the current rect size of the dashboard.\n   */\n  updateRectSize() {\n    const ele = this.element.nativeElement as HTMLElement;\n    this.dashboardRect =  ele.getBoundingClientRect();\n  }\n\n  emitChange(widget: DashboardChildComponent) {\n    this.dashboardChange.emit({ source: widget, children: this.children.toArray() });\n  }\n\n  private calculateRowSize() {\n    return this.dashboardRect.height / (this.rows as number);\n  }\n}\n","import { CdkDragMove } from '@angular/cdk/drag-drop';\nimport { sortBy } from 'lodash-es';\nimport { pipe } from 'rxjs';\nimport { distinctUntilChanged, expand, filter, map, tap } from 'rxjs/operators';\nimport { DashboardComponent } from './dashboard.component';\nimport {\n  DashboardChildDimension,\n  DashboardChildResizeDimension,\n  DashboardChildArrangement\n} from './dashboard.model';\nimport { DashboardChildComponent } from './dashboard-child.component';\n\nexport class DashboardChildChange {\n  child: DashboardChildComponent;\n  children: DashboardChildComponent[];\n  private dashboard: DashboardComponent;\n\n  private readonly MIN_WIDTH = 2;\n  private MIN_HEIGHT = 1;\n  private readonly PIXEL_SIZE_THRESHOLD = 10;\n\n  private diffX = 0;\n  private diffY = 0;\n\n  constructor(childToChange: DashboardChildComponent) {\n    this.dashboard = childToChange.dashboard;\n    this.children = childToChange.dashboard.children\n      ? childToChange.dashboard.children.filter(child => childToChange !== child)\n      : [];\n    this.child = childToChange;\n  }\n\n  get resize$() {\n    return this.child.dragSource.moved.pipe(\n      map(move => this.getPixelSize(move)),\n      tap(resizeDimension => this.setPixelSize(resizeDimension)),\n      map(resizeDimension => this.getDimensionSize(resizeDimension)),\n      distinctUntilChanged(\n        (prev, next) => prev.width === next.width && prev.height === next.height\n      ),\n      map(dimension => this.setDimension(dimension)),\n      this.arrangePipe()\n    );\n  }\n\n  get drag$() {\n    return this.child.dragSource.moved.pipe(\n      map(move => this.getDimensionPosition(move)),\n      filter(\n        dimension =>\n          dimension.x >= 0 &&\n          dimension.x <= this.dashboard.columns - this.child.width &&\n          dimension.y >= 0\n      ),\n      distinctUntilChanged((prev, next) => prev.x === next.x && prev.y === next.y),\n      this.arrangePipe()\n    );\n  }\n\n  findFreeDimension() {\n    let y = -1;\n    let x = 0;\n    let found = false;\n    const { width, height } = this.child;\n    if (width > this.dashboard.columns) {\n      throw new Error('The child does not fit on the current dashboard.');\n    }\n    do {\n      x = 0;\n      y++;\n      while (x + width <= this.dashboard.columns) {\n        if (this.getCollided({ x, y, width, height }).length === 0) {\n          found = true;\n          break;\n        }\n        x++;\n      }\n    } while (!found);\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  collapseUpAll(): void {\n    return sortBy([this.child, ...this.children], ['y']).forEach(w => {\n      const ds = new DashboardChildChange(w);\n      const newPosition = ds.collapseUp(w);\n      ds.setDimension(newPosition);\n    });\n  }\n\n  arrangeAll(arrange: DashboardChildArrangement) {\n    const { current, scan, spacing, origin } = arrange;\n    const collided = this.getCollided(current, sortBy(scan, ['y']));\n    return collided.map(child => {\n      const ds = new DashboardChildChange(child);\n      ds.setDimension({ ...child, y: spacing });\n      return {\n        current: child,\n        scan: scan.filter(w => w !== child),\n        spacing: child.y + child.height,\n        origin\n      };\n    });\n  }\n\n  private arrangePipe() {\n    return pipe(\n      map(\n        (dimension: DashboardChildDimension) =>\n          ({\n            current: dimension,\n            scan: this.children,\n            spacing: dimension.y + dimension.height,\n            origin: { ...dimension }\n          } as DashboardChildArrangement)\n      ),\n      expand((dimensions: DashboardChildArrangement) => this.arrangeAll(dimensions)),\n      map(({ origin }) => origin),\n      map(dimension => this.setDimension(dimension, true)),\n      tap(() => this.collapseUpAll()),\n      tap(() => this.dashboard.getLastRow())\n    );\n  }\n\n  private collapseUp(dimension: DashboardChildDimension) {\n    let { y } = dimension;\n    while (y > 0) {\n      if (this.getCollided({ ...dimension, y: y - 1 }).length !== 0) {\n        break;\n      }\n      y--;\n    }\n    return { ...dimension, y };\n  }\n\n  private setDimension(dimension: DashboardChildDimension, notIfColliding = false) {\n    if (notIfColliding && this.getCollided(dimension).length > 0) {\n      return;\n    }\n\n    this.child.x = dimension.x;\n    this.child.y = dimension.y;\n    if (\n      dimension.width >= this.MIN_WIDTH &&\n      dimension.x + dimension.width <= this.dashboard.columns\n    ) {\n      this.child.width = dimension.width;\n    } else if (dimension.width < this.MIN_WIDTH) {\n      dimension.width = this.MIN_WIDTH;\n    } else {\n      dimension.width = this.dashboard.columns - dimension.x;\n    }\n    if (dimension.height >= this.MIN_HEIGHT) {\n      this.child.height = dimension.height;\n    } else {\n      dimension.height = this.MIN_WIDTH;\n    }\n    return dimension;\n  }\n\n  private setPixelSize({ width, height }) {\n    if (width >= this.dashboard.columnSize * this.MIN_WIDTH - this.dashboard.gap) {\n      this.child.pxWidth = width + this.PIXEL_SIZE_THRESHOLD;\n    }\n    if (height >= this.dashboard.rowSize * this.MIN_HEIGHT - this.dashboard.gap) {\n      this.child.pxHeight = height + this.PIXEL_SIZE_THRESHOLD;\n    }\n  }\n\n  private getPixelSize(moveEvent: CdkDragMove) {\n    const draggedElement = moveEvent.source.element.nativeElement.parentNode as HTMLElement;\n    if (!this.diffX) {\n      const rect = draggedElement.getBoundingClientRect();\n      this.diffX =  rect.left;\n      this.diffY =  rect.top;\n    }\n    const { x, y } = moveEvent.pointerPosition;\n    const width = Math.round(x - this.diffX);\n    const height = Math.round(y - this.diffY);\n    return { width, height, pointer: { x, y } } as DashboardChildResizeDimension;\n  }\n\n  private getDimensionSize(resizePosition: DashboardChildResizeDimension) {\n    const { x, y } = this.child;\n    const ds = this.dashboard.dashboardRect;\n    const column = this.dashboard.columnSize;\n    const row = this.dashboard.rowSize + this.dashboard.gap;\n    const width =\n      Math.round((resizePosition.pointer.x - ds.left + this.dashboard.gap) / column) - x;\n    const height = Math.round((resizePosition.pointer.y - ds.top + this.dashboard.gap) / row) - y;\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  private getDimensionPosition(moveEvent: CdkDragMove) {\n    const draggedElement = moveEvent.source.element.nativeElement.nextElementSibling;\n    if (!this.diffX) {\n      const rect = draggedElement.getBoundingClientRect();\n      this.diffX =  moveEvent.pointerPosition.x - rect.left;\n      this.diffY =  moveEvent.pointerPosition.y - rect.top;\n    }\n\n    const left = moveEvent.pointerPosition.x - this.diffX;\n    const top = moveEvent.pointerPosition.y - this.diffY;\n    const { width, height } = this.child;\n    const ds = this.dashboard.dashboardRect;\n    const column = this.dashboard.columnSize;\n    const row = this.dashboard.rowSize + this.dashboard.gap / 2;\n    const x = Math.round((left - ds.left) / column);\n    const y = Math.round((top - ds.top) / row);\n    return { x, y, width, height } as DashboardChildDimension;\n  }\n\n  private doesCollide(a: DashboardChildDimension, b: DashboardChildDimension) {\n    if (b.x === undefined) {\n      return false;\n    }\n    return !(\n      a.y + a.height - 1 < b.y ||\n      a.y > b.y + b.height - 1 ||\n      a.x + a.width - 1 < b.x ||\n      a.x > b.x + b.width - 1\n    );\n  }\n\n  private getCollided(currentDimension: DashboardChildDimension, dimensions = this.children) {\n    const collided = dimensions.filter(dimension => this.doesCollide(currentDimension, dimension));\n    return collided;\n  }\n}\n","import { CdkDrag, CdkDragEnd, CdkDragStart } from '@angular/cdk/drag-drop';\nimport {\n  Component,\n  forwardRef,\n  HostBinding,\n  Inject,\n  Input,\n  ContentChildren,\n  Output,\n  EventEmitter,\n  ElementRef\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription } from 'rxjs';\nimport { DashboardComponent } from './dashboard.component';\nimport { DashboardChildDimension, Widget } from './dashboard.model';\nimport { DashboardChildChange } from './dashboard-child-change';\nimport { DashboardChildActionComponent } from './dashboard-child-action.component';\n\n/**\n * A dashboard child allows to position elements\n * correctly on a grid. The user can then resize and\n * rearrange the elements, as long as they are not `frozen`.\n *\n * By setting `c8y-dashboard-child-actions` and\n * `c8y-dashboard-child-title` on the element you can add\n * custom actions or a custom title to the current child.\n *\n * By adding the correct branded classes, you can define\n * the look and feel of the child. By default it is displayed\n * as a card.\n *\n * Example:\n *\n * ```html\n *   <c8y-dashboard-child\n *     #cpWidget3\n *     [isFrozen]=\"isFrozen\"\n *     [x]=\"0\"\n *     [y]=\"3\"\n *     [width]=\"4\"\n *     [height]=\"4\"\n *     [class]=\"'card-dashboard panel-content-transparent'\"\n *   >\n *     <c8y-dashboard-child-title *ngIf=\"showTitle\">\n *       <span>Transparent!</span>\n *     </c8y-dashboard-child-title>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"showTitle = !showTitle; (false)\">\n *         <i [c8yIcon]=\"'heading'\"></i> Hide/show title\n *       </a>\n *     </c8y-dashboard-child-action>\n *     <c8y-dashboard-child-action>\n *       <a href=\"\" (click)=\"cpWidget3.isFrozen = !cpWidget3.isFrozen; (false)\">\n *         <i [c8yIcon]=\"cpWidget3.isFrozen ? 'lock' : 'unlock'\"></i> Toggle freeze\n *       </a>\n *     </c8y-dashboard-child-action>\n *     x: {{ cpWidget3.x }}<br />\n *     y: {{ cpWidget3.y }}<br />\n *     width: {{ cpWidget3.width }}<br />\n *     height: {{ cpWidget3.height }}<br />\n *   </c8y-dashboard-child>\n * ```\n */\n@Component({\n  selector: 'c8y-dashboard-child',\n  templateUrl: './dashboard-child.component.html',\n  host: {\n    class: 'dashboard-grid-child'\n  }\n})\nexport class DashboardChildComponent implements DashboardChildDimension {\n  @ContentChildren(DashboardChildActionComponent) actions = [];\n  dragSource: CdkDrag;\n  isResize = false;\n  isDragging = false;\n  klasses = {};\n\n  _pxWidth = '100%';\n  _pxHeight = '100%';\n\n  /**\n   * The x position of the child.\n   */\n  @Input() x;\n\n  /**\n   * The y position of the child.\n   */\n  @Input() y;\n\n  /**\n   * The width of the component in grid-columns.\n   */\n  @Input() width = 1;\n\n  /**\n   * The height of the component in grid-rows.\n   */\n  @Input() height = 1;\n\n  /**\n   * The data object can be used as a dataTransfer object for events of the child.\n   */\n  @Input() data: Widget | any;\n\n  /**\n   * The margin of the child in pixel.\n   */\n  @Input() margin = 12;\n\n  /**\n   * If a dashboard is frozen, all children cannot be moved\n   * or resized.\n   */\n  @Input() isFrozen = false;\n\n  /**\n   * The child content is initialized, as soon it is scrolled into viewport\n   */\n  @Input() useIntersection = false;\n\n  /**\n   * An event fired if a child change is started (dragging or resizing)\n   */\n  @Output() changeStart = new EventEmitter<DashboardChildComponent>();\n\n  /**\n   * An event fired if a child change is ended\n   */\n  @Output() changeEnd = new EventEmitter<DashboardChildComponent>();\n\n  /**\n   * All classes added to this child\n   */\n  @Input()\n  class: string[] | { [key: string]: boolean } = {};\n\n  /**\n   * Updates the pixel width of the child (used for resizing)\n   */\n  set pxWidth(value) {\n    this._pxWidth = `${value}px`;\n  }\n\n  /**\n   * Updates the pixel height of the child (used for resizing)\n   */\n  set pxHeight(value) {\n    this._pxHeight = `${value}px`;\n  }\n\n  /**\n   * An indicator if the child is intersected (that mean visible for the user)\n   */\n  intersected = false;\n\n  /**\n   * nasty workaround for that issue:\n   * https://github.com/angular/angular/issues/9343\n   */\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    return this.sanitizer.bypassSecurityTrustStyle(`\n    grid-column-start: ${this.x + 1};\n    -ms-grid-column: ${this.x + 1};\n    grid-row-start: ${this.y + 1};\n    -ms-grid-row: ${this.y + 1};\n    grid-column-end: span ${this.width};\n    -ms-grid-column-span: ${this.width};\n    grid-row-end: span ${this.height};\n    -ms-grid-row-span: ${this.height};\n    display: block;\n    margin: ${this.margin || 12}px;\n    order: ${this.getOrder()};\n    `);\n  }\n\n  /**\n   * The observable subscription which is listen to\n   * on changes (drag or resize).\n   */\n  changeSubscription: Subscription;\n\n  constructor(\n    @Inject(forwardRef(() => DashboardComponent)) public dashboard: DashboardComponent,\n    private sanitizer: DomSanitizer,\n    private element: ElementRef\n  ) {}\n\n  ngOnChanges(): void {\n    this.klasses = {\n      card: true,\n      'card-dashboard': true,\n      disabled: this.isFrozen,\n      'on-resize': this.isResize,\n      ...this.class\n    };\n  }\n\n  ngOnInit(): void {\n    if (this.x === undefined || this.y === undefined) {\n      setTimeout(() => this.setDynamicDimension());\n    }\n    if (this.useIntersection && 'IntersectionObserver' in window) {\n      const intersectionObserver = new IntersectionObserver(\n        event => (this.intersected = this.childInView(event[0], intersectionObserver))\n      );\n      intersectionObserver.observe(this.element.nativeElement);\n    } else {\n      this.intersected = true;\n    }\n  }\n\n  setDynamicDimension() {\n    const ds = new DashboardChildChange(this);\n    const { x, y } = ds.findFreeDimension();\n    this.x = x;\n    this.y = y;\n\n    this.dashboard.emitChange(this);\n  }\n\n  resizeStarted($event: CdkDragStart) {\n    this.isResize = true;\n    this.dashboard.updateRectSize();\n    this.dragSource = $event.source;\n    const positioning = new DashboardChildChange(this);\n    this.changeSubscription = positioning.resize$.subscribe();\n    this.changeStart.emit(this);\n    this.ngOnChanges();\n  }\n\n  dragStarted($event: CdkDragStart) {\n    this.isDragging = true;\n    this.dashboard.updateRectSize();\n    this.dragSource = $event.source;\n    const positioning = new DashboardChildChange(this);\n    this.changeSubscription = positioning.drag$.subscribe();\n    this.changeStart.emit(this);\n  }\n\n  reset($event?: CdkDragEnd) {\n    this.isResize = false;\n    this.isDragging = false;\n    this._pxWidth = '100%';\n    this._pxHeight = '100%';\n    this.ngOnChanges();\n    if ($event) {\n      $event.source.reset();\n    }\n    if (this.changeSubscription) {\n      this.changeSubscription.unsubscribe();\n      this.dashboard.emitChange(this);\n      this.changeEnd.emit(this);\n    }\n  }\n\n  private getOrder() {\n    return `${Math.round((this.y + (this.x + 1) / 100) * 100)}`;\n  }\n\n  private childInView(event, observer) {\n    if (event.isIntersecting) {\n      observer.unobserve(event.target);\n      return true;\n    }\n    return false;\n  }\n}\n","import { Component, EventEmitter, Input, Output, SimpleChanges } from '@angular/core';\nimport { DashboardSettings, Widget, WidgetChange, DashboardChange } from './dashboard.model';\nimport { DashboardComponent } from './dashboard.component';\nimport { BreadcrumbItem } from '../..';\n\n@Component({\n  selector: 'c8y-widgets-dashboard',\n  templateUrl: './widgets-dashboard.component.html',\n  host: {\n    style: `\n      display: block;\n    `,\n    class: 'dashboard c8y-grid-dashboard'\n  }\n})\nexport class WidgetsDashboardComponent {\n  @Input()\n  widgets: Widget[];\n\n  @Input()\n  context: any;\n\n  @Input()\n  contextDashboard: any;\n\n  @Input('settings')\n  set _settings(settings: Partial<DashboardSettings>) {\n    this.settings = { ...this.settings, ...settings };\n  }\n\n  @Input()\n  breadcrumb: BreadcrumbItem;\n\n  settings: DashboardSettings = {\n    isFrozen: false,\n    isDisabled: false,\n    widgetMargin: 12,\n    translateWidgetTitle: false,\n    defaultHeight: 4,\n    defaultWidth: 4,\n    allowFullscreen: false,\n    canDelete: true,\n    isLoading: false,\n  };\n\n  @Output()\n  onAddWidget: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onEditWidget: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onDeleteWidget: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onChangeDashboard: EventEmitter<DashboardChange> = new EventEmitter();\n\n  @Output()\n  onEditDashboard: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onDeleteDashboard: EventEmitter<DashboardComponent> = new EventEmitter();\n\n  @Output()\n  onFreeze: EventEmitter<DashboardSettings> = new EventEmitter();\n\n  @Output()\n  onChangeStart: EventEmitter<WidgetChange> = new EventEmitter();\n\n  @Output()\n  onChangeEnd: EventEmitter<WidgetChange> = new EventEmitter();\n\n  toggleFullscreen() {\n    const elem = document.body as any;\n    const doc = document as any;\n    if (!this.fullScreen()) {\n      if (elem.requestFullscreen) {\n        elem.requestFullscreen();\n      } else if (elem.msRequestFullscreen) {\n        elem.msRequestFullscreen();\n      } else if (elem.mozRequestFullScreen) {\n        elem.mozRequestFullScreen();\n      } else if (elem.webkitRequestFullscreen) {\n        elem.webkitRequestFullscreen((Element as any).ALLOW_KEYBOARD_INPUT);\n      }\n    } else if (doc.exitFullscreen) {\n      doc.exitFullscreen();\n    } else if (doc.msExitFullscreen) {\n      doc.msExitFullscreen();\n    } else if (doc.mozCancelFullScreen) {\n      doc.mozCancelFullScreen();\n    } else if (doc.webkitExitFullscreen) {\n      doc.webkitExitFullscreen();\n    }\n  }\n\n  fullScreen() {\n    const doc: any = document;\n    return !!(\n      doc.fullscreenElement ||\n      doc.mozFullScreenElement ||\n      doc.webkitFullscreenElement ||\n      doc.msFullscreenElement\n    );\n  }\n}\n","import { DragDropModule } from '@angular/cdk/drag-drop';\nimport { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\nimport { CommonModule } from '../common/common.module';\nimport { DynamicComponentModule } from '../dynamic-component/dynamic-component.module';\nimport { DashboardChildActionComponent } from './dashboard-child-action.component';\nimport { DashboardChildTitleComponent } from './dashboard-child-title.component';\nimport { DashboardChildComponent } from './dashboard-child.component';\nimport { DashboardComponent } from './dashboard.component';\nimport { WidgetsDashboardComponent } from './widgets-dashboard.component';\nimport { HeaderModule } from '../header/header.module';\nimport { DocsModule } from '../docs/docs.module';\nimport { BreadcrumbModule } from '../breadcrumb/breadcrumb.module';\n\n@NgModule({\n  declarations: [\n    DashboardChildComponent,\n    DashboardComponent,\n    DashboardChildTitleComponent,\n    DashboardChildActionComponent,\n    WidgetsDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    ActionBarModule,\n    DynamicComponentModule,\n    DragDropModule,\n    BsDropdownModule.forRoot(),\n    HeaderModule,\n    DocsModule,\n    BreadcrumbModule,\n  ],\n  exports: [\n    DashboardComponent,\n    DashboardChildComponent,\n    DashboardChildTitleComponent,\n    DashboardChildActionComponent,\n    WidgetsDashboardComponent\n  ]\n})\nexport class DashboardModule {}\n","import { Directive, Input, TemplateRef } from '@angular/core';\nimport { StepState } from '@angular/cdk/stepper';\n\n/**\n * Template to be used to override the icons inside the step header.\n */\n@Directive({\n  selector: 'ng-template[c8yStepperIcon]'\n})\nexport class C8yStepperIcon {\n  /** Name of the icon to be overridden. */\n  @Input('c8yStepperIcon') name: StepState;\n\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","import {\n  Component,\n  TemplateRef,\n  Input,\n  Output,\n  ContentChildren,\n  QueryList,\n  AfterContentInit,\n  OnDestroy,\n  EventEmitter\n} from '@angular/core';\nimport { CdkStepper, StepState, STEP_STATE } from '@angular/cdk/stepper';\nimport { C8yStepperIcon } from './stepper-icon.directive';\nimport { Subject, Subscription } from 'rxjs';\n\n/**\n * C8yStepper extends the CdkStepper. You can use cdk based functionality and inputs.\n * Additional to that you are able to modify the behavior and also the look and feel when\n * using the C8yStepper.\n *\n * The C8yStepper is used to present any step-based process to the user.\n * A stepper, C8yStepper and/or CdkStepper is the parent of cdk-steps.\n * Each cdk-step represents one step in the whole process that you want to provide to the user.\n *\n * The C8yStepper will create, based on the given cdk-steps, a kind of stepper-progress which looks like this:\n * (1)---(2)---(3)---(n)\n * The stepper will handle the state of each step and provides styles for active steps, done-steps or in edit-mode.\n * You are able to override icons for each step in the stepper-progress with a template. You are also able to activate\n * default-icons for states like 'edit' and 'done'.\n *\n * To force users through every provided step, set the stepper to 'linear'.\n * This will disable the possibility to move for example from step one to step three.\n *\n * Whenever it comes to validation try to use formGroups. It is possible to\n * assign a formGroup to a cdk-step input called [stepControl], which automatically respects the\n * validation-rules that you created for this formGroup. If fields are required but not filled or\n * any other validation, like a pattern, is not matched the formGroup will be invalid. In this case\n * stepping in a linear stepper to the next step gets impossible.\n *\n * If there is the need to execute asynchronous code you have at least two possibilities.\n * First: As you learned, a cdk-step works with formGroups and Validators, so you are able to use\n * asyncValidators as well.\n * Second: The C8yStepper provides an event-emitter onStepChange which is called whenever a step-button (1)--(2)--(n)\n * in the stepper-progress is clicked. The event of this emitter holds the index of the step as number. You can\n * use this EventEmitter to call for example a custom navigate-method which performs first any async-call and then moves\n * on to the given step.\n *\n * @example\n * ```\n * <c8y-stepper\n * (onStepChange)=\"navigate($event)\"\n * [disableDefaultIcons]=\"{ edit: true, done: false }\"\n * [customClasses]=\"['m-l-40', 'm-r-40', 'm-t-32']\"\n * linear\n * >\n * <!-- override icons -->\n * <ng-template c8yStepperIcon=\"final\">\n *   <span [c8yIcon]=\"'hand-peace-o'\"></span>\n * </ng-template>\n *\n * <cdk-step [stepControl]=\"formGroupStepOne\" label=\"Name of the hero\">\n *   <div class=\"m-l-40 m-r-40 m-t-32\">\n *     <h4 class=\"p-b-8\" translate>What is the name of your hero?</h4>\n *     <c8y-form-group>\n *      <div [formGroup]=\"formGroupStepOne\">\n *       <input\n *         class=\"form-control\"\n *         type=\"text\"\n *         formControlName=\"name\"\n *         placeholder=\"Mister X\"\n *         #nameRef\n *         required\n *       />\n *       <c8y-messages>\n *         <c8y-message *ngIf=\"!formGroupStepOne.untouched && !nameRef.value\" translate\n *           >Enter the name of the Superhero</c8y-message\n *         >\n *       </c8y-messages>\n *      </div>\n *     </c8y-form-group>\n *   </div>\n *   <c8y-stepper-buttons></c8y-stepper-buttons>\n * </cdk-step>\n * <cdk-step>\n *  ...\n * </cdk-step state=\"final\">\n * </c8y-stepper>\n * ```\n */\n@Component({\n  selector: 'c8y-stepper',\n  templateUrl: './stepper.component.html',\n  providers: [{ provide: CdkStepper, useExisting: C8yStepper }]\n})\nexport class C8yStepper extends CdkStepper implements AfterContentInit, OnDestroy {\n  /**\n   * Optional\n   * Indicator if icons for edit and done state should be shown in step-header buttons\n   */\n  @Input() disableDefaultIcons?: { edit: boolean; done: boolean } = { edit: true, done: true };\n  /**\n   * Optional\n   * Possibility to add any kind of custom css classes to the step-header\n   */\n  @Input() customClasses?: [string];\n  /**\n   * Will emit the step index number whenever a step-header button was clicked\n   * It listens to the stepIndex Subject.\n   */\n  @Output() onStepChange = new EventEmitter<number>();\n\n  /**\n   * Holding a QueryList of C8yStepperIcons\n   * These are templateRefs which overrides any step-header button icon with matching state of cdk-step\n   *\n   * @example:\n   * ```\n   * <!-- override icons -->\n   *  <ng-template c8yStepperIcon=\"final\">\n   *   <span [c8yIcon]=\"'hand-peace-o'\"></span>\n   *  </ng-template>\n   *\n   * <cdk-step state=\"final\" label=\"Job done!\">\n   *  <div class=\"m-l-40 m-r-40 m-t-32\">\n   *    <h4 class=\"p-b-32\" style=\"text-align: center;\" translate>\n   *     Your Superhero is now ready to save the world!\n   *   </h4>\n   *  </div>\n   *  <c8y-stepper-buttons\n   *    [hidden]=\"!isModal\"\n   *    (onBack)=\"close()\"\n   *    [labels]=\"{ back: 'Got it!' }\"\n   *  ></c8y-stepper-buttons>\n   *  <c8y-stepper-buttons [hidden]=\"isModal\"></c8y-stepper-buttons>\n   * </cdk-step>\n   * ```\n   */\n  @ContentChildren(C8yStepperIcon, { descendants: true }) _icons: QueryList<C8yStepperIcon>;\n\n  /** Consumer-specified template-refs to be used to override the header icons. */\n  _iconOverrides: { [key: string]: TemplateRef<any> } = {};\n\n  private _stepIndex: Subject<number> = new Subject();\n  private _stepIndexSubscription: Subscription;\n\n  ngAfterContentInit() {\n    this._icons.forEach(({ name, templateRef }) => (this._iconOverrides[name] = templateRef));\n    this._stepIndexSubscription = this._stepIndex.subscribe(index => this.onStepChange.emit(index));\n  }\n\n  ngOnDestroy() {\n    if (this._stepIndexSubscription && !this._stepIndexSubscription.closed) {\n      this._stepIndexSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Manipulates the state based on the disabledDefaultIcons Input()\n   * Changing edit or done to false will change the icons within step-header buttons\n   * @param index step index\n   * @param state step state, like 'done', 'edit', 'error'\n   */\n  getIndicatorType(index: number, state: StepState) {\n    const stepState = this._getIndicatorType(index, state);\n    let _state = state;\n    switch (stepState) {\n      case STEP_STATE.EDIT:\n        if (!this.disableDefaultIcons.edit) {\n          _state = STEP_STATE.EDIT;\n        }\n        break;\n\n      case STEP_STATE.DONE:\n        if (!this.disableDefaultIcons.done) {\n          _state = STEP_STATE.DONE;\n        } else {\n          _state = '_done';\n        }\n        break;\n    }\n    return _state;\n  }\n\n  /**\n   * Pushs the step index to the subject\n   * @param index step index\n   */\n  setIndex(index: number) {\n    this._stepIndex.next(index);\n  }\n}\n","import { Component, Input, Output, TemplateRef, EventEmitter } from '@angular/core';\nimport { StepState } from '@angular/cdk/stepper';\n\n@Component({\n  selector: 'c8y-stepper-progress',\n  templateUrl: './stepper-progress.component.html'\n})\nexport class C8yStepperProgress {\n  /** List of overriden icons as TemplateRef. Also default icons could be overriden.\n   *  The given overriden icons will replace an icon with matching state: StepState\n   *\n   * <ng-container\n   * *ngSwitchCase=\"true\"\n   * [ngTemplateOutlet]=\"iconOverrides[state]\"\n   * ></ng-container>\n   *\n   */\n  @Input() iconOverrides: { [key: string]: TemplateRef<any> };\n  /** The index of the current step */\n  @Input() index: number;\n  /** Whether the step is cuurently selected or not  */\n  @Input() selected: boolean;\n  /** The current state of the step */\n  @Input() state: StepState;\n\n  /** Emits the index: number of the step which was clicked */\n  @Output() onStepClicked = new EventEmitter<number>();\n\n  /** Called on click and emits the step index */\n  stepSelected() {\n    this.onStepClicked.emit(this.index);\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport {\n  AfterContentInit,\n  Component,\n  EventEmitter,\n  Host,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { C8yStepper } from './stepper.component';\n\n/**\n * C8yStepperButtons provides a convinient way to have, according to\n * the C8yStepper and each cdk-step, buttons to navigate between steps or to cancel the whole\n * step-process. Buttons rendered with the help of this component will use the branding css.\n *\n * By default all steps with this component in use will render a next button, expect the last step.\n * The other way around, every step using this component will render a back button, expect the first step.\n * To get a cancel button rendered you need to handle the onCancel event.\n * For next and back button you don't need to handle the available events onNext and onBack because default behavior\n * is implemented. The default will just call, according to the button, the stepper.next() or stepper.previous()\n * methods and moves the stepper forth or back. Using the EventEmitter onNext and onBack will emit for you the following\n * object: {stepper: C8yStepper, step: CdkStep}. This is useful if you need to implement custom logic before moving\n * to the next step or sending data to a backend. In this case you need to tell the stepper to move forward or back\n * on your own.\n *\n * With the component input [labels] you can change the label of each button in each step. It takes an object like this:\n * {next?: string, back?: string, cancel?: string}\n *\n * The [pending] input is of type boolean and will enable css animation for the next button when true.\n *\n * If the cdk-step provides a stepControl the component will set the next button disabled when the formGroup\n * behind it is invalid. As long as the [pending] input is true the back and next button is also disabled.\n * This will prevent multiple clicks while running a request or stepping back while a request is ongoing.\n *\n * @example\n * ```\n * <c8y-stepper>\n *  <cdk-step>\n *    <!--\n *      your html code\n *          ...\n *          ...    -->\n *    <c8y-stepper-buttons\n *     (onNext)=\"save()\"\n *     [labels]=\"{ next: 'Save' }\"\n *     [pending]=\"pendingStatus\"\n *     ></c8y-stepper-buttons>\n *  </cdk-step>\n * </c8y-stepper>\n *\n * // in your component:\n * async save() {\n *   this.pendingStatus = true;\n *   // your async request goes here ...\n *   // await something();\n *   this.pendingStatus = false;\n *   this.stepper.next();\n * }\n * ```\n */\n@Component({\n  selector: 'c8y-stepper-buttons',\n  templateUrl: './stepper-buttons.component.html'\n})\nexport class C8yStepperButtons implements AfterContentInit, OnDestroy, OnChanges {\n  /**\n   * Optional\n   * Specify custom labels for each button (cancel, back or next)\n   */\n  @Input() labels?: { cancel?: string; back?: string; next?: string; custom?: string };\n  /**\n   * Optional\n   * Indicates if a request is pending and sets the next button\n   * to disabled when true\n   */\n  @Input() pending?: boolean = false;\n\n  /**\n   * Disabled state of a button\n   */\n  @Input() disabled?: boolean = false;\n\n  /**\n   * EventEmitter which emits when cancel button is clicked\n   */\n  @Output() onCancel = new EventEmitter();\n  /**\n   * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when next button is clicked.\n   */\n  @Output() onNext = new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>();\n\n  /**\n   * EventEmitter which emits {stepper: C8yStepper; step: CdkStep} when back button is clicked.\n   */\n  @Output() onBack = new EventEmitter<{ stepper: C8yStepper; step: CdkStep }>();\n\n  /**\n   * EventEmitter which emits when the optional custom button is clicked\n   */\n  @Output() onCustom = new EventEmitter();\n\n  /**\n   * Indicator which button should be shown.\n   * Based on the cdk-steps within the c8y-stepper\n   * next and back buttons are rendered.\n   */\n  showBtns = {\n    cancel: false,\n    back: false,\n    next: false,\n    custom: false\n  };\n\n  private statusChangeSubscription: Subscription;\n\n  constructor(@Host() private stepper: C8yStepper, @Host() private step: CdkStep) {}\n\n  ngAfterContentInit() {\n    this.showBtns.cancel = this.onCancel.observers.length > 0;\n    this.showBtns.custom = this.onCustom.observers.length > 0;\n\n    if (this.stepper && this.stepper.steps && this.step) {\n      this.showBtns.back = this.stepper.steps.first !== this.step;\n      this.showBtns.next = this.stepper.steps.last !== this.step;\n    }\n\n    if (this.step && this.step.stepControl) {\n      this.disabled = this.step.stepControl.invalid;\n\n      this.statusChangeSubscription = this.step.stepControl.statusChanges.subscribe(status => {\n        this.disabled = this.step.stepControl.invalid;\n      });\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    /**\n     * Disable save/next button while the status is pending\n     * This will prevent multiple clicks and therefore multiple requests\n     */\n    if (changes && changes.pending) {\n      this.disabled = changes.pending.currentValue;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.statusChangeSubscription && !this.statusChangeSubscription.closed) {\n      this.statusChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Gets called when cancel button is clicked.\n   * It will emit immediate.\n   */\n  cancel() {\n    this.onCancel.emit();\n  }\n\n  /**\n   * Gets called when next button is clicked. When onNext EventEmitter has an observer registered\n   * it will emit the following object {stepper: C8yStepper; step: CdkStep}.\n   * Otherwise it will call stepper.next() as default.\n   */\n  next() {\n    if (this.onNext.observers.length > 0) {\n      this.onNext.emit({ stepper: this.stepper, step: this.step });\n    } else {\n      this.stepper.next();\n    }\n  }\n\n  /**\n   * Gets called when back button is clicked. When onBack EventEmitter has an observer registered\n   * it will emit the following object {stepper: C8yStepper; step: CdkStep}.\n   * Otherwise it will call stepper.previous() as default.\n   */\n  back() {\n    this.stepper.selected.completed = false;\n    if (this.onBack.observers.length > 0) {\n      this.onBack.emit({ stepper: this.stepper, step: this.step });\n    } else {\n      this.stepper.previous();\n    }\n  }\n\n  /**\n   * Gets called when the custom button is clicked.\n   * It will emit immediately.\n   */\n  custom() {\n    this.onCustom.emit();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CdkStepperModule, CdkStep, STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { C8yStepper } from './stepper.component';\nimport { CommonModule } from '../common/common.module';\nimport { C8yStepperIcon } from './stepper-icon.directive';\nimport { C8yStepperProgress } from './stepper-progress.component';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { C8yStepperButtons } from './stepper-buttons.component';\n\n/**\n * The angular module definition for c8y-stepper (Wizard).\n * @exports C8yStepper\n * @exports C8yStepperIcon\n * @exports C8yStepperButtons\n * @exports CdkStep\n */\n@NgModule({\n  imports: [CommonModule, CdkStepperModule, TooltipModule],\n  declarations: [C8yStepper, C8yStepperIcon, C8yStepperProgress, C8yStepperButtons],\n  exports: [C8yStepper, CdkStep, C8yStepperIcon, C8yStepperButtons],\n  providers: [\n    {\n      /**\n       * This emables additional states, like: edit, done and error\n       * These states are used to display custom icons, if needed.\n       * Any change in here will most probably result in not showing custom icons anymore\n       */\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: { displayDefaultIndicatorType: false }\n    }\n  ]\n})\nexport class StepperModule {}\n","import { Component, Output, Input, ViewChild, EventEmitter } from '@angular/core';\n\n/**\n * Actions are functions that can be executed on the\n * current list item. They are displayed next to the\n * item and can be grouped in a dropdown.\n *\n * @example\n * ```html\n * <c8y-li>\n *   <c8y-li-action (click)=\"deleteDevice(device.id)\" icon=\"times\">\n *     Delete\n *   </c8y-li-action>\n *   <c8y-li-action (click)=\"(false)\" icon=\"rocket\">\n *     Launch to space\n *   </c8y-li-action>\n * </c8y-li>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-action, c8y-li-action',\n  templateUrl: './list-item-action.component.html'\n})\nexport class ListItemActionComponent {\n  /**\n   * @ignore\n   */\n  @ViewChild('template', { static: false })\n  template: any;\n  /**\n   * The label to display (you can alternatively use\n   * content projection to display the label).\n   */\n  @Input()\n  label: string;\n  /**\n   * The name of the icon to use\n   */\n  @Input()\n  icon: string;\n  /**\n   * An EventEmitter to determine what to do if the\n   * action is triggered.\n   */\n  @Output()\n  click = new EventEmitter<any>();\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * Display collapsed content on a list item. Can be\n * used for more detailed information. Use it with\n * content projection.\n *\n * @example\n * ```html\n * <c8y-li>\n *   <c8y-collapsed>\n *     <strong>I am only visible if extended</strong>\n *   </c8y-collapsed>\n * </c8y-li>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-collapse, c8y-li-collapse',\n  templateUrl: './list-item-collapse.component.html'\n})\nexport class ListItemCollapseComponent {\n  /**\n   * The way how to toggle collapse state.\n   * button (default) - additional button for toggle collapse state\n   * row - toggling collapse state by clicking to entire row.\n   */\n  @Input()\n  collapseWay: 'button' | 'row' = 'button';\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * The footer can be used with either content projection\n * or a simple string as an input.\n *\n * @example\n * ```html\n * <c8y-li>\n *   Content\n *   <c8y-li-footer>I am a footer</c8y-li-footer>\n * </c8y-li>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-footer, c8y-li-footer',\n  templateUrl: './list-item-footer.component.html'\n})\nexport class ListItemFooterComponent {\n  /**\n   * A simple string that can be used instead\n   * of content projection.\n   */\n  @Input()\n  footer: string;\n}\n","import {\n  Component,\n  ContentChild,\n  ElementRef,\n  ContentChildren,\n  HostBinding,\n  Input,\n  Output,\n  EventEmitter,\n  QueryList\n} from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil, filter, tap, delay } from 'rxjs/operators';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\n\n/**\n * A list item is a representation of an item inside a list and\n * can be used to compose different styles in a list (mainly in a\n * <c8y-group-list>-component but also in others like the\n * <c8y-typeahead>-component):\n *  - a list with a footer\n *  - a list with one or multiple actions\n *  - an icon\n *  - a checkbox or radio input\n *\n * The item can be composed via content projection. The following\n * example shows a radio list with an icon, two actions\n * and a footer:\n * ```html\n * <c8y-list-group>\n *   <c8y-li\n *     *c8yFor=\"\n *       let device of devices;\n *       let i = index;\n *     \"\n *   >\n *     <c8y-li-radio (onSelect)=\"updateSelected($event, device)\"></c8y-li-radio>\n *     <c8y-li-icon [icon]=\"'rocket'\"></c8y-li-icon>\n *     {{ i + 1 }}. {{ device.name || '-' }}\n *     <c8y-li-footer>\n *       Device id: <a [routerLink]=\"['/device', device.id]\">{{ device.id }}</a>\n *     </c8y-li-footer>\n *     <c8y-li-action (click)=\"deleteDevice(device.id)\" icon=\"times\">\n *       Delete\n *     </c8y-li-action>\n *     <c8y-li-action (click)=\"(false)\" icon=\"rocket\">\n *       Launch to space\n *     </c8y-li-action>\n *   </c8y-li>\n * </c8y-list-group>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item, c8y-li',\n  templateUrl: './list-item.component.html',\n  host: {\n    class: 'c8y-list__item'\n  }\n})\nexport class ListItemComponent {\n  /**\n   * If set to true, the class \"active\" is added which\n   * indicates that the current row is active.\n   */\n  @Input()\n  @HostBinding('class.active')\n  active: boolean = false;\n\n  /**\n   * Indicates if the current list item is collapsed. You can trigger the collapsing from\n   * any element event by toggling this value.\n   *\n   * @example\n   * ```html\n   * <c8y-li #li (click)=\"li.collapsed = !li.collapsed\">\n   *  Toggle\n   *  <c8y-li-collapse>\n   *    I can be toggled by clicking on the row.\n   *  </c8y-li-collapse\n   * </c8y-li>\n   * ``\n   */\n  @Input()\n  collapsed: boolean = true;\n\n  /**\n   * Indicates if the current list item is selectable.\n   */\n  @Input()\n  selectable: boolean = true;\n\n  /**\n   * An event emitter which is triggered when the user collapses the content\n   * via the chevron on the right.\n   */\n  @Output()\n  collapsedChange = new EventEmitter<boolean>();\n\n  /**\n   * A [[ListItemFooterComponent]] element which can be used to show a footer.\n   * @example\n   * ```html\n   * <c8y-li>\n   *  I am the main content\n   *  <c8y-li-footer>\n   *    I am the footer content\n   *  </c8y-li-footer>\n   * </c8y-li>\n   * ```\n   */\n  @ContentChild(ListItemFooterComponent, { static: false })\n  itemFooter: ListItemFooterComponent;\n\n  /**\n   * [[ListItemActionComponent]] elements which can be used to show an action.\n   * An action is displayed on the right in the dropdown and usually consists of an\n   * icon and a label.\n   * @example\n   * ```html\n   * <c8y-li>\n   *  I am the main content\n   *  <c8y-li-action (click)=\"launchToSpace(device.id)\" icon=\"rocket\">\n   *    Launch\n   *  </c8y-li-action>\n   *  <c8y-li-action (click)=\"deleteDevice(device.id)\" icon=\"times\">\n   *    Delete\n   *  </c8y-li-action>\n   * </c8y-li>\n   * ```\n   */\n  @ContentChildren(ListItemActionComponent)\n  itemActions: QueryList<ListItemActionComponent>;\n\n  /**\n   * [[ListItemCollapseComponent]] elements which can be used to show detail views.\n   * @example\n   * ```html\n   * <c8y-li>\n   *  I am the main content\n   *  <c8y-li-collapse>\n   *    I am detailed content\n   *  </c8y-li-collapse>\n   * </c8y-li>\n   * ```\n   */\n  @ContentChild(ListItemCollapseComponent, { static: false })\n  itemCollapse: ListItemCollapseComponent;\n\n  /**\n   * @ignore\n   */\n  showFooter: boolean = false;\n  /**\n   * @ignore\n   */\n  showActions: boolean = false;\n  /**\n   * @ignore\n   */\n  showCollapse: boolean = false;\n  /**\n   * @ignore\n   */\n  actions: ListItemActionComponent[];\n  /**\n   * @ignore\n   */\n  dropdownUp: boolean = false;\n\n  private pulse$: Subject<boolean> = new Subject<boolean>();\n  private destroy$: Subject<any> = new Subject();\n  private readonly ACTION_ITEM_HEIGHT = 40;\n\n  /**\n   * @ignore\n   */\n  constructor(public element: ElementRef) {}\n\n  /**\n   * @ignore\n   */\n  ngOnInit(): void {\n    this.pulse$\n      .pipe(\n        filter(apply => !!apply),\n        tap(() => this.element.nativeElement.classList.remove('c8y-list--pulse')),\n        delay(100),\n        tap(() => this.element.nativeElement.classList.add('c8y-list--pulse')),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentChecked(): void {\n    this.actions = this.itemActions.toArray();\n    this.showFooter = this.itemFooter != null;\n    this.showActions = this.itemActions.length > 0;\n    this.showCollapse = this.itemCollapse != null;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * A helper function which helps to determine if the dropdown\n   * should toggle up.\n   */\n  showDropdownUp() {\n    const listItemRect: DOMRect = this.element.nativeElement.getBoundingClientRect();\n    const dropdownTop = listItemRect.top;\n    const dropdownHeightWithToggle = (1 + this.itemActions.length) * this.ACTION_ITEM_HEIGHT;\n    const availableHeight = window.innerHeight;\n    const dropdownDownFits = dropdownTop + dropdownHeightWithToggle <= availableHeight;\n    this.dropdownUp = !dropdownDownFits;\n  }\n\n  /**\n   * Toggles the collapse state and emits this state as\n   * collapsedChange output as boolean.\n   * @param $event Pass optional an event to stop propagation.\n   */\n  toggleCollapsed($event?: Event) {\n    if ($event) {\n      $event.stopPropagation();\n    }\n    this.collapsed = !this.collapsed;\n    this.collapsedChange.emit(this.collapsed);\n  }\n\n  /**\n   * Highlights the list-item. This method should be used to show the\n   * user that something within this item was changed.\n   */\n  pulse() {\n    this.pulse$.next(true);\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * The li-body component can be used to define the body.\n * Usually it doesn't need to be used, as it is the default\n * content projected to a <c8y-li>.\n */\n@Component({\n  selector: 'c8y-list-item-body, c8y-li-body',\n  templateUrl: './list-item-body.component.html'\n})\nexport class ListItemBodyComponent {\n  /**\n   * An optional string content.\n   */\n  @Input()\n  body: string;\n}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * A component to display a radio button in a c8y-li. Use it with content projection. It\n * can be used standalone or with an ngModel.\n *\n * @example\n * ```html\n * <c8y-li>\n *   <c8y-li-radio></c8y-li-radio>\n * </c8y-li>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-radio, c8y-li-radio',\n  templateUrl: './list-item-radio.component.html',\n  host: {\n    class: 'c8y-list__item__radio'\n  },\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => ListItemRadioComponent)\n    }\n  ]\n})\nexport class ListItemRadioComponent implements ControlValueAccessor {\n  /**\n   * @ignore\n   */\n  @ViewChild('radio', { static: true }) radio: ElementRef;\n  /**\n   * Indicates if the radio is selected.\n   */\n  @Input()\n  selected = false;\n  /**\n   * The name of the radio (use different names for different radio groups).\n   */\n  @Input()\n  name = 'list_item_radio';\n  /**\n   * Indicates if the radio is disabled.\n   */\n  @Input()\n  disabled: boolean = false;\n  /**\n   * An event emitted as soon as the radio is selected.\n   */\n  @Output()\n  onSelect = new EventEmitter<boolean>();\n  /**\n   * The current value.\n   */\n  @Input() value: any;\n  /**\n   * @ignore\n   */\n  model: any;\n  /**\n   * @ignore\n   */\n  onChange: (value: any) => void;\n  /**\n   * @ignore\n   */\n  onTouched: () => void;\n\n  /**\n   * Resets the native radio element.\n   */\n  reset() {\n    this.radio.nativeElement.checked = false;\n  }\n\n  /**\n   * @ignore\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected && !changes.selected.firstChange) {\n      this.onSelect.emit(changes.selected.currentValue);\n    }\n  }\n\n  /**\n   * Triggered when the radio is changed.\n   * @param checked Should it be checked or not?\n   */\n  change(checked) {\n    this.onSelect.emit(checked);\n    this.model = this.value;\n    if (this.onChange) {\n      this.onChange(this.model);\n    }\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  /**\n   * Registers an onChange event.\n   */\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  /**\n   * Registers an onTouch event.\n   */\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  /**\n   * @ignore\n   */\n  writeValue(value: boolean): void {\n    this.model = value;\n  }\n}\n","import { Component } from '@angular/core';\n\n/**\n * Allows to display a timeline. Should be used with\n * content projection.\n *\n * @example\n * ```html\n * <c8y-list-group>\n *   <c8y-li-timeline>\n *     24.April 2020\n *     <c8y-li>\n *       Hello\n *     </c8y-li>\n *   </c8y-li-timeline>\n * </c8y-list-group>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-timeline, c8y-li-timeline',\n  templateUrl: './list-item-timeline.component.html',\n  host: {\n    class: 'c8y-list--timeline__item'\n  }\n})\nexport class ListItemTimelineComponent {}\n","import { Component, HostBinding, ContentChild } from '@angular/core';\nimport { ListItemTimelineComponent } from './list-item-timeline.component';\n\n/**\n * List groups are flexible and powerful components for displaying\n * both simple lists of elements and complex ones with custom content.\n *\n * @example\n * ```html\n * <c8y-list-group>\n *   <c8y-li>\n *     Plain <strong>Text</strong>\n *   </c8y-li>\n *   <c8y-li>\n *     <c8y-li-icon [icon]=\"'rocket'\"></c8y-li-icon>\n *     Icon\n *   </c8y-li>\n *   <c8y-li>\n *     <c8y-li-radio></c8y-li-radio>\n *     Radio\n *   </c8y-li>\n *   <c8y-li>\n *     <c8y-li-checkbox></c8y-li-checkbox>\n *     Checkbox\n *   </c8y-li>\n *   <c8y-li>\n *     Content\n *     <c8y-li-footer>\n *       Footer\n *     </c8y-li-footer>\n *   </c8y-li>\n *   <c8y-li>\n *     Content\n *     <c8y-li-action icon=\"rocket\">\n *       Launch\n *     </c8y-li-action>\n *   </c8y-li>\n *   <c8y-li>\n *     Content\n *     <c8y-li-collapse>\n *       Collapsed content\n *     </c8y-li-collapse>\n *   </c8y-li>\n * </c8y-list-group>\n * ```\n */\n@Component({\n  selector: 'c8y-list-group',\n  templateUrl: './list-group.component.html',\n  host: {\n    class: 'c8y-list__group'\n  }\n})\nexport class ListGroupComponent {\n  /**\n   * @ignore\n   */\n  @HostBinding('class.c8y-list--timeline')\n  timeline: boolean = false;\n\n  /**\n   * Displays the current list as a timeline. Best used\n   * with content projection.\n   *\n   * @example\n   * ```html\n   * <c8y-list-group>\n   *   <c8y-li-timeline>\n   *     24.April 2020\n   *     <c8y-li>\n   *       Hello\n   *     </c8y-li>\n   *   </c8y-li-timeline>\n   * </c8y-list-group>\n   * ```\n   */\n  @ContentChild(ListItemTimelineComponent, { static: false })\n  timelineComponent: ListItemTimelineComponent;\n\n  /**\n   * @ignore\n   */\n  ngAfterContentChecked(): void {\n    this.timeline = !!this.timelineComponent;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n/**\n * An icon to display on a list item. Use it with content projection.\n *\n * @example\n * ```html\n * <c8y-li>\n *   <c8y-li-icon=\"rocket\"></c8y-li-icon>\n * </c8y-li>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-icon, c8y-li-icon',\n  templateUrl: './list-item-icon.component.html',\n  host: {\n    class: 'c8y-list__item__icon'\n  }\n})\nexport class ListItemIconComponent {\n  /**\n   * The icon name passed to the `c8yIcon` directive.\n   */\n  @Input()\n  icon: string;\n\n  /**\n   * A status to change the color of the icon.\n   */\n  @Input()\n  status?:\n    | 'statusOk'\n    | 'statusUnknown'\n    | 'statusAlert'\n    | 'statusNok'\n    | 'status critical'\n    | 'status warning'\n    | 'status minor'\n    | 'status major';\n}\n","import { Output, EventEmitter, Component, Input, SimpleChanges, forwardRef } from '@angular/core';\nimport { CheckboxControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * A component to display checkboxes in a c8y-li. Use it with content projection. It\n * can be used standalone or with an ngModel.\n *\n * @example\n * ```html\n * <c8y-li>\n *   <c8y-li-checkbox></c8y-li-checkbox>\n * </c8y-li>\n * ```\n */\n@Component({\n  selector: 'c8y-list-item-checkbox, c8y-li-checkbox',\n  templateUrl: './list-item-checkbox.component.html',\n  host: {\n    class: 'c8y-list__item__check'\n  },\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => ListItemCheckboxComponent)\n    }\n  ]\n})\nexport class ListItemCheckboxComponent extends CheckboxControlValueAccessor {\n  /**\n   * Indicates if the checkbox is selected.\n   */\n  @Input()\n  selected = false;\n  /**\n   * Indicates if the checkbox is disabled.\n   */\n  @Input()\n  disabled = false;\n  /**\n   * An event emitted as soon as the checkbox is selected.\n   */\n  @Output()\n  onSelect = new EventEmitter<boolean>();\n\n  /**\n   * @ignore\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selected && !changes.selected.firstChange) {\n      this.onSelect.emit(changes.selected.currentValue);\n    }\n  }\n\n  /**\n   * Selects the checkbox.\n   * @param value The value to pass.\n   */\n  select(value) {\n    this.onSelect.emit(value);\n    this.onChange(value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ListGroupComponent } from './list-group.component';\nimport { ListItemComponent } from './list-item.component';\nimport { CommonModule } from '../common/common.module';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { ListItemIconComponent } from './list-item-icon.component';\nimport { ListItemBodyComponent } from './list-item-body.component';\nimport { ListItemFooterComponent } from './list-item-footer.component';\nimport { ListItemActionComponent } from './list-item-action.component';\nimport { ListItemCollapseComponent } from './list-item-collapse.component';\nimport { ListItemCheckboxComponent } from './list-item-checkbox.component';\nimport { ListItemRadioComponent } from './list-item-radio.component';\nimport { ListItemTimelineComponent } from './list-item-timeline.component';\n\n/**\n * The list-group module allows you to compose different styles\n * of lists used in Cumulocity IoT. They can consist of plain\n * text, actions, icons and more.\n *\n * @example\n * ```html\n * <c8y-list-group>\n *   <c8y-li>Item 1<c8y-li>\n *   <c8y-li>Item 2<c8y-li>\n * </c8y-list-group>\n * ```\n */\n@NgModule({\n  imports: [CommonModule, CollapseModule.forRoot(), BsDropdownModule],\n  declarations: [\n    ListGroupComponent,\n    ListItemComponent,\n    ListItemIconComponent,\n    ListItemBodyComponent,\n    ListItemFooterComponent,\n    ListItemActionComponent,\n    ListItemCollapseComponent,\n    ListItemCheckboxComponent,\n    ListItemRadioComponent,\n    ListItemTimelineComponent\n  ],\n  exports: [\n    ListGroupComponent,\n    ListItemComponent,\n    ListItemIconComponent,\n    ListItemBodyComponent,\n    ListItemFooterComponent,\n    ListItemActionComponent,\n    ListItemCollapseComponent,\n    ListItemCheckboxComponent,\n    ListItemRadioComponent,\n    ListItemTimelineComponent\n  ]\n})\nexport class ListGroupModule {}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { AuditService, IAuditRecord, IResultList } from '@c8y/client';\n\n@Component({\n  selector: 'c8y-audit-log',\n  templateUrl: './audit-log.component.html'\n})\nexport class AuditLogComponent implements OnInit {\n  @Input()\n  source: string | number;\n\n  records: IResultList<IAuditRecord>;\n\n  constructor(private audit: AuditService) {}\n\n  async ngOnInit() {\n    if (this.source) {\n      this.records = await this.audit.list({\n        withTotalPages: true,\n        source: this.source\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { AuditLogComponent } from './audit-log.component';\n\n/** The angular module definition for audit log. */\n@NgModule({\n  declarations: [AuditLogComponent],\n  imports: [CommonModule],\n  exports: [AuditLogComponent]\n})\nexport class AuditLogModule {}\n","/* tslint:disable:max-classes-per-file */\n\nimport { Directive, TemplateRef, Type } from '@angular/core';\n\nimport { Column } from '../data-grid.model';\n\nexport interface CellRendererDef {\n  template: TemplateRef<any>;\n}\n\nexport interface CellRendererSpec {\n  renderer: TemplateRef<CellRendererContext> | Type<any>;\n  context: CellRendererContext;\n}\n\nexport class CellRendererContext {\n  value: any;\n  item?: any;\n  property: Column;\n}\n\n@Directive({ selector: '[c8yCellRendererDef]' })\nexport class CellRendererDefDirective implements CellRendererDef {\n  constructor(public template: TemplateRef<any>) {}\n}\n\n@Directive({ selector: '[c8yHeaderCellRendererDef]' })\nexport class HeaderCellRendererDefDirective implements CellRendererDef {\n  constructor(public template: TemplateRef<any>) {}\n}\n","/* tslint:disable:max-classes-per-file */\n\nimport { Directive, TemplateRef, Type } from '@angular/core';\nimport { Column, FilterPredicateFunction } from '../data-grid.model';\n\nexport interface FilteringFormRendererSpec {\n  renderer: TemplateRef<FilteringFormRendererContext> | Type<any>;\n  context: FilteringFormRendererContext;\n}\n\nexport class FilteringFormRendererContext {\n  property: Column;\n  applyFilter: (filteringModifier: FilteringModifier) => void;\n  resetFilter: () => void;\n}\n\nexport interface FilteringModifier {\n  filterPredicate?: string | FilterPredicateFunction;\n  externalFilterQuery?: string | object;\n}\n\n@Directive({ selector: '[c8yFilteringFormRendererDef]' })\nexport class FilteringFormRendererDefDirective {\n  constructor(public template: TemplateRef<any>) {}\n}\n","import { ContentChild, Directive, Input } from '@angular/core';\n\nimport { CellRendererDefDirective, HeaderCellRendererDefDirective } from './cell-renderer';\nimport { FilteringFormRendererDefDirective } from './filtering-form-renderer';\n\n@Directive({ selector: 'c8y-column' })\nexport class ColumnDirective {\n  @Input() name: string;\n\n  @ContentChild(CellRendererDefDirective, { static: false })\n  cellRendererDef: CellRendererDefDirective;\n\n  @ContentChild(HeaderCellRendererDefDirective, { static: false })\n  headerCellRendererDef: HeaderCellRendererDefDirective;\n\n  @ContentChild(FilteringFormRendererDefDirective, { static: false })\n  filteringFormRendererDef: FilteringFormRendererDefDirective;\n}\n","import { CollectionViewer, DataSource } from '@angular/cdk/collections';\nimport { IResultList } from '@c8y/client';\nimport { chunk, flow, get, isNil, mapValues, omitBy, orderBy, pick } from 'lodash-es';\nimport { BehaviorSubject, defer, from, isObservable, Observable, of, Subject } from 'rxjs';\nimport { catchError, finalize, map, switchMap, tap } from 'rxjs/operators';\nimport { Column, DataSourceStats, ServerSideDataResult } from './data-grid.model';\n\nexport class GridDataSource implements DataSource<object> {\n  loading$: Observable<boolean>;\n  data$: Observable<object[]>;\n  stats$: Observable<DataSourceStats>;\n  selection$: Observable<any>;\n  resultList$: Observable<IResultList<object>>;\n\n  private loadingSubject = new BehaviorSubject<boolean>(true);\n  private dataSourceSubject = new BehaviorSubject<object[]>([]);\n  private dataStatsSubject = new BehaviorSubject<DataSourceStats>({\n    size: 0,\n    filteredSize: 0,\n    currentPage: 0,\n    currentPageSize: 0,\n    firstPageSize: 0\n  });\n  private dataSelectionSubject = new BehaviorSubject<any>({\n    filteredDataIds: []\n  });\n  private resultListSubject = new Subject<IResultList<object>>();\n\n  constructor() {\n    this.loading$ = this.loadingSubject.asObservable();\n    this.data$ = this.dataSourceSubject.asObservable();\n    this.stats$ = this.dataStatsSubject.asObservable();\n    this.selection$ = this.dataSelectionSubject.asObservable();\n    this.resultList$ = this.resultListSubject.asObservable();\n  }\n\n  connect(collectionViewer: CollectionViewer): Observable<object[]> {\n    return this.data$;\n  }\n\n  disconnect(collectionViewer: CollectionViewer): void {\n    this.loadingSubject.complete();\n    this.dataSourceSubject.complete();\n    this.dataStatsSubject.complete();\n    this.dataSelectionSubject.complete();\n  }\n\n  loadData({\n    rows,\n    columns,\n    pagination,\n    searchText,\n    serverSideDataCallback,\n    selectable,\n    selectionPrimaryKey,\n    infiniteScroll,\n    reload = false\n  }) {\n    const clientSideData$ = this.toObservable(rows).pipe(\n      map(initialData => {\n        let filteredSize = 0;\n        let filteredDataIds = [];\n\n        const transformedData = flow(\n          data => this.doClientSideSearch({ data, columns, searchText }),\n          data => this.doClientSideFiltering({ data, columns }),\n          data => this.doClientSideSorting({ data, columns }),\n          data => {\n            filteredSize = data.length;\n            filteredDataIds = selectable\n              ? data.map(item => item[selectionPrimaryKey])\n              : filteredDataIds;\n\n            return data;\n          },\n          data => this.doClientSidePagination({ data, pagination })\n        )(initialData);\n\n        this.dataStatsSubject.next({\n          size: initialData.length,\n          filteredSize,\n          currentPage: pagination.currentPage,\n          currentPageSize: transformedData.length,\n          firstPageSize: pagination.pageSize\n        });\n        this.dataSelectionSubject.next({ filteredDataIds });\n\n        return transformedData;\n      })\n    );\n\n    const serverSideData$ = defer(() =>\n      this.toObservable(\n        serverSideDataCallback({\n          columns,\n          searchText,\n          pagination,\n          selection: { enabled: selectable, primaryKey: selectionPrimaryKey }\n        })\n      )\n    ).pipe(\n      map((result: ServerSideDataResult) => {\n        const { data, paging, size, filteredSize, filteredDataIds } = result;\n\n        this.dataStatsSubject.next({\n          size,\n          filteredSize,\n          currentPage: paging.currentPage,\n          currentPageSize: data.length,\n          nextPage: paging.nextPage,\n          firstPageSize: paging.pageSize\n        });\n        this.dataSelectionSubject.next({ filteredDataIds: filteredDataIds || [] });\n        this.resultListSubject.next(result);\n\n        return data;\n      })\n    );\n\n    const data$ = typeof serverSideDataCallback === 'function' ? serverSideData$ : clientSideData$;\n\n    of([])\n      .pipe(\n        tap(() => this.loadingSubject.next(true)),\n        switchMap(() => data$),\n        catchError(err => {\n          this.dataStatsSubject.next({\n            size: 0,\n            filteredSize: 0,\n            currentPage: 0,\n            currentPageSize: 0,\n            firstPageSize: 0\n          });\n          this.dataSelectionSubject.next({ filteredDataIds: [] });\n          return of([]);\n        }),\n        finalize(() => this.loadingSubject.next(false))\n      )\n      .subscribe(result => {\n        const data =\n          infiniteScroll && !reload ? [...this.dataSourceSubject.value, ...result] : result;\n        this.dataSourceSubject.next(data);\n      });\n  }\n\n  resolveValue(x, path) {\n    return get(x, path);\n  }\n\n  resolveFunction(x) {\n    return typeof x === 'function' ? x() : x;\n  }\n\n  normalizeNil(x) {\n    return isNil(x) ? '' : x;\n  }\n\n  private doClientSideFiltering({ data, columns }) {\n    return columns.reduce((result, column) => {\n      const { filterPredicate } = column;\n\n      if (typeof filterPredicate === 'string') {\n        return this.doClientSideSearch({\n          data: result,\n          columns: [column],\n          searchText: filterPredicate\n        });\n      }\n\n      if (typeof filterPredicate === 'function') {\n        return result.filter(item => filterPredicate(item, column.path));\n      }\n\n      return result;\n    }, data);\n  }\n\n  private doClientSideSearch({ data, columns, searchText }) {\n    const propPaths = columns.map(({ path }) => path).filter(column => !isNil(column));\n\n    const regexSearch = this.createRegexSearch(searchText);\n\n    return data.filter(item => {\n      const itemWithResolvedValues = flow(\n        x => pick(x, propPaths),\n        x => mapValues(x, this.resolveFunction),\n        x => omitBy(x, isNil)\n      )(item);\n\n      const cellValues = Object.values(itemWithResolvedValues);\n\n      return cellValues.some(cellValue => regexSearch.test(cellValue.toString()));\n    });\n  }\n\n  private doClientSideSorting({ data, columns }) {\n    const actives: Column[] = columns.filter(({ sortOrder }: Column) => !!sortOrder);\n\n    const sortingState = {\n      paths: actives.map(({ path }) => path),\n      orders: actives.map(({ sortOrder }) => sortOrder)\n    };\n\n    return orderBy(data, sortingState.paths, sortingState.orders);\n  }\n\n  private doClientSidePagination({ data, pagination }) {\n    return pagination\n      ? get(chunk(data, pagination.pageSize), pagination.currentPage - 1, [])\n      : data;\n  }\n\n  private createRegexSearch(filterValue) {\n    return RegExp(escapeRegExpPattern(filterValue), 'i');\n  }\n\n  private toObservable(x): Observable<any> {\n    return isObservable(x) ? x : x instanceof Promise ? from(x) : of(x);\n  }\n}\n\n/**\n *\n * @param string pattern Regex pattern.\n * @return string The escaped regex.\n * @see https://stackoverflow.com/a/3561711/2013891\n */\nfunction escapeRegExpPattern(pattern = '') {\n  return pattern.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n}\n","import { IIdentified } from '@c8y/client';\n\nexport interface ISelectModalObject {\n  groupId: string | number;\n  body: ISelectModalBodyPart[];\n  options: ISelectModalOption[];\n  additionalInformation?: ISelectModalBodyPart;\n}\n\nexport interface ISelectModalOption {\n  body: ISelectModalBodyPart[];\n  obj: IIdentified;\n  selected?: boolean;\n}\n\nexport interface ISelectModalBodyPart {\n  value: string;\n  class?: string;\n}\n\nexport interface ModalLabels {\n  ok?: string;\n  cancel?: string;\n}\n\nexport enum ModalSelectionMode {\n  SINGLE = 'single',\n  MULTI = 'multi'\n}\n","import { CdkHeaderCell } from '@angular/cdk/table';\nimport {\n  AfterViewInit,\n  ChangeDetectorRef,\n  Component,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnChanges,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n  ViewContainerRef\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { IResultList, Paging } from '@c8y/client';\nimport { throttle } from './../common/throttle.decorator';\nimport { flow, get, parseInt as _parseInt, union, without, uniqBy } from 'lodash-es';\nimport { combineLatest, Subject } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  first,\n  mergeMap,\n  take,\n  takeUntil,\n  tap\n} from 'rxjs/operators';\nimport { LoadMoreComponent } from '../common/load-more.component';\nimport { LoadMoreMode } from '../common/load-more.model';\nimport { gettext } from '../i18n/gettext';\nimport { CellRendererSpec } from './column/cell-renderer';\nimport { ColumnDirective } from './column/column.directive';\nimport { FilteringFormRendererSpec, FilteringModifier } from './column/filtering-form-renderer';\nimport {\n  ActionControl,\n  BuiltInActionType,\n  BulkActionControl,\n  Column,\n  ColumnDataType,\n  DataGrid,\n  DataSourceStats,\n  DisplayOptions,\n  FilteringActionType,\n  minColumnGridTrackSize,\n  Pagination,\n  ratiosByColumnTypes,\n  Row,\n  ServerSideDataCallback,\n  SortOrder,\n  SpecialColumnName,\n  GridConfig\n} from './data-grid.model';\nimport { GridDataSource } from './grid-data-source';\n\n@Component({\n  selector: 'c8y-data-grid',\n  templateUrl: './data-grid.component.html'\n})\nexport class DataGridComponent implements DataGrid, OnChanges, AfterViewInit {\n  @Input() title: string = gettext('Items');\n  @Input() loadMoreItemsLabel: string = gettext('Load more items');\n  @Input() loadingItemsLabel: string = gettext('Loading items…');\n  @Input() showSearch = false;\n  @Input() refresh: EventEmitter<any>;\n  @Input() showChildDevices: any = {};\n\n  columns: Column[];\n  @Input('columns')\n  set _columns(columns) {\n    this.columns = columns || [];\n  }\n\n  dataSource = new GridDataSource();\n  rows: Row[];\n  @Input('rows')\n  set _rows(rows) {\n    this.rows = rows || [];\n  }\n\n  filteringLabelsParams = {\n    filteredItemsCount: 0,\n    allItemsCount: 0\n  };\n\n  pagination: Pagination;\n  paginationLabelParams = {\n    pageFirstItemIdx: 0,\n    pageLastItemIdx: 0,\n    itemsTotal: 0\n  };\n  readonly possiblePageSizes: number[] = [10, 15, 20, 30, 50];\n  readonly minPossiblePageSize = Math.min(...this.possiblePageSizes);\n  @Input('pagination')\n  set _pagination(pagination) {\n    this.pagination = pagination;\n    const pageSize = get(this.pagination, 'pageSize');\n\n    if (\n      pageSize &&\n      !this.possiblePageSizes.find(possiblePageSize => possiblePageSize === pageSize)\n    ) {\n      this.pagination = { ...this.pagination, pageSize: 10 };\n    }\n  }\n\n  infiniteScroll: LoadMoreMode;\n  @Input('infiniteScroll')\n  set _infiniteScroll(infiniteScroll: LoadMoreMode) {\n    this.infiniteScroll = infiniteScroll;\n  }\n\n  serverSideDataCallback: ServerSideDataCallback;\n  @Input('serverSideDataCallback')\n  set _serverSideDataCallback(serverSideDataCallback) {\n    this.serverSideDataCallback = serverSideDataCallback;\n  }\n\n  selectable = false;\n  @Input('selectable')\n  set _selectable(selectable) {\n    this.selectable = selectable;\n  }\n\n  selectionPrimaryKey = 'id';\n  @Input('selectionPrimaryKey')\n  set _selectionPrimaryKey(selectionPrimaryKey) {\n    this.selectionPrimaryKey = selectionPrimaryKey;\n  }\n\n  displayOptions: DisplayOptions = {\n    striped: true,\n    bordered: false,\n    gridHeader: true,\n    filter: true\n  };\n  @Input('displayOptions')\n  set _displayOptions(displayOptions) {\n    this.displayOptions = { ...this.displayOptions, ...displayOptions };\n  }\n\n  actionControls: ActionControl[];\n  @Input('actionControls')\n  set _actionControls(actionControls) {\n    this.actionControls = actionControls || [];\n  }\n\n  bulkActionControls: BulkActionControl[];\n  @Input('bulkActionControls')\n  set _bulkActionControls(bulkActionControls) {\n    this.bulkActionControls = bulkActionControls || [];\n  }\n  @Input()\n  searchText = '';\n  @Input() itemsSelectLimit: number;\n\n  @Output() rowMouseOver = new EventEmitter<object>();\n  @Output() rowMouseLeave = new EventEmitter<object>();\n  @Output() rowClick = new EventEmitter<object>();\n  @Output() onConfigChange = new EventEmitter<GridConfig>();\n  @Output() onFilter = new EventEmitter<object>();\n  @Output() itemsSelect = new EventEmitter<string[]>();\n  @Output() onChildDevices = new EventEmitter<boolean>();\n\n  @ContentChildren(ColumnDirective) columnRenderers: QueryList<ColumnDirective>;\n\n  @ViewChild('scroll', { static: true }) scrollContainer: ElementRef;\n\n  @ViewChild('infiniteScrollContainer', { static: false, read: ViewContainerRef })\n  infiniteScrollContainer: ViewContainerRef;\n\n  loadMoreComponent: LoadMoreComponent;\n\n  columnNames = [];\n\n  styles = {\n    tableCursor: 'auto',\n    gridTemplateColumns: undefined,\n    gridInfiniteScrollColumn: undefined\n  };\n\n  searchText$ = new EventEmitter<string>();\n  filteringApplied = false;\n  totalPagesCount = Infinity;\n\n  selectedItemIds: string[] = [];\n  currentPageSelectionState = {\n    allSelected: false,\n    allDeselected: true\n  };\n\n  builtInActionType = {\n    Edit: BuiltInActionType.Edit,\n    Delete: BuiltInActionType.Delete,\n    Export: BuiltInActionType.Export\n  };\n\n  resizeHandleMouseDown$ = new EventEmitter<any>();\n  resizeHandleContainerMouseMove$ = new EventEmitter<any>();\n  resizeHandleContainerMouseUp$ = new EventEmitter<any>();\n  private headerBeingResized: {\n    columnName: string;\n    el: HTMLElement;\n  };\n  @ViewChildren(CdkHeaderCell, { read: ElementRef }) private thRefs: QueryList<ElementRef>;\n  private thEls;\n\n  private recreateLoadMoreComponent: boolean;\n\n  private unsubscribe$ = new Subject<any>();\n\n  constructor(\n    private sanitizer: DomSanitizer,\n    private hostRef: ElementRef,\n    private cd: ChangeDetectorRef,\n    private cfr: ComponentFactoryResolver\n  ) {}\n\n  ngOnInit() {\n    this.searchText$\n      .pipe(\n        takeUntil(this.unsubscribe$),\n        debounceTime(300),\n        distinctUntilChanged(),\n        tap(searchText => {\n          this.searchText = searchText;\n        })\n      )\n      .subscribe(() => {\n        this.reload();\n      });\n\n    if (this.selectable) {\n      combineLatest(this.dataSource.data$, this.itemsSelect.asObservable())\n        .pipe(takeUntil(this.unsubscribe$))\n        .subscribe(([data]) => {\n          const currentPageEmpty = data.length === 0;\n\n          this.currentPageSelectionState = {\n            allSelected: currentPageEmpty ? false : data.every(item => this.isItemSelected(item)),\n            allDeselected: currentPageEmpty ? true : data.every(item => !this.isItemSelected(item))\n          };\n        });\n    }\n    this.dataSource.stats$.pipe(takeUntil(this.unsubscribe$)).subscribe(stats => {\n      this.createLoadMoreComponent(stats);\n      this.updateFilteringLabelsParams(stats);\n      this.updatePaginationLabelParams(stats);\n    });\n\n    if (this.refresh) {\n      this.refresh.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n        this.cancel();\n        this.reload();\n      });\n    }\n  }\n\n  ngOnChanges(event) {\n    if (!event._actionControls || event._actionControls.firstChange) {\n      this.loadData();\n    }\n    this.updateColumns();\n  }\n\n  ngAfterViewInit() {\n    this.updateGridColumnsSize();\n    this.thEls = this.thRefs.toArray().map(({ nativeElement }) => nativeElement);\n    this.setupResizeHandle();\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe$.next();\n    this.unsubscribe$.complete();\n  }\n\n  trackByName(index, item) {\n    return item.name;\n  }\n\n  resolveCellValue(row, path) {\n    return flow([\n      x => this.dataSource.resolveValue(x, path),\n      this.dataSource.resolveFunction,\n      this.dataSource.normalizeNil\n    ])(row);\n  }\n\n  changeSortOrder(columnName) {\n    const column = this.columns.find(({ name }) => name === columnName);\n\n    if (column) {\n      const { sortOrder } = column;\n\n      if (!sortOrder) {\n        this.updateSorting([columnName], 'asc');\n      } else if (sortOrder === 'asc') {\n        this.updateSorting([columnName], 'desc');\n      } else {\n        this.updateSorting([columnName], '');\n      }\n    }\n  }\n\n  updateSorting(columnNames: string[], sortOrder: SortOrder) {\n    this.columns = this.columns.map(\n      (column): Column => {\n        if (columnNames.includes(column.name)) {\n          return { ...column, sortOrder };\n        }\n\n        return column;\n      }\n    );\n    this.emitConfigChange();\n    this.reload();\n  }\n\n  applyFilter(columnName, dropdown, filteringModifier) {\n    this.updateFiltering([columnName], {\n      type: FilteringActionType.ApplyFilter,\n      payload: { filteringModifier }\n    });\n    dropdown.hide();\n    this.onFilter.emit({ columnName, dropdown, filteringModifier });\n  }\n\n  resetFilter(columnName, dropdown) {\n    this.updateFiltering([columnName], { type: FilteringActionType.ResetFilter });\n    dropdown.hide();\n  }\n\n  clearFilters() {\n    this.updateFiltering(this.columns.map(({ name }) => name), {\n      type: FilteringActionType.ResetFilter\n    });\n  }\n\n  updateFiltering(\n    columnNames: string[],\n    action: {\n      type: FilteringActionType;\n      payload?: { filteringModifier: FilteringModifier };\n    }\n  ) {\n    this.columns = this.columns.map(column => {\n      if (columnNames.includes(column.name)) {\n        return {\n          ...column,\n          ...(action.type === FilteringActionType.ApplyFilter\n            ? action.payload.filteringModifier\n            : { filterPredicate: undefined, externalFilterQuery: undefined })\n        };\n      }\n\n      return column;\n    });\n\n    this.updateFilteringApplied();\n    this.reload();\n  }\n\n  updateFilteringApplied() {\n    this.filteringApplied = this.columns.some(this.isColumnFilteringApplied);\n  }\n\n  isColumnFilteringApplied(column: Column): boolean {\n    const { filterable, filterPredicate, externalFilterQuery } = column;\n\n    return !!(filterable && (filterPredicate || externalFilterQuery));\n  }\n\n  updatePagination({ itemsPerPage, page }) {\n    this.pagination = { ...this.pagination, pageSize: itemsPerPage, currentPage: page };\n    this.loadData();\n    this.emitConfigChange();\n  }\n\n  reload() {\n    this.pagination = { ...this.pagination, currentPage: 1 };\n    this.recreateLoadMoreComponent = true;\n    this.loadData(true);\n    this.scrollToTop();\n  }\n\n  loadNextPage(): Promise<IResultList<object>> {\n    this.pagination = { ...this.pagination, currentPage: this.pagination.nextPage };\n\n    this.loadData();\n\n    return this.dataSource.resultList$\n      .pipe(take(1)) // in order for `toPromise` to work, the observable needs to complete\n      .toPromise()\n      .then(result => {\n        return {\n          ...result,\n          paging: {\n            ...result.paging,\n            next: this.loadNextPage.bind(this)\n          }\n        } as IResultList<object>;\n      });\n  }\n\n  getCellRendererSpec({ value, row, columnName }): CellRendererSpec {\n    return this._getCellRendererSpec({ type: 'CELL', value, row, columnName });\n  }\n\n  getHeaderCellRendererSpec({ value, columnName }): CellRendererSpec {\n    return this._getCellRendererSpec({ type: 'HEADER', value, row: undefined, columnName });\n  }\n\n  getFilteringFormRendererSpec({ column, dropdown }): FilteringFormRendererSpec {\n    return {\n      renderer:\n        get(this.getColumnRenderer(column), 'filteringFormRendererDef.template') ||\n        column.filteringFormRendererComponent,\n      context: {\n        property: column,\n        applyFilter: this.applyFilter.bind(this, column.name, dropdown),\n        resetFilter: this.resetFilter.bind(this, column.name, dropdown)\n      }\n    };\n  }\n\n  setAllItemsSelected(selected) {\n    this.dataSource.selection$\n      .pipe(first())\n      .subscribe(({ filteredDataIds }) => this.setItemsSelected(filteredDataIds, selected));\n  }\n\n  setAllItemsInCurrentPageSelected(selected) {\n    this.dataSource.data$.pipe(first()).subscribe(data => this.setItemsSelected(data, selected));\n  }\n\n  setItemsSelected(items: any[], selected) {\n    const itemIds = items.map((item: object | string) =>\n      typeof item === 'object' ? item[this.selectionPrimaryKey] : item\n    );\n\n    this.selectedItemIds = selected\n      ? union(this.selectedItemIds, itemIds)\n      : without(this.selectedItemIds, ...itemIds);\n\n    this.itemsSelect.emit(this.selectedItemIds);\n  }\n\n  cancel() {\n    this.selectedItemIds = [];\n    this.itemsSelect.emit(this.selectedItemIds);\n  }\n\n  isItemSelected(item) {\n    return this.selectedItemIds.includes(item[this.selectionPrimaryKey]);\n  }\n\n  onColumnDrop({ previousIndex, currentIndex }) {\n    const differentIndex = previousIndex !== currentIndex;\n\n    if (differentIndex) {\n      const column = this.columns.splice(previousIndex, 1);\n      this.columns.splice(currentIndex, 0, column[0]);\n    }\n\n    this.updateColumnNames();\n    this.updateGridColumnsSize();\n  }\n\n  updateGridColumnsSize() {\n    this.styles = {\n      ...this.styles,\n      gridTemplateColumns: this.sanitizer.bypassSecurityTrustStyle(\n        this.columns\n          .filter(column => column.visible)\n          .map(({ gridTrackSize }) => gridTrackSize)\n          .join(' ')\n      ),\n      gridInfiniteScrollColumn: this.sanitizer.bypassSecurityTrustStyle(\n        `1 / span ${this.columns.filter(column => column.visible).length}`\n      )\n    };\n\n    this.emitConfigChange();\n  }\n\n  loadChildDevices() {\n    this.showChildDevices.value = !this.showChildDevices.value;\n    this.onChildDevices.emit(this.showChildDevices.value);\n  }\n\n  private emitConfigChange() {\n    const columns = this.columns.map(({ visible, sortOrder, name }) => ({\n      visible,\n      sortOrder,\n      name\n    }));\n    this.onConfigChange.emit({ columns, pagination: this.pagination });\n  }\n\n  private updateColumns() {\n    const specialColumn = {\n      gridTrackSize: 'minmax(42px, 82px)',\n      sortable: false,\n      positionFixed: true\n    };\n\n    const columns = [\n      this.selectable ? { ...specialColumn, name: SpecialColumnName.Checkbox } : undefined,\n      ...this.columns,\n      this.actionControls.length > 0\n        ? { ...specialColumn, name: SpecialColumnName.Actions }\n        : undefined\n    ]\n      .filter(Boolean)\n      .map(this.withColumnDefaults);\n\n    this.columns = uniqBy(columns, 'name');\n    this.updateColumnNames();\n    this.updateGridColumnsSize();\n    this.updateFilteringApplied();\n  }\n\n  private withColumnDefaults(column): Column {\n    const dataType = column.dataType || ColumnDataType.TextShort;\n    const { headerCSSClassName, cellCSSClassName } = column;\n\n    return {\n      visible: true,\n      positionFixed: false,\n      sortable: true,\n      sortOrder: '',\n      filterable: false,\n      ...column,\n      dataType,\n      gridTrackSize:\n        column.gridTrackSize ||\n        `minmax(${minColumnGridTrackSize}px, ${ratiosByColumnTypes[dataType]}fr)`,\n      headerCSSClassName:\n        (typeof headerCSSClassName === 'string'\n          ? headerCSSClassName.split(' ')\n          : headerCSSClassName) || [],\n      cellCSSClassName:\n        (typeof cellCSSClassName === 'string' ? cellCSSClassName.split(' ') : cellCSSClassName) ||\n        []\n    };\n  }\n\n  private updateColumnNames() {\n    this.columnNames = this.columns.map(({ name }) => name);\n  }\n\n  private setupResizeHandle() {\n    const resizeHandleDrag$ = this.resizeHandleMouseDown$.pipe(\n      takeUntil(this.unsubscribe$),\n      tap(() => this.clearMouseHighlights()),\n      mergeMap(({ event, targetColumnName }) => {\n        this.columns = this.columns.map(column => {\n          if (column.name === targetColumnName) {\n            return {\n              ...column,\n              headerCSSClassName: union(column.headerCSSClassName, ['header--being-resized'])\n            };\n          }\n\n          return column;\n        });\n\n        this.headerBeingResized = {\n          columnName: targetColumnName,\n          el: event.target.parentNode\n        };\n\n        this.styles = {\n          ...this.styles,\n          tableCursor: 'col-resize'\n        };\n\n        return this.resizeHandleContainerMouseMove$.pipe(\n          tap(() => this.clearMouseHighlights()),\n          takeUntil(this.resizeHandleContainerMouseUp$)\n        );\n      })\n    );\n\n    resizeHandleDrag$.subscribe(event => {\n      requestAnimationFrame(() => {\n        this.columns = this.columns.map((column, i) => {\n          if (column.name === this.headerBeingResized.columnName) {\n            const wrapper = this.hostRef.nativeElement;\n\n            // Read wrapper's offset left relative to the document.\n            const horizontalOffset = wrapper.getBoundingClientRect().left;\n\n            // Adjust with the wrapper horizontal scroll position.\n            const horizontalScrollOffset = wrapper.scrollLeft - horizontalOffset;\n\n            // Calculate the desired width.\n            const width =\n              horizontalScrollOffset + event.clientX - (this.headerBeingResized.el.offsetLeft || 0);\n\n            return {\n              ...column,\n              // Update the column object with the new size value, enforce our minimum size.\n              gridTrackSize: `${Math.max(minColumnGridTrackSize, width)}px`\n            };\n          }\n\n          // For the other headers which don't have a set width, fix it to their computed width.\n          if (column.gridTrackSize.startsWith('minmax')) {\n            return {\n              ...column,\n              // isn't fixed yet (it would be a px value)\n              gridTrackSize: `${_parseInt(this.thEls[i].clientWidth)}px`\n            };\n          }\n\n          return column;\n        });\n\n        /*\n         * Update the column sizes.\n         * Note: grid-template-columns sets the width for all columns in one value.\n         */\n        this.updateGridColumnsSize();\n      });\n    });\n\n    this.resizeHandleContainerMouseUp$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {\n      if (this.headerBeingResized) {\n        this.columns = this.columns.map(column => {\n          if (column.name === this.headerBeingResized.columnName) {\n            return {\n              ...column,\n              headerCSSClassName: without(column.headerCSSClassName, 'header--being-resized')\n            };\n          }\n\n          return column;\n        });\n        this.headerBeingResized = undefined;\n\n        this.styles = {\n          ...this.styles,\n          tableCursor: 'auto'\n        };\n      }\n    });\n  }\n\n  private clearMouseHighlights() {\n    if (window.getSelection) {\n      window.getSelection().removeAllRanges();\n    }\n  }\n\n  private _getCellRendererSpec({ type, value, row, columnName }): CellRendererSpec {\n    const column = this.columns.find(({ name }) => name === columnName);\n    const columnRenderer = this.getColumnRenderer(column);\n    const rendererTemplate = get(\n      columnRenderer,\n      `${type === 'HEADER' ? 'headerCellRendererDef' : 'cellRendererDef'}.template`\n    );\n\n    const { cellRendererComponent, headerCellRendererComponent } = column;\n    const rendererComponent =\n      type === 'HEADER' ? headerCellRendererComponent : cellRendererComponent;\n\n    return {\n      renderer: rendererTemplate || rendererComponent,\n      context: {\n        value,\n        item: row,\n        property: column\n      }\n    };\n  }\n\n  private getColumnRenderer(column): ColumnDirective {\n    return this.columnRenderers.toArray().find(({ name }) => name === column.name);\n  }\n\n  @throttle(500, { trailing: true, leading: false })\n  private loadData(reload: boolean = false) {\n    const {\n      rows,\n      columns,\n      pagination,\n      searchText,\n      serverSideDataCallback,\n      selectable,\n      selectionPrimaryKey,\n      infiniteScroll\n    } = this;\n\n    this.dataSource.loadData({\n      rows,\n      columns,\n      pagination,\n      searchText,\n      serverSideDataCallback,\n      selectable,\n      selectionPrimaryKey,\n      infiniteScroll,\n      reload\n    });\n  }\n\n  private updateFilteringLabelsParams(stats: DataSourceStats) {\n    this.filteringLabelsParams = {\n      filteredItemsCount: stats.filteredSize,\n      allItemsCount: stats.size\n    };\n  }\n\n  private updatePaginationLabelParams(stats: DataSourceStats) {\n    this.pagination.nextPage = stats.nextPage;\n    const pageFirstItemIdx = (stats.currentPage - 1) * stats.firstPageSize + 1;\n    this.paginationLabelParams = {\n      pageFirstItemIdx,\n      pageLastItemIdx: pageFirstItemIdx + (stats.currentPageSize - 1),\n      itemsTotal: stats.filteredSize\n    };\n  }\n\n  private createLoadMoreComponent(stats: DataSourceStats) {\n    if (\n      this.infiniteScroll &&\n      stats &&\n      stats.nextPage &&\n      (!this.loadMoreComponent || this.recreateLoadMoreComponent)\n    ) {\n      this.recreateLoadMoreComponent = false;\n      this.infiniteScrollContainer.clear();\n      const componentFactory: ComponentFactory<any> = this.cfr.resolveComponentFactory(\n        LoadMoreComponent\n      );\n      const componentRef = this.infiniteScrollContainer.createComponent(componentFactory);\n      const instance = componentRef.instance as LoadMoreComponent;\n      instance.useIntersection = this.infiniteScroll === 'auto' || this.infiniteScroll === 'hidden';\n      instance.hidden = this.infiniteScroll === 'hidden';\n      instance.paging = {\n        nextPage: stats.nextPage,\n        next: this.loadNextPage.bind(this)\n      } as Paging<any>;\n      instance.loadNextLabel = this.loadMoreItemsLabel;\n      instance.loadingLabel = this.loadingItemsLabel;\n      this.loadMoreComponent = instance;\n    } else if (this.loadMoreComponent && !stats.nextPage) {\n      this.loadMoreComponent.paging = {\n        nextPage: null\n      } as Paging<any>;\n    }\n  }\n\n  private scrollToTop() {\n    if (this.infiniteScroll) {\n      this.scrollContainer.nativeElement.scrollTop = 0;\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  Injector,\n  Input,\n  OnChanges,\n  TemplateRef,\n  Type\n} from '@angular/core';\n\nimport { CellRendererContext, CellRendererSpec } from './cell-renderer';\n\n@Component({\n  selector: 'c8y-cell-renderer',\n  templateUrl: './cell-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CellRendererComponent implements OnChanges, DoCheck {\n  spec: CellRendererSpec;\n  @Input('spec')\n  set _spec(spec: CellRendererSpec) {\n    this.spec = spec;\n  }\n  prevSpec: CellRendererSpec;\n\n  rendererType: 'TEMPLATE' | 'COMPONENT';\n  rendererInjector: Injector;\n\n  constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    if (!this.prevSpec) {\n      this.prevSpec = this.spec;\n    }\n\n    const { renderer } = this.spec;\n\n    if (renderer instanceof TemplateRef) {\n      this.rendererType = 'TEMPLATE';\n    } else if (renderer instanceof Type) {\n      this.rendererType = 'COMPONENT';\n\n      this.rendererInjector = Injector.create({\n        providers: [{ provide: CellRendererContext, useValue: this.spec.context }],\n        parent: this.injector\n      });\n    }\n  }\n\n  ngDoCheck() {\n    if (!this.spec.context.value === this.prevSpec.context.value) {\n      this.prevSpec = this.spec;\n      this.cd.markForCheck();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DoCheck,\n  Injector,\n  Input,\n  OnChanges,\n  TemplateRef,\n  Type\n} from '@angular/core';\nimport { isEqual } from 'lodash-es';\n\nimport { FilteringFormRendererContext, FilteringFormRendererSpec } from './filtering-form-renderer';\n\n@Component({\n  selector: 'c8y-filtering-form-renderer',\n  templateUrl: './filtering-form-renderer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FilteringFormRendererComponent implements OnChanges {\n  spec: FilteringFormRendererSpec;\n  @Input('spec')\n  set _spec(spec: FilteringFormRendererSpec) {\n    this.spec = spec;\n  }\n\n  rendererType: 'TEMPLATE' | 'COMPONENT';\n  rendererInjector: Injector;\n  defaultRendererFilterText = '';\n\n  constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\n\n  ngOnChanges() {\n    const { renderer, context } = this.spec;\n\n    if (renderer instanceof TemplateRef) {\n      this.rendererType = 'TEMPLATE';\n    } else if (renderer instanceof Type) {\n      this.rendererType = 'COMPONENT';\n\n      this.rendererInjector = Injector.create({\n        providers: [{ provide: FilteringFormRendererContext, useValue: this.spec.context }],\n        parent: this.injector\n      });\n    }\n\n    const { filterPredicate } = context.property;\n    if (typeof filterPredicate === 'string') {\n      this.defaultRendererFilterText = filterPredicate;\n    }\n  }\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { CommonModule as C8YCommonModule } from '../common/common.module';\nimport { DataGridComponent } from './data-grid.component';\nimport { ColumnDirective } from './column/column.directive';\nimport { CellRendererDefDirective, HeaderCellRendererDefDirective } from './column/cell-renderer';\nimport { CellRendererComponent } from './column/cell-renderer.component';\nimport { FilteringFormRendererDefDirective } from './column/filtering-form-renderer';\nimport { FilteringFormRendererComponent } from './column/filtering-form-renderer.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CdkTableModule,\n    DragDropModule,\n    FormsModule,\n    ReactiveFormsModule,\n    C8YCommonModule,\n    BsDropdownModule.forRoot(),\n    PopoverModule.forRoot(),\n    PaginationModule.forRoot()\n  ],\n  declarations: [\n    CellRendererDefDirective,\n    HeaderCellRendererDefDirective,\n    CellRendererComponent,\n    FilteringFormRendererDefDirective,\n    FilteringFormRendererComponent,\n    ColumnDirective,\n    DataGridComponent\n  ],\n  exports: [\n    CellRendererDefDirective,\n    HeaderCellRendererDefDirective,\n    FilteringFormRendererDefDirective,\n    ColumnDirective,\n    DataGridComponent\n  ],\n  entryComponents: [DataGridComponent]\n})\nexport class DataGridModule {}\n","import { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { AppStateService } from '../common/ui-state.service';\nimport { DocsService } from '../docs/docs.service';\n\n/**\n * A component which shows a context help in\n * the action bar.\n *\n * @example\n * ```html\n * <c8y-help src=\"/users-guide/cockpit/#dashboards\"></c8y-help>\n * ```\n */\n@Component({\n  selector: 'c8y-help',\n  templateUrl: './help.component.html'\n})\nexport class HelpComponent {\n  /**\n   * The source of the documentation. Used to link to the documentation as well as\n   * to parse the source to display.\n   */\n  @Input()\n  src: string = '';\n\n  /**\n   * Indicates if the help dialog is collapsed.\n   */\n  @Input()\n  isCollapsed = true;\n\n  /**\n   * The priority where the help icon should be shown in the action bar\n   */\n  @Input()\n  priority = Infinity;\n\n  /**\n   * An custom icon. If not set, the navigator icon is resolved\n   */\n  @Input()\n  icon;\n\n  /**\n   * An title. Set in open by passing the source.\n   */\n  title = '';\n\n  /**\n   * The content. Set in open by passing the source.\n   */\n  content = [];\n\n  /**\n   * Indicates if the component is loading.\n   */\n  isLoading = true;\n\n  /**\n   * Indicates if the component failed loading the source.\n   */\n  hasError = false;\n\n  /**\n   * An view child to which the parsed content is appended.\n   */\n  @ViewChild('helpContent', { static: false, read: ElementRef })\n  helpContent: ElementRef;\n\n  private readonly SUPPORTED_LANGUAGES = ['en'];\n\n  /**\n   * Identifies if the current user language is supported\n   * Currently only English is supported.\n   */\n  get isSupportedLanguage() {\n    return this.SUPPORTED_LANGUAGES.indexOf(this.translateService.currentLang) > -1;\n  }\n\n  /**\n   * @ignore Only private DI\n   */\n  constructor(\n    private docsService: DocsService,\n    private appState: AppStateService,\n    private translateService: TranslateService\n  ) {}\n\n  /**\n   * Builds the URL based on the src. The Base URL can be set in the application options docBaseUrl.\n   * @param src The source of the help on the guide.\n   */\n  getUrl(src = '') {\n    const version = this.parseVersion(this.appState.uiVersion);\n    const url = this.docsService.getBaseUrl();\n    return `${url}${url.endsWith('/') ? '' : '/'}${version}${\n      src.startsWith('/') ? src : `/${src}`\n    }`;\n  }\n\n  /**\n   * Toggles the visibility of the help dialog.\n   */\n  toggle() {\n    if (this.isCollapsed) {\n      this.open();\n      return;\n    }\n    this.close();\n  }\n\n  /**\n   * Closes the help dialog.\n   */\n  close() {\n    this.isCollapsed = true;\n    this.clean();\n  }\n\n  /**\n   * Opens the help dialog.\n   */\n  open() {\n    this.isCollapsed = false;\n    this.isLoading = true;\n    this.requestContent();\n    if (!this.icon) {\n      this.icon = this.resolveIcon();\n    }\n  }\n\n  /**\n   * @ignore\n   */\n  ngAfterContentChecked(): void {\n    if (this.content.length > 0 && this.helpContent) {\n      this.content.forEach(ele => {\n        this.helpContent.nativeElement.append(ele);\n      });\n    }\n  }\n\n  private requestContent() {\n    const req = new XMLHttpRequest();\n    req.onreadystatechange = () => this.render(req);\n    req.addEventListener('load', () => this.render(req));\n    req.open('GET', this.getUrl(this.src));\n    req.responseType = 'document';\n    req.setRequestHeader('Accept', 'text/html');\n    req.send();\n  }\n\n  private clean() {\n    this.title = '';\n    this.isLoading = true;\n    this.hasError = false;\n    this.content = [];\n    if (this.helpContent) {\n      (this.helpContent.nativeElement as HTMLElement).innerHTML = '';\n    }\n  }\n\n  private parseVersion(uiVersion) {\n    const version = uiVersion.split('.')[0];\n    const majorNumber = Math.floor(parseInt(version, 10) / 100);\n    const minorNumber = parseInt(version, 10) - majorNumber * 100;\n    return `${majorNumber}.${minorNumber}.0`;\n  }\n\n  private resolveIcon() {\n    try {\n      const icon = Array.from(document.querySelector('nav .active i').classList).find(\n        classes => classes.startsWith('c8y-') || classes.startsWith('dlt-c8y-icon-')\n      );\n      return icon.replace('dlt-c8y-icon-', '');\n    } catch (ex) {\n      return 'question-circle-o';\n    }\n  }\n\n  private render(req: XMLHttpRequest) {\n    if (req.readyState === 4) {\n      this.isLoading = false;\n      if (req.status === 200) {\n        const sectionSplit = this.src.split('#');\n\n        // TODO: change here the selectors when DOC team defined the section element\n        const sectionQuery = `#${sectionSplit[sectionSplit.length - 1]} h2`;\n        const sectionNode = req.response.querySelector(sectionQuery) as HTMLElement;\n        const allPossibleElementsToAttach = Array.from(sectionNode.parentElement.children).slice(1);\n        this.title = sectionNode.innerText.trim();\n\n        for (const ele of allPossibleElementsToAttach) {\n          if (ele.tagName.toLowerCase() === 'h3') {\n            break;\n          }\n          this.content.push(ele);\n        }\n      } else {\n        this.hasError = true;\n      }\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { HelpComponent } from './help.component';\nimport { ActionBarModule } from '../action-bar/action-bar.module';\n\n/**\n * Provides components which allow to display help elements\n * inside the app.\n * @exports HelpComponent A component which shows a context help in\n *                        the action bar.\n */\n@NgModule({\n  declarations: [HelpComponent],\n  imports: [CommonModule, CollapseModule.forRoot(), ActionBarModule],\n  exports: [HelpComponent],\n  providers: []\n})\nexport class HelpModule {}\n","import { Component, Input } from '@angular/core';\nimport { RealtimeService } from './realtime.service';\n\n@Component({\n  selector: 'c8y-realtime-btn',\n  templateUrl: './realtime-button.component.html'\n})\nexport class RealtimeButtonComponent {\n  @Input()\n  service: RealtimeService<any>;\n\n  get active(): boolean {\n    return !!this.service && this.service.active;\n  }\n\n  toggle() {\n    if (this.service) {\n      this.active ? this.service.stop() : this.service.start();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { RealtimeButtonComponent } from './realtime-button.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RealtimeButtonComponent],\n  exports: [RealtimeButtonComponent]\n})\nexport class RealtimeModule {}\n","import { Component, Input, EventEmitter, SimpleChanges, Output } from '@angular/core';\nimport { gettext } from '../i18n/gettext';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport {\n  ISelectModalObject,\n  ModalSelectionMode,\n  ModalLabels\n} from './select-modal.model';\nimport { assign } from 'lodash-es';\nimport { Subject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { IIdentified } from '@c8y/client';\n\ninterface ISelectModalInternalObject extends ISelectModalObject {\n  selectedId: string | number;\n}\n\n@Component({\n  selector: 'c8y-select-modal',\n  templateUrl: './select-modal.component.html'\n})\nexport class SelectModalComponent {\n  @Input() icon: string;\n  @Input() title: string;\n  @Input() subTitle: string = gettext('Select from the list of items matching the device type');\n  @Input() items: ISelectModalInternalObject[];\n  @Input() mode: ModalSelectionMode = ModalSelectionMode.MULTI;\n  @Input() disableSelected: boolean = true;\n  @Input() showFilter: boolean = true;\n  @Input() areMoreEntries: boolean = false;\n  @Input() set labels(labels: ModalLabels) {\n    const { ok = this.labels.ok, cancel = this.labels.cancel } = labels || {};\n    this._labels = { ok, cancel };\n  }\n  get labels(): ModalLabels {\n    return this._labels;\n  }\n  @Output() result: EventEmitter<IIdentified[]> = new EventEmitter<IIdentified[]>();\n  @Output() search: EventEmitter<string> = new EventEmitter<string>();\n  selected = false;\n  filterTerm: string = '';\n  listItems = [];\n  private debouncer: Subject<string> = new Subject<string>();\n  private _labels: ModalLabels = { ok: gettext('Confirm'), cancel: gettext('Cancel') };\n\n  constructor(private bsModalRef: BsModalRef) {\n    this.debouncer.pipe(debounceTime(500)).subscribe(value => {\n      this.search.emit(value);\n    });\n  }\n\n  async ngOnChanges(changes: SimpleChanges) {\n    if (changes.items && changes.items.currentValue) {\n      const itemsPromise = changes.items.currentValue.map(async item => {\n        item.options = await item.options;\n        const selected = item.options.find(option => option.selected);\n        if (selected) {\n          item.selectedId = selected.obj.id;\n          if (this.disableSelected) {\n            item.options.map(option => assign(option, { disabled: true }));\n          }\n        }\n        return item;\n      });\n      this.listItems = await Promise.all(itemsPromise);\n    }\n  }\n\n  updatePipe(filterTerm: string) {\n    this.debouncer.next(filterTerm);\n    this.filterTerm = filterTerm;\n  }\n\n  updateChoice({ item, id }) {\n    if (this.mode === 'single') {\n      this.listItems.map(value => (value.selectedId = undefined));\n    }\n    item.selectedId = id;\n    this.selected = true;\n  }\n\n  dismiss() {\n    this.bsModalRef.hide();\n  }\n\n  select() {\n    this.result.emit(this.getOutput());\n    this.bsModalRef.hide();\n  }\n\n  ngOnDestroy() {\n    this.debouncer.complete();\n    this.result.complete();\n    this.search.complete();\n  }\n\n  private getOutput(): IIdentified[] {\n    return this.listItems\n      .filter(item => item.selectedId)\n      .map(item => item.options.find(option => item.selectedId === option.obj.id))\n      .filter(option => !option.selected)\n      .map(selectedOption => selectedOption.obj);\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { ISelectModalObject } from './select-modal.model';\n\n@Pipe({\n  name: 'selectModalFilterPipe',\n})\nexport class SelectModalFilterPipe implements PipeTransform {\n  transform(items: ISelectModalObject[], filterTerm: string): any {\n    return filterTerm.trim().length === 0\n      ? items\n      : items.filter((item: ISelectModalObject) => {\n        const allValues = this.extractValues(item);\n        const filteredValues = allValues.filter((value) => this.filterContainString(value, filterTerm));\n        return filteredValues.length > 0;\n      });\n  }\n\n  private filterContainString(value: string, filterTerm: string) {\n    const term = filterTerm.toLowerCase().trim();\n    return value && value.toLowerCase().indexOf(term) > -1;\n  }\n\n  private extractValues(item) {\n    let values = [];\n    if ( item.value ) {\n      values.push(item.value);\n    }\n    Object.keys(item).forEach((key) => {\n      if (Array.isArray(item[key])) {\n        item[key].forEach( obj => values.concat(this.extractValues(obj)) );\n      }\n      if (item[key] instanceof Object) {\n        values = values.concat(this.extractValues(item[key]));\n      }\n    });\n    return values;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { CommonModule } from '../common/common.module';\nimport { ListGroupModule } from '../list-group/list-group.module';\nimport { FormsModule } from '../forms/forms.module';\nimport { SelectModalComponent } from './select-modal.component';\nimport { SelectModalFilterPipe } from './select-modal-filter.pipe';\nimport { SearchModule } from '../search/search.module';\n\n@NgModule({\n  imports: [\n    BsDropdownModule.forRoot(),\n    CommonModule,\n    ListGroupModule,\n    SearchModule,\n    FormsModule\n  ],\n  exports: [\n    SelectModalComponent,\n    SelectModalFilterPipe\n  ],\n  declarations: [\n    SelectModalComponent,\n    SelectModalFilterPipe\n  ]\n})\nexport class SelectModalModule { }\n","import { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { gettext } from '../i18n/gettext';\nimport {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ContentChildren,\n  OnInit\n} from '@angular/core';\nimport { ListItemComponent } from '../list-group/list-item.component';\n\nexport interface Item {\n  name: string;\n  _selected?: boolean;\n  [key: string]: any;\n}\n\nexport type selectedFunction = (item: Item) => boolean;\nexport type selectedLabelFunction = (items: Item[]) => string;\n\n@Component({\n  selector: 'c8y-select',\n  templateUrl: './select.component.html'\n})\nexport class SelectComponent implements OnChanges, OnInit {\n  @Input() placeholder: string = gettext('Select item');\n  @Input() selectedLabel: string | selectedLabelFunction;\n  @Input() applyLabel: string = gettext('Apply');\n  @Input() items: Item[];\n  @Input() selected: Item[] | selectedFunction;\n  @Input() updateItems: EventEmitter<boolean>;\n  @Input() disableApplyOnNoSelection: boolean = false;\n  @Output() onChange: EventEmitter<Item[]> = new EventEmitter();\n  @ViewChild(BsDropdownDirective, { static: false }) dropdown: BsDropdownDirective;\n  @ContentChildren(ListItemComponent) liChildren;\n  textFilter = '';\n  labelText = '';\n  isOpen = false;\n  filteredItems: Item[] = [];\n  searchFilter = null;\n  readonly sizeToShowFilter: number = 5;\n  labelsForSelectAll: any = {\n    all: gettext('All'),\n    allFiltered: gettext('All filtered')\n  };\n  showAllLabel = false;\n  private itemsSelected: Set<Item> = new Set();\n  private stopClicks = false;\n\n  @HostListener('click', ['$event'])\n  preventClick(evt) {\n    if (this.stopClicks) {\n      evt.stopPropagation();\n    }\n    this.stopClicks = this.isOpen;\n  }\n\n  isOpenChange(isOpen: boolean) {\n    this.isOpen = isOpen;\n    if (isOpen) {\n      this.updateSelected();\n      this.searchFilter = null;\n    } else {\n      this.stopClicks = false;\n    }\n  }\n\n  outterSelected(item: Item) {\n    const { selected } = this;\n    let isSelected: any = () => false;\n    if (typeof selected === 'function') {\n      isSelected = selected;\n    } else if (Array.isArray(selected)) {\n      isSelected = (i: Item) => selected.indexOf(i) > -1;\n    }\n    return isSelected(item);\n  }\n\n  isSelected(item: Item) {\n    return this.itemsSelected.has(item);\n  }\n\n  isAllItemsSelected() {\n    return this.itemsSelected.size === this.items.length;\n  }\n\n  isAllFilteredSelected() {\n    return this.itemsSelected.size === this.filteredItems.length;\n  }\n\n  isNoItemSelected() {\n    return !this.itemsSelected.size;\n  }\n\n  applyChanges() {\n    const selected = Array.from(this.itemsSelected.values());\n    this.onChange.emit(selected);\n    this.dropdown.hide();\n  }\n\n  selectAll(checked: boolean) {\n    this.filteredItems.forEach(item => this.onChangeItem(checked, item));\n  }\n\n  ngOnInit() {\n    if (this.updateItems) {\n      this.updateItems.subscribe(() => {\n        this.updateSelected();\n        this.updateLabel();\n        this.showAllLabel = this.isAllItemsSelected();\n      });\n    }\n  }\n\n  onChangeItem(checked: boolean, item: Item) {\n    if (checked) {\n      this.itemsSelected.add(item);\n    } else {\n      this.itemsSelected.delete(item);\n    }\n  }\n\n  updateFiltered(term: string) {\n    if (term) {\n      const search = new RegExp(term, 'i');\n      this.filteredItems = this.items.filter(({ name }) => search.test(name));\n    } else {\n      this.filteredItems = this.items;\n    }\n  }\n\n  getSelectAllToggleStatus() {\n    const label = this.getLabel();\n    const checked = this.isAllSelected();\n    const indeterminate = !checked && this.itemsSelected.size > 0;\n\n    return { label, checked, indeterminate };\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.isOpen) {\n      return;\n    }\n    if (changes.items || changes.selected || changes.applyLabel) {\n      this.updateSelected();\n      this.updateLabel();\n      this.showAllLabel = this.isAllItemsSelected();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.updateItems && !this.updateItems.closed) {\n      this.updateItems.unsubscribe();\n    }\n  }\n\n  private updateLabel() {\n    const outterSelected = this.items.filter(i => this.outterSelected(i));\n    if (typeof this.selectedLabel === 'string') {\n      this.labelText = this.selectedLabel;\n    } else if (typeof this.selectedLabel === 'function') {\n      this.labelText = this.selectedLabel(outterSelected);\n    } else {\n      this.labelText = outterSelected.map(({ name }) => name).join(', ');\n    }\n  }\n\n  private updateSelected() {\n    const { itemsSelected, items } = this;\n    itemsSelected.clear();\n    items.forEach(item => {\n      if (this.outterSelected(item)) {\n        itemsSelected.add(item);\n      }\n    });\n    this.filteredItems = items;\n  }\n\n  private isAllSelected() {\n    if (this.getLabel() === this.labelsForSelectAll.allFiltered) {\n      return this.isAllFilteredSelected();\n    } else {\n      return this.isAllItemsSelected();\n    }\n  }\n\n  private getLabel() {\n    return this.searchFilter ? this.labelsForSelectAll.allFiltered : this.labelsForSelectAll.all;\n  }\n}\n","import {\n  ContentChildren,\n  Input,\n  Output,\n  EventEmitter,\n  Component,\n  ViewChild,\n  ElementRef,\n  QueryList,\n  forwardRef\n} from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl } from '@angular/forms';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { debounceTime, map, distinctUntilChanged, filter } from 'rxjs/operators';\nimport { IIdentified } from '@c8y/client';\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\nimport { ListItemComponent } from '../list-group/list-item.component';\nimport { findIndex, get, set } from 'lodash-es';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector: 'c8y-typeahead',\n  templateUrl: './typeahead.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => TypeaheadComponent)\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => TypeaheadComponent),\n      multi: true\n    }\n  ]\n})\nexport class TypeaheadComponent implements ControlValueAccessor, Validator {\n  @ViewChild('searchControl', { static: false }) searchControl: ElementRef;\n  @ViewChild('dropdown', { static: false }) dropdown: BsDropdownDirective;\n  @ContentChildren(ListItemComponent) list: QueryList<ListItemComponent>;\n\n  @Input()\n  required: boolean = false;\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  allowFreeEntries: boolean = true;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  displayProperty: string = 'name';\n\n  @Input()\n  icon: string = 'caret-down';\n\n  @Input()\n  name: string = this.displayProperty;\n\n  @Input()\n  autoClose: boolean = true;\n\n  @Input()\n  container: '' | 'body' = '';\n\n  @Input()\n  selected: IIdentified = {\n    id: null\n  };\n\n  @Output()\n  onSearch = new EventEmitter<string>();\n\n  @Output()\n  onIconClick = new EventEmitter<string>();\n\n  private subscription: Subscription;\n  private onChange: (name) => void;\n  private onTouched: () => void;\n\n  private readonly KEYCODE_UP = 38;\n  private readonly KEYCODE_DOWN = 40;\n  private readonly KEYCODE_TAB = 9;\n  private readonly KEYCODE_ENTER = 13;\n  private readonly KEYCODE_ESC = 27;\n\n  writeValue(value) {\n    this.selected = value;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  doBlur() {\n    if (this.onTouched) {\n      this.onTouched();\n    }\n  }\n\n  getDisplayProperty() {\n    return get(this.selected, this.displayProperty, '');\n  }\n\n  onShown() {\n    this.searchControl.nativeElement.focus();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.subscription = fromEvent(this.searchControl.nativeElement, 'keydown')\n      .pipe(\n        map((e: any) => this.handleKeyboard(e)),\n        filter((e: any) => e),\n        debounceTime(200),\n        map((e: any) => e.target.value),\n        distinctUntilChanged()\n      )\n      .subscribe(value => {\n        this.selected = {\n          id: null\n        };\n        set(this.selected, this.displayProperty, value || '');\n\n        this.onChange(this.selected);\n        this.onSearch.emit(value);\n      });\n  }\n\n  handleKeyboard(event): void {\n    const keyCode = event.keyCode;\n    if (\n      [this.KEYCODE_ENTER, this.KEYCODE_DOWN, this.KEYCODE_TAB, this.KEYCODE_UP].includes(keyCode)\n    ) {\n      const items = this.list.toArray();\n      const index = findIndex(items, item => item.active);\n      if (keyCode === this.KEYCODE_ENTER || keyCode === this.KEYCODE_TAB) {\n        if (index > -1) {\n          event.preventDefault();\n          items[index].element.nativeElement.click();\n        }\n        this.dropdown.hide();\n        this.searchControl.nativeElement.blur();\n      } else {\n        this.dropdown.show();\n        const upOrDown = keyCode === this.KEYCODE_DOWN ? 1 : -1;\n        if (index > -1) {\n          items[index].active = false;\n        }\n        this.selectNextItemOnKeyboardMove(items, index, upOrDown);\n      }\n      return;\n    } else if (keyCode === this.KEYCODE_ESC && this.autoClose) {\n      event.stopPropagation();\n      this.dropdown.hide();\n      this.searchControl.nativeElement.blur();\n      return;\n    } else {\n      this.dropdown.show();\n    }\n    return event;\n  }\n\n  validate(ctrl: AbstractControl): { [key: string]: any } {\n    if (this.required && !this.getDisplayProperty()) {\n      return { required: true };\n    }\n\n    if (!this.allowFreeEntries && this.selected && this.selected.id === null) {\n      return { notExisting: true };\n    }\n\n    return null;\n  }\n\n  private selectNextItemOnKeyboardMove(items: ListItemComponent[], index: any, upOrDown: number) {\n    if (items[index + upOrDown]) {\n      if (!items[index + upOrDown].selectable) {\n        this.selectNextItemOnKeyboardMove(items, index + upOrDown, upOrDown);\n        return;\n      }\n      items[index + upOrDown].active = true;\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { SelectComponent } from './select.component';\nimport { CommonModule } from '../common/common.module';\nimport { TypeaheadComponent } from './typeahead.component';\nimport { ListGroupModule } from '../list-group/list-group.module';\nimport { FormsModule } from '../forms/forms.module';\n\n/**\n * The angular module definition for a select.\n * @exports SelectComponent\n */\n@NgModule({\n  imports: [\n    BsDropdownModule.forRoot(),\n    CommonModule,\n    ListGroupModule,\n    FormsModule\n  ],\n  exports: [\n    SelectComponent,\n    TypeaheadComponent\n  ],\n  declarations: [\n    SelectComponent,\n    TypeaheadComponent\n  ]\n})\nexport class SelectModule { }\n","import { Component, Input, HostBinding } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { RangeDisplay } from './range-display.model';\n\n@Component({\n  selector: 'c8y-range-display',\n  templateUrl: './range-display.component.html'\n})\nexport class RangeDisplayComponent {\n  @Input() config: RangeDisplay = {};\n  @HostBinding('attr.style')\n  get inlineStyle() {\n    this.config = this.config || {};\n    if (!this.config.min) {\n      this.config.min = 0;\n    }\n    if (!this.config.max) {\n      this.config.max = 100;\n    }\n    if (this.config.fractionSize) {\n      this.config.current = parseFloat(this.config.current.toFixed(this.config.fractionSize));\n    }\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `\n          --range-min: ${this.config.min};\n          --range-max: ${this.config.max};\n          --full-range: ${this.config.max - this.config.min};\n          --measurement-target: ${((this.config.target - this.config.min) * 100) /\n            (this.config.max - this.config.min)}%;\n          --measurement-current: ${((this.config.current - this.config.min) * 100) /\n            (this.config.max - this.config.min)}%;\n          --range-y-min: ${((this.config.yellowRangeMin - this.config.min) * 100) /\n            (this.config.max - this.config.min)}%;\n          --range-y-max: ${((this.config.yellowRangeMax - this.config.min) /\n            (this.config.max - this.config.min)) *\n            100}%;\n          --range-r-min: ${((this.config.redRangeMin - this.config.min) * 100) /\n            (this.config.max - this.config.min)}%;\n          --range-r-max: ${((this.config.redRangeMax - this.config.min) /\n            (this.config.max - this.config.min)) *\n            100}%;\n        `\n    );\n  }\n\n  constructor(private sanitizer: DomSanitizer) {}\n\n  checkTarget(): boolean {\n    return (\n      this.config.target !== undefined &&\n      (this.config.target >= this.config.min && this.config.target <= this.config.max)\n    );\n  }\n\n  rulerCalc(index) {\n    const num: number = this.config.min + ((this.config.max - this.config.min) / 10) * index;\n    if (this.config.fractionSize) {\n      return parseFloat(num.toFixed(this.config.fractionSize));\n    }\n    return parseFloat(num.toFixed(2));\n  }\n\n  trackByIndex(index: number, el: any): number {\n    return index;\n  }\n\n  isRedRangeDisplayed() {\n    const { redRangeMin, redRangeMax } = this.config;\n    return this.isRangeDisplayed(redRangeMin, redRangeMax);\n  }\n\n  isYellowRangeDisplayed() {\n    const { yellowRangeMin, yellowRangeMax } = this.config;\n    return this.isRangeDisplayed(yellowRangeMin, yellowRangeMax);\n  }\n\n  isRangeDisplayed(rangeMin, rangeMax) {\n    return rangeMin === 0 || rangeMax === 0 || rangeMin && rangeMax;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule as C8yCommonModule } from '../common/common.module';\nimport { RangeDisplayComponent } from './range-display.component';\n\n/**\n * The angular module definition for a range-display.\n * @exports RangeDisplayModule\n */\n@NgModule({\n  imports: [C8yCommonModule],\n  exports: [RangeDisplayComponent],\n  declarations: [RangeDisplayComponent],\n  entryComponents: [RangeDisplayComponent]\n})\nexport class RangeDisplayModule {}\n","import { NgModule } from '@angular/core';\nimport { ActionBarModule } from './action-bar/action-bar.module';\nimport { ActionModule } from './action/action.module';\nimport { AlertModule } from './alert/alert.module';\nimport { AuditLogModule } from './audit-log/audit-log.module';\nimport { AuthenticationModule } from './authentication/authentication.module';\nimport { BootstrapModule } from './bootstrap/bootstrap.module';\nimport { BreadcrumbModule } from './breadcrumb/breadcrumb.module';\nimport { CommonModule } from './common/common.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { DataGridModule } from './data-grid/data-grid.module';\nimport { DeviceStatusModule } from './device-status/device-status.module';\nimport { DocsModule } from './docs/docs.module';\nimport { DropAreaModule } from './drop-area/drop-area.module';\nimport { DynamicComponentModule } from './dynamic-component/dynamic-component.module';\nimport { FilePickerModule } from './file-picker/file-picker.module';\nimport { DatePickerModule } from './date-picker/date-picker.module';\nimport { FormsModule as c8yFormsModule } from './forms/forms.module';\nimport { HeaderModule } from './header/header.module';\nimport { HelpModule } from './help/help.module';\nimport { ListGroupModule } from './list-group/list-group.module';\nimport { LoginModule } from './login/login.module';\nimport { ModalModule } from './modal/modal.module';\nimport { NavigatorModule } from './navigator/navigator.module';\nimport { ProductExperienceModule } from './product-experience/product-experience.module';\nimport { RealtimeModule } from './realtime/realtime.module';\nimport { SearchModule } from './search/search.module';\nimport { SelectModalModule } from './select-modal/select-modal.module';\nimport { SelectModule } from './select/select.module';\nimport { StepperModule as c8yStepperModule } from './stepper/stepper.module';\nimport { TabsModule } from './tabs/tabs.module';\nimport { UserModule } from './user/user.module';\nimport { RangeDisplayModule } from './range-display/range-display.module';\n\n@NgModule({\n  exports: [\n    ActionBarModule,\n    ActionModule,\n    AlertModule,\n    AuditLogModule,\n    BootstrapModule,\n    BreadcrumbModule,\n    CommonModule,\n    DataGridModule,\n    DropAreaModule,\n    HeaderModule,\n    LoginModule,\n    ModalModule,\n    NavigatorModule,\n    AuthenticationModule,\n    SearchModule,\n    SelectModule,\n    TabsModule,\n    UserModule,\n    c8yFormsModule,\n    DeviceStatusModule,\n    DocsModule,\n    c8yStepperModule,\n    DynamicComponentModule,\n    DashboardModule,\n    ListGroupModule,\n    SelectModalModule,\n    FilePickerModule,\n    DatePickerModule,\n    ProductExperienceModule,\n    HelpModule,\n    RealtimeModule,\n    RangeDisplayModule\n  ]\n})\nexport class CoreModule {\n  static forRoot() {\n    return {\n      ngModule: CoreModule,\n      providers: [...CommonModule.providers(), ...LoginModule.providers()]\n    };\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { kebabCase } from 'lodash-es';\r\n\r\n@Component({\r\n  selector: 'c8y-quick-link',\r\n  templateUrl: './quick-link.component.html'\r\n})\r\nexport class QuickLinkComponent implements OnInit {\r\n  @Input() icon;\r\n  @Input() label;\r\n  classes = '';\r\n\r\n  ngOnInit(): void {\r\n    this.classes = `card-block text-center ${kebabCase(this.label)}`;\r\n  }\r\n}\r\n","import { CoreModule } from '../core.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { QuickLinkComponent } from './quick-link.component';\r\n\r\n@NgModule({\r\n  declarations: [QuickLinkComponent],\r\n  imports: [CoreModule],\r\n  exports: [QuickLinkComponent],\r\n  providers: []\r\n})\r\nexport class QuickLinkModule {}\r\n","import { InjectionToken } from '@angular/core';\n\nexport const HOOK_DYNAMIC_PROVIDER_CONFIG = new InjectionToken('Dynamic Provider Config');\n","import { Inject, Injectable, Injector, Optional } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { flatten } from 'lodash-es';\nimport { forkJoin, from, isObservable, Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { NavigatorNode, NavigatorNodeFactory } from '../navigator';\nimport { DynamicProviderConfig } from './model/dynamic-provider-config.model';\nimport { HOOK_DYNAMIC_PROVIDER_CONFIG } from './provider-configuration-hook';\n\n@Injectable()\nexport class ProviderConfigurationNodeFactory implements NavigatorNodeFactory {\n  private config: DynamicProviderConfig[];\n  private nodes: NavigatorNode[];\n\n  constructor(\n    @Optional()\n    @Inject(HOOK_DYNAMIC_PROVIDER_CONFIG)\n    config: DynamicProviderConfig[][],\n    private injector: Injector\n  ) {\n    this.config = flatten(config);\n  }\n\n  get() {\n    if (!this.config || !this.config.length) {\n      return;\n    }\n\n    if (!this.nodes) {\n      const canActivate: Array<Observable<boolean>> = this.config\n        .map(c =>\n          c.navigation.canActivate && c.navigation.canActivate.length\n            ? this.getGuards(c)\n            : undefined\n        )\n        .map(this.checkCanActivate.bind(this));\n\n      return forkJoin(canActivate).pipe(\n        map((canActivateResult: boolean[]) =>\n          this.config\n            .map((c, index) =>\n              canActivateResult[index] ? new NavigatorNode(c.navigation) : undefined\n            )\n            .filter(el => !!el)\n        ),\n        tap(nodes => (this.nodes = nodes))\n      );\n    }\n\n    return this.nodes;\n  }\n\n  private checkCanActivate(ca: CanActivate[]): Observable<boolean> {\n    if (!!ca && ca.length) {\n      const canActivateResult: Array<Observable<boolean>> = ca\n        .map((canActivate: CanActivate) => canActivate.canActivate(undefined, undefined))\n        .map(this.wrapIntoObservable.bind(this));\n\n      return forkJoin(canActivateResult).pipe(\n        map((caResult: boolean[]) => caResult.reduce((acc, curr) => acc && curr))\n      );\n    }\n    return of(true);\n  }\n\n  private isPromise<T = any>(obj: any): obj is Promise<T> {\n    return !!obj && typeof obj.then === 'function';\n  }\n\n  private wrapIntoObservable<T>(value: T | Promise<T> | Observable<T>): Observable<T> {\n    if (isObservable(value)) {\n      return value;\n    }\n\n    if (this.isPromise(value)) {\n      return from(value);\n    }\n\n    return of(value);\n  }\n\n  private getGuards(c) {\n    return c.tab && c.tab.canActivate && c.tab.canActivate.length\n      ? [\n          ...c.navigation.canActivate.map(ca => this.injector.get(ca)),\n          ...c.tab.canActivate.map(ca => this.injector.get(ca))\n        ]\n      : c.navigation.canActivate.map(ca => this.injector.get(ca));\n  }\n\n  private getNodeTabPath(nodePath, tabPath) {\n    return `${nodePath.replace(/^\\/|\\/$/g, '')}/${tabPath.replace(/^\\/|\\/$/g, '')}`;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FetchClient, IIdentified, IResult, Service } from '@c8y/client';\nimport { get } from 'lodash-es';\nimport { ProviderProperties } from '../model/provider-properties.model';\n\n@Injectable()\nexport class ProviderConfigurationService extends Service<ProviderProperties> {\n  private static readonly NO_DETAIL_ID: string = null;\n\n  protected baseUrl: string;\n  protected listUrl: string;\n\n  constructor(client: FetchClient, activatedRoute: ActivatedRoute) {\n    super(client);\n    this.baseUrl = get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.baseUrl');\n    this.listUrl = get(activatedRoute, 'snapshot.data.endpoint.configurationEndpoint.listUrl');\n  }\n\n  async detail(): Promise<IResult<ProviderProperties>> {\n    return super.detail(ProviderConfigurationService.NO_DETAIL_ID);\n  }\n\n  async update(entity: Partial<ProviderProperties>): Promise<IResult<ProviderProperties>> {\n    return super.update(entity);\n  }\n\n  async delete(): Promise<IResult<null>> {\n    return super.delete(ProviderConfigurationService.NO_DETAIL_ID);\n  }\n\n  /** There is a single provider configuration per tenant and detail URL is not needed */\n  protected getDetailUrl(_: string | number | IIdentified): string {\n    return this.listUrl;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FetchClient, IResultList, Service } from '@c8y/client';\nimport { get } from 'lodash-es';\nimport { ProviderDefinition } from '../model/provider-definition.model';\n\n@Injectable()\nexport class ProviderDefinitionsService extends Service<ProviderDefinition> {\n  protected baseUrl: string;\n  protected listUrl: string;\n\n  constructor(client: FetchClient, activatedRoute: ActivatedRoute) {\n    super(client);\n    this.baseUrl = get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.baseUrl');\n    this.listUrl = get(activatedRoute, 'snapshot.data.endpoint.definitionsEndpoint.listUrl');\n  }\n\n  async list(): Promise<IResultList<ProviderDefinition>> {\n    return super.list();\n  }\n}\n","import { Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { IResult } from '@c8y/client';\nimport { FormlyFieldConfig, FormlyFormOptions, ɵdefineHiddenProp } from '@ngx-formly/core';\nimport { find, get, mapValues, pick } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, from, merge, Observable, of, Subject } from 'rxjs';\nimport { catchError, map, shareReplay, switchMap, tap } from 'rxjs/operators';\nimport { AlertService } from '../alert/alert.service';\nimport { Permissions, Status } from '../common/index';\nimport { C8yJSONSchema } from '../dynamic-forms/json-schema/c8y-json-schema.service';\nimport { ModalService } from '../modal/modal.service';\nimport {\n  DynamicProviderConfig,\n  DynamicProviderLayoutConfig\n} from './model/dynamic-provider-config.model';\nimport { ProviderDefinition } from './model/provider-definition.model';\nimport { ProviderProperties } from './model/provider-properties.model';\nimport { ProviderConfigurationService } from './service/provider-configuration.service';\nimport { ProviderDefinitionsService } from './service/provider-definitions.service';\n\n@Component({\n  selector: 'c8y-sms-gateway',\n  templateUrl: './provider-configuration.component.html',\n  providers: [ProviderConfigurationService, ProviderDefinitionsService]\n})\nexport class ProviderConfigurationComponent {\n  layout$: Observable<DynamicProviderLayoutConfig> = this.activatedRoute.data.pipe(\n    map((config: DynamicProviderConfig) => config.layout),\n    tap((layout: DynamicProviderLayoutConfig) => (this.layout = layout)),\n    tap((layout: DynamicProviderLayoutConfig) => {\n      this.options.formState.disabled = !this.permissions.hasAllRoles(layout.saveRoles);\n      this.beforeSaveHook = layout.beforeSaveHook;\n    })\n  );\n\n  allRoles$: Observable<string[]> = this.layout$.pipe(\n    map((layout: DynamicProviderLayoutConfig) => [\n      ...(layout.deleteRoles || []),\n      ...(layout.saveRoles || [])\n    ])\n  );\n\n  providers$: Observable<ProviderDefinition[]>;\n  selectedProvider$: Observable<ProviderDefinition>;\n  changeProvider$: Subject<ProviderDefinition> = new BehaviorSubject(null);\n  configuration$: Observable<ProviderProperties>;\n  providerInput$ = new BehaviorSubject<string>('');\n\n  form = new FormGroup({});\n  model: ProviderProperties;\n  fields: FormlyFieldConfig[] = [];\n  options: FormlyFormOptions = {\n    formState: {\n      disabled: false\n    }\n  };\n\n  private reload$ = new BehaviorSubject<void>(null);\n  private updatedConfiguration$ = new Subject<ProviderProperties>();\n  private layout: DynamicProviderLayoutConfig;\n  private beforeSaveHook: (\n    model: ProviderProperties,\n    fields: FormlyFieldConfig[]\n  ) => Promise<ProviderProperties> | ProviderProperties;\n\n  constructor(\n    public permissions: Permissions,\n    private activatedRoute: ActivatedRoute,\n    private modalService: ModalService,\n    private alertService: AlertService,\n    private providerDefinitionsService: ProviderDefinitionsService,\n    private providerConfigurationService: ProviderConfigurationService,\n    private jsonschema: C8yJSONSchema\n  ) {}\n\n  ngOnInit() {\n    const allProviders$: Observable<ProviderDefinition[]> = from(\n      this.providerDefinitionsService.list()\n    ).pipe(\n      map(result => result.data),\n      shareReplay(1)\n    );\n\n    this.providers$ = combineLatest(allProviders$, this.providerInput$).pipe(\n      map(([providers, input]: [ProviderDefinition[], string]) =>\n        input\n          ? providers.filter(el => el.displayName.toLowerCase().indexOf(input.toLowerCase()) >= 0)\n          : providers\n      ),\n      shareReplay(1)\n    );\n\n    this.configuration$ = merge(\n      this.updatedConfiguration$,\n      this.reload$.pipe(\n        switchMap(() =>\n          from(this.providerConfigurationService.detail()).pipe(catchError(() => of({} as any)))\n        ),\n        map(result => result.data)\n      )\n    ).pipe(\n      map(this.removeEncryptedValues),\n      shareReplay(1)\n    );\n\n    this.selectedProvider$ = combineLatest(\n      allProviders$,\n      this.configuration$,\n      this.changeProvider$\n    ).pipe(\n      tap(\n        ([_, configuration, newProvider]: [\n          ProviderDefinition[],\n          ProviderProperties,\n          ProviderDefinition\n        ]) =>\n          (this.model = newProvider\n            ? pick(this.model, 'sms.senderName', 'sms.senderAddress')\n            : configuration)\n      ),\n      map(\n        ([providers, configuration, newProvider]: [\n          ProviderDefinition[],\n          ProviderProperties,\n          ProviderDefinition\n        ]) =>\n          newProvider ||\n          find(providers, (provider: ProviderDefinition) =>\n            this.matchProvider(provider, configuration)\n          )\n      ),\n      tap((provider: ProviderDefinition) => {\n        if (provider) {\n          const config: FormlyFieldConfig = this.jsonschema.toFieldConfig(get(provider, 'schema'));\n          if (config.fieldGroup) {\n            config.fieldGroup.forEach((fieldConfig: FormlyFieldConfig) => {\n              ɵdefineHiddenProp(fieldConfig, '_keyPath', {\n                key: fieldConfig.key,\n                path: [fieldConfig.key]\n              });\n\n              fieldConfig.expressionProperties = {\n                'templateOptions.disabled': 'formState.disabled'\n              };\n            });\n          }\n          this.fields = [config];\n          this.form = new FormGroup({});\n        }\n      }),\n      shareReplay(1)\n    );\n  }\n\n  async saveProviderConfiguration() {\n    const modelToSave: ProviderProperties = !!this.beforeSaveHook\n      ? await this.beforeSaveHook(this.model, this.fields)\n      : this.model;\n\n    try {\n      const res: IResult<ProviderProperties> = await this.providerConfigurationService.update(\n        modelToSave\n      );\n      this.changeProvider$.next(null);\n      this.updatedConfiguration$.next(res.data);\n      this.alertService.success(this.layout.configurationUpdatedSuccessMsg);\n      this.form.markAsPristine();\n    } catch (err) {\n      this.alertService.addServerFailure(err);\n    }\n  }\n\n  async deleteProviderConfiguration() {\n    try {\n      await this.modalService.confirm(\n        this.layout.deleteConfigurationModalTitle,\n        this.layout.deleteConfigurationModalBody,\n        Status.DANGER,\n        {\n          ok: this.layout.deleteConfigurationModalOkBtnLabel,\n          cancel: this.layout.deleteConfigurationModalCancelBtnLabel\n        }\n      );\n      await this.providerConfigurationService.delete();\n      this.reload$.next();\n      this.alertService.success(this.layout.configurationDeletedSuccessMsg);\n    } catch (err) {\n      if (err) {\n        this.alertService.addServerFailure(err);\n      }\n    }\n  }\n\n  private removeEncryptedValues(configuration: ProviderProperties): ProviderProperties {\n    return mapValues(configuration, value => (value === '<<Encrypted>>' ? undefined : value));\n  }\n\n  private matchProvider(provider: ProviderDefinition, configuration: ProviderProperties): boolean {\n    return (\n      get(configuration, 'provider') === provider.id ||\n      get(configuration, 'providerName') === provider.id\n    );\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { ConditionalTabsOutletComponent } from '@c8y/ngx-components/';\nimport { flatten, get, uniqBy } from 'lodash-es';\nimport { RouteFactory } from '../router';\nimport { DynamicProviderConfig } from './model/dynamic-provider-config.model';\nimport { HOOK_DYNAMIC_PROVIDER_CONFIG } from './provider-configuration-hook';\nimport { ProviderConfigurationComponent } from './provider-configuration.component';\n\n@Injectable()\nexport class ProviderConfigurationRouteFactory implements RouteFactory {\n  private config: DynamicProviderConfig[];\n\n  constructor(@Optional() @Inject(HOOK_DYNAMIC_PROVIDER_CONFIG) config: DynamicProviderConfig[][]) {\n    this.config = flatten(config);\n  }\n\n  get() {\n    const navigationRoutes = uniqBy(this.config.filter(c => c.tab), 'navigation.path').map(c => {\n      return {\n        path: c.navigation.path,\n        component: ConditionalTabsOutletComponent\n      };\n    });\n\n    const navigationWithTabsRoutes = this.config.map(c => ({\n      path: c.tab\n        ? `${c.navigation.path.replace(/^\\/|\\/$/g, '')}/${c.tab.path.replace(/^\\/|\\/$/g, '')}`\n        : c.navigation.path,\n      component: ProviderConfigurationComponent,\n      canActivate: [\n        ...(c.navigation.canActivate || []),\n        ...(get(c, 'tab.canActivate') || [])\n      ].filter(g => !!g),\n      data: {\n        layout: c.layout,\n        endpoint: c.endpoint\n      }\n    }));\n\n    return [...navigationRoutes, ...navigationWithTabsRoutes];\n  }\n}\n","import { Inject, Injectable, Injector, Optional } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { flatten } from 'lodash-es';\nimport { forkJoin, from, isObservable, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Tab, TabFactory } from '../tabs';\nimport { DynamicProviderConfig } from './model/dynamic-provider-config.model';\nimport { HOOK_DYNAMIC_PROVIDER_CONFIG } from './provider-configuration-hook';\n\n@Injectable()\nexport class ProviderConfigurationTabFactory implements TabFactory {\n  private config: DynamicProviderConfig[];\n\n  constructor(\n    @Optional()\n    @Inject(HOOK_DYNAMIC_PROVIDER_CONFIG)\n    config: DynamicProviderConfig[][],\n    public router: Router,\n    private injector: Injector\n  ) {\n    this.config = flatten(config);\n  }\n\n  get() {\n    if (!this.config || !this.config.length) {\n      return;\n    }\n\n    const configForRoute = this.config.find(c =>\n      c.tab\n        ? this.router.url === '/' + this.getNodeTabPath(c.navigation.path, c.tab.path) ||\n          this.router.url.startsWith('/' + c.navigation.path.replace(/^\\/|\\/$/g, ''))\n        : false\n    );\n\n    const filteredRoutes = configForRoute\n      ? this.config.filter(\n          c =>\n            c.navigation.path.replace(/^\\/|\\/$/g, '') ===\n              configForRoute.navigation.path.replace(/^\\/|\\/$/g, '') && c.tab\n        )\n      : [];\n\n    const canActivate: Array<Observable<boolean>> = filteredRoutes\n      .map(c =>\n        c.tab.canActivate && c.tab.canActivate.length\n          ? c.tab.canActivate.map(ca => this.injector.get(ca))\n          : undefined\n      )\n      .map(this.checkCanActivate.bind(this));\n\n    return canActivate.length > 0\n      ? forkJoin(canActivate).pipe(\n          map((canActivateResult: boolean[]) =>\n            filteredRoutes\n              .map((c, index) => {\n                const tab = {\n                  ...c.tab,\n                  path: this.getNodeTabPath(c.navigation.path, c.tab.path)\n                };\n                return canActivateResult[index] ? (tab as Tab) : undefined;\n              })\n              .filter(el => !!el)\n          )\n        )\n      : [];\n  }\n\n  private checkCanActivate(ca: CanActivate[]): Observable<boolean> {\n    if (!!ca && ca.length) {\n      const canActivateResult: Array<Observable<boolean>> = ca\n        .map((canActivate: CanActivate) => canActivate.canActivate(undefined, undefined))\n        .map(this.wrapIntoObservable.bind(this));\n\n      return forkJoin(canActivateResult).pipe(\n        map((caResult: boolean[]) => caResult.reduce((acc, curr) => acc && curr))\n      );\n    }\n    return of(true);\n  }\n\n  private isPromise<T = any>(obj: any): obj is Promise<T> {\n    return !!obj && typeof obj.then === 'function';\n  }\n\n  private wrapIntoObservable<T>(value: T | Promise<T> | Observable<T>): Observable<T> {\n    if (isObservable(value)) {\n      return value;\n    }\n\n    if (this.isPromise(value)) {\n      return from(value);\n    }\n\n    return of(value);\n  }\n\n  private getNodeTabPath(nodePath, tabPath) {\n    return `${nodePath.replace(/^\\/|\\/$/g, '')}/${tabPath.replace(/^\\/|\\/$/g, '')}`;\n  }\n}\n","import { forwardRef, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '../common/common.module';\nimport { CoreModule } from '../core.module';\nimport { DynamicFormsModule } from '../dynamic-forms/dynamic-forms.module';\nimport { HOOK_NAVIGATOR_NODES } from '../navigator';\nimport { HOOK_ONCE_ROUTE } from '../router';\nimport { HOOK_TABS } from '../tabs';\nimport { DynamicProviderConfig } from './model/dynamic-provider-config.model';\nimport { HOOK_DYNAMIC_PROVIDER_CONFIG } from './provider-configuration-hook';\nimport { ProviderConfigurationNodeFactory } from './provider-configuration-node.factory';\nimport { ProviderConfigurationRouteFactory } from './provider-configuration-route.factory';\nimport { ProviderConfigurationTabFactory } from './provider-configuration-tab.factory';\nimport { ProviderConfigurationComponent } from './provider-configuration.component';\n\n@NgModule({\n  declarations: [ProviderConfigurationComponent],\n  exports: [ProviderConfigurationComponent],\n  imports: [CoreModule, CommonModule, DynamicFormsModule],\n  entryComponents: [ProviderConfigurationComponent],\n  providers: [\n    {\n      provide: HOOK_ONCE_ROUTE,\n      useClass: forwardRef(() => ProviderConfigurationRouteFactory),\n      multi: true\n    },\n    {\n      provide: HOOK_NAVIGATOR_NODES,\n      useClass: forwardRef(() => ProviderConfigurationNodeFactory),\n      multi: true\n    },\n    {\n      provide: HOOK_TABS,\n      useClass: forwardRef(() => ProviderConfigurationTabFactory),\n      multi: true\n    }\n  ]\n})\nexport class ProviderConfigurationModule {\n  static config(config: DynamicProviderConfig[]): ModuleWithProviders {\n    return {\n      ngModule: ProviderConfigurationModule,\n      providers: [{ provide: HOOK_DYNAMIC_PROVIDER_CONFIG, useValue: config, multi: true }]\n    };\n  }\n}\n","export class RealtimeMessage<T> {\n  id: string;\n  channel: string;\n  realtimeAction: RealtimeAction;\n  data: T | number;\n}\n\nexport type RealtimeAction = 'UPDATE' | 'DELETE' | 'CREATE';\n","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { IIdentified, Realtime } from '@c8y/client';\nimport { Observable, Subject } from 'rxjs';\nimport { filter, finalize, map } from 'rxjs/operators';\nimport { RealtimeMessage } from './realtime.model';\n\n/**\n * A wrapper class for handling realtime notifications in RxJS fashion.\n */\nexport abstract class RealtimeService<T> {\n  /**\n   * A flag displaying if realtime notifications are currently active.\n   */\n  get active(): boolean {\n    return this.isActive;\n  }\n\n  private subjects$: Map<string, RealtimeSubject<T>> = new Map<string, RealtimeSubject<T>>();\n  private isActive: boolean = true;\n\n  constructor(protected realtime: Realtime) {}\n\n  /**\n   * Get an Observable of all realtime notifications.\n   *\n   * @param {string | number | IIdentified} entityOrId Entity object or id\n   *\n   * @returns An [[Observable]] of notifications wrapped as [[RealtimeMessage]]\n   */\n  onAll$(entityOrId?: string | number | IIdentified): Observable<RealtimeMessage<T>> {\n    const subject$: RealtimeSubject<T> = this.getSubjectForChannel(entityOrId);\n\n    return subject$.pipe(\n      finalize(() => {\n        if (subject$.observers.length === 1 && subject$.observers[0].closed) {\n          subject$.stop();\n          this.subjects$.delete(subject$.channel);\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscribes again all realtime channels with active observers.\n   */\n  start() {\n    if (!this.isActive) {\n      this.subjects$.forEach(subject$ => {\n        subject$.start();\n      });\n      this.isActive = true;\n    }\n  }\n\n  /**\n   * Stops realtime notifications and unsubscribes all realtime channels.\n   */\n  stop() {\n    if (this.isActive) {\n      this.subjects$.forEach(subject$ => {\n        subject$.stop();\n      });\n\n      this.isActive = false;\n    }\n  }\n\n  /**\n   * Get an Observable of all CREATE realtime notifications.\n   *\n   * @returns An [[Observable]] of newly created entity objects.\n   */\n  onCreate$(): Observable<T> {\n    return this.onAll$().pipe(\n      filter(msg => msg.realtimeAction === 'CREATE'),\n      map(msg => msg.data as T)\n    );\n  }\n\n  /**\n   * Get an Observable of all UPDATE realtime notifications.\n   *\n   * @param {string | number | IIdentified} entityOrId Entity object or id\n   *\n   * @returns An [[Observable]] of updated entity objects.\n   */\n  onUpdate$(entityOrId?: string | number | IIdentified): Observable<T> {\n    return this.onAll$(entityOrId).pipe(\n      filter(msg => msg.realtimeAction === 'UPDATE'),\n      map(msg => msg.data as T)\n    );\n  }\n\n  /**\n   * Get an Observable of all DELETE realtime notifications.\n   *\n   * @param {string | number | IIdentified} entityOrId Entity object or id\n   *\n   * @returns An [[Observable]] of deleted entity objects.\n   */\n  onDelete$(entityOrId?: string | number | IIdentified): Observable<number> {\n    return this.onAll$(entityOrId).pipe(\n      filter(msg => msg.realtimeAction === 'DELETE'),\n      map(msg => coerceNumberProperty(msg.data))\n    );\n  }\n\n  protected getIdString(reference: number | string | IIdentified): string {\n    let id: string | number;\n    if (typeof reference === 'object') {\n      id = reference.id;\n    } else {\n      id = reference;\n    }\n    return String(id);\n  }\n\n  protected getChannel(entityOrId?: string | number | IIdentified) {\n    return entityOrId ? this.channel().replace('*', this.getIdString(entityOrId)) : this.channel();\n  }\n\n  protected abstract channel(): string;\n\n  private getSubjectForChannel(entityOrId?: string | number | IIdentified): RealtimeSubject<T> {\n    const channel: string = this.getChannel(entityOrId);\n    let subject$: RealtimeSubject<T>;\n    if (this.subjects$.has(channel)) {\n      subject$ = this.subjects$.get(channel);\n    } else {\n      subject$ = new RealtimeSubject(channel, this.realtime);\n      this.subjects$.set(channel, subject$);\n    }\n\n    return subject$;\n  }\n}\n\n// tslint:disable-next-line: max-classes-per-file\nclass RealtimeSubject<T> extends Subject<RealtimeMessage<T>> {\n  realtimeSubscription: object;\n  get channel(): string {\n    return this.realtimeChannel;\n  }\n\n  constructor(private realtimeChannel: string, private realtime: Realtime) {\n    super();\n    this.start();\n  }\n\n  start() {\n    if (!this.realtimeSubscription) {\n      this.realtimeSubscription = this.realtime.subscribe(this.realtimeChannel, msg => {\n        const data: RealtimeMessage<T> = {\n          channel: msg.channel,\n          data: msg.data.data,\n          id: msg.id,\n          realtimeAction: msg.data.realtimeAction\n        };\n        this.next(data);\n      });\n    }\n  }\n\n  stop() {\n    if (this.realtimeSubscription) {\n      this.realtime.unsubscribe(this.realtimeSubscription);\n      this.realtimeSubscription = null;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { IOperationBulk, Realtime } from '@c8y/client';\nimport { RealtimeService } from './realtime.service';\n\n/**\n * A service for handling bulk operation realtime notifications in RxJS fashion.\n */\n@Injectable()\nexport class OperationBulkRealtimeService extends RealtimeService<IOperationBulk> {\n  constructor(realtime: Realtime) {\n    super(realtime);\n  }\n\n  protected channel(): string {\n    return '/bulkOperations/*';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RealtimeService } from './realtime.service';\nimport { IManagedObject, Realtime } from '@c8y/client';\n\n@Injectable()\nexport class ManagedObjectRealtimeService extends RealtimeService<IManagedObject> {\n  constructor(realtime: Realtime) {\n    super(realtime);\n  }\n\n  protected channel(): string {\n    return '/managedobjects/*';\n  }\n}\n"]}