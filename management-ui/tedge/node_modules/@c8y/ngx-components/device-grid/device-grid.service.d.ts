import { IManagedObject, InventoryService, QueriesUtil } from '@c8y/client';
import { ActionControl, BulkActionControl, Pagination, GridConfig, Column } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { DeviceGridColumn } from './device-grid.models';
export declare class DeviceGridService {
    protected inventoryService: InventoryService;
    protected translateService: TranslateService;
    protected queriesUtil: QueriesUtil;
    protected GRID_CONFIG_DEFAULT_STORAGE_KEY: string;
    protected DEFAULT_PAGE_SIZE: number;
    constructor(inventoryService: InventoryService, translateService: TranslateService);
    getDefaultColumns(): DeviceGridColumn[];
    getDefaultPagination(): Pagination;
    getInfiniteScrollPagination(): Pagination;
    getDefaultActionControls(): ActionControl[];
    getDefaultBulkActionControls(): BulkActionControl[];
    getProperName(device: IManagedObject): string;
    getModel(device: IManagedObject): string;
    getSerialNumber(device: IManagedObject): string;
    getParentsNames(device: IManagedObject, featuredParentId?: string | number): string;
    getHref(groupOrDevice: IManagedObject, prefix?: string): string;
    getAlarmsHref(device: IManagedObject): string;
    getUserConfiguredColumns(columns: Column[]): any[];
    delete(device: IManagedObject): void;
    getData(columns: DeviceGridColumn[], pagination: Pagination, query?: any, withChildren?: boolean): Promise<import("@c8y/client").IResultList<IManagedObject>>;
    getCount(columns: DeviceGridColumn[], pagination: Pagination, query?: any): Promise<number>;
    getTotal(query?: any): Promise<number>;
    getDeviceQueryString(columns: DeviceGridColumn[], query: any): string;
    getQueryObj(columns: DeviceGridColumn[], defaultFilter?: {}): any;
    getConfig(key?: string): GridConfig;
    saveConfig(config: GridConfig, key?: string): void;
    clearConfig(key?: string): void;
    private getHardware;
    private isVendme;
    private getDevicesFilters;
    private extendQueryByColumn;
}
