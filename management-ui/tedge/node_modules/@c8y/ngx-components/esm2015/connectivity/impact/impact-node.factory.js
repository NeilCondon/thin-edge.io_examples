import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { gettext, NavigatorNode } from '@c8y/ngx-components';
import { isObservable, of } from 'rxjs';
import { map } from 'rxjs/operators';
import { ImpactTabFactory } from './impact-tab.factory';
let ImpactNodeFactory = class ImpactNodeFactory {
    constructor(tabFactory) {
        this.tabFactory = tabFactory;
        this.connectivityNode = new NavigatorNode({
            parent: gettext('Settings'),
            label: gettext('Connectivity'),
            path: 'connectivitySettings',
            icon: 'plug',
            preventDuplicates: true
        });
    }
    get() {
        return this.wrapIntoObservable(this.tabFactory.tab()).pipe(map(tab => {
            return !!tab ? [this.connectivityNode] : [];
        }));
    }
    wrapIntoObservable(value) {
        if (isObservable(value)) {
            return value;
        }
        return of(value);
    }
};
ImpactNodeFactory.ctorParameters = () => [
    { type: ImpactTabFactory }
];
ImpactNodeFactory = tslib_1.__decorate([
    Injectable()
], ImpactNodeFactory);
export { ImpactNodeFactory };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0LW5vZGUuZmFjdG9yeS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvY29ubmVjdGl2aXR5LyIsInNvdXJjZXMiOlsiaW1wYWN0L2ltcGFjdC1ub2RlLmZhY3RvcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxhQUFhLEVBQXdCLE1BQU0scUJBQXFCLENBQUM7QUFDbkYsT0FBTyxFQUFFLFlBQVksRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDcEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBR3hELElBQWEsaUJBQWlCLEdBQTlCLE1BQWEsaUJBQWlCO0lBUzVCLFlBQW9CLFVBQTRCO1FBQTVCLGVBQVUsR0FBVixVQUFVLENBQWtCO1FBUi9CLHFCQUFnQixHQUFrQixJQUFJLGFBQWEsQ0FBQztZQUNuRSxNQUFNLEVBQUUsT0FBTyxDQUFDLFVBQVUsQ0FBQztZQUMzQixLQUFLLEVBQUUsT0FBTyxDQUFDLGNBQWMsQ0FBQztZQUM5QixJQUFJLEVBQUUsc0JBQXNCO1lBQzVCLElBQUksRUFBRSxNQUFNO1lBQ1osaUJBQWlCLEVBQUUsSUFBSTtTQUN4QixDQUFDLENBQUM7SUFFZ0QsQ0FBQztJQUVwRCxHQUFHO1FBQ0QsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FDeEQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFO1lBQ1IsT0FBTyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUM7UUFDOUMsQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7SUFFTyxrQkFBa0IsQ0FBSSxLQUF3QjtRQUNwRCxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsRUFBRTtZQUN2QixPQUFPLEtBQUssQ0FBQztTQUNkO1FBRUQsT0FBTyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDbkIsQ0FBQztDQUNGLENBQUE7O1lBakJpQyxnQkFBZ0I7O0FBVHJDLGlCQUFpQjtJQUQ3QixVQUFVLEVBQUU7R0FDQSxpQkFBaUIsQ0EwQjdCO1NBMUJZLGlCQUFpQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IGdldHRleHQsIE5hdmlnYXRvck5vZGUsIE5hdmlnYXRvck5vZGVGYWN0b3J5IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBpc09ic2VydmFibGUsIE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBtYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJbXBhY3RUYWJGYWN0b3J5IH0gZnJvbSAnLi9pbXBhY3QtdGFiLmZhY3RvcnknO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgSW1wYWN0Tm9kZUZhY3RvcnkgaW1wbGVtZW50cyBOYXZpZ2F0b3JOb2RlRmFjdG9yeSB7XG4gIHByaXZhdGUgcmVhZG9ubHkgY29ubmVjdGl2aXR5Tm9kZTogTmF2aWdhdG9yTm9kZSA9IG5ldyBOYXZpZ2F0b3JOb2RlKHtcbiAgICBwYXJlbnQ6IGdldHRleHQoJ1NldHRpbmdzJyksXG4gICAgbGFiZWw6IGdldHRleHQoJ0Nvbm5lY3Rpdml0eScpLFxuICAgIHBhdGg6ICdjb25uZWN0aXZpdHlTZXR0aW5ncycsXG4gICAgaWNvbjogJ3BsdWcnLFxuICAgIHByZXZlbnREdXBsaWNhdGVzOiB0cnVlXG4gIH0pO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgdGFiRmFjdG9yeTogSW1wYWN0VGFiRmFjdG9yeSkge31cblxuICBnZXQoKSB7XG4gICAgcmV0dXJuIHRoaXMud3JhcEludG9PYnNlcnZhYmxlKHRoaXMudGFiRmFjdG9yeS50YWIoKSkucGlwZShcbiAgICAgIG1hcCh0YWIgPT4ge1xuICAgICAgICByZXR1cm4gISF0YWIgPyBbdGhpcy5jb25uZWN0aXZpdHlOb2RlXSA6IFtdO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgcHJpdmF0ZSB3cmFwSW50b09ic2VydmFibGU8VD4odmFsdWU6IFQgfCBPYnNlcnZhYmxlPFQ+KTogT2JzZXJ2YWJsZTxUPiB7XG4gICAgaWYgKGlzT2JzZXJ2YWJsZSh2YWx1ZSkpIHtcbiAgICAgIHJldHVybiB2YWx1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gb2YodmFsdWUpO1xuICB9XG59XG4iXX0=