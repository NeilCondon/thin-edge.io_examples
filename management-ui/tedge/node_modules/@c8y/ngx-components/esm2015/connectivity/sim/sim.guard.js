var SimGuard_1;
import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { ApplicationService } from '@c8y/client';
import { Permissions } from '@c8y/ngx-components';
let SimGuard = SimGuard_1 = class SimGuard {
    constructor(permissions, applicationService) {
        this.permissions = permissions;
        this.applicationService = applicationService;
    }
    canActivate(route, state) {
        if (this.showSimProvider === undefined) {
            const hasRole = Promise.resolve(this.permissions.hasRole('ROLE_CONNECTIVITY_READ'));
            this.showSimProvider = hasRole.then((hasPermissions) => hasPermissions &&
                this.applicationService
                    .isAvailable(SimGuard_1.applicationName)
                    .then(result => result && result.data));
        }
        return this.showSimProvider;
    }
};
SimGuard.applicationName = 'connectivity';
SimGuard.ctorParameters = () => [
    { type: Permissions },
    { type: ApplicationService }
];
SimGuard = SimGuard_1 = tslib_1.__decorate([
    Injectable()
], SimGuard);
export { SimGuard };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2ltLmd1YXJkLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9jb25uZWN0aXZpdHkvIiwic291cmNlcyI6WyJzaW0vc2ltLmd1YXJkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUUzQyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDakQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBR2xELElBQWEsUUFBUSxnQkFBckIsTUFBYSxRQUFRO0lBSW5CLFlBQW9CLFdBQXdCLEVBQVUsa0JBQXNDO1FBQXhFLGdCQUFXLEdBQVgsV0FBVyxDQUFhO1FBQVUsdUJBQWtCLEdBQWxCLGtCQUFrQixDQUFvQjtJQUFHLENBQUM7SUFFaEcsV0FBVyxDQUFDLEtBQTZCLEVBQUUsS0FBMEI7UUFDbkUsSUFBSSxJQUFJLENBQUMsZUFBZSxLQUFLLFNBQVMsRUFBRTtZQUN0QyxNQUFNLE9BQU8sR0FBcUIsT0FBTyxDQUFDLE9BQU8sQ0FDL0MsSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLENBQUMsd0JBQXdCLENBQUMsQ0FDbkQsQ0FBQztZQUVGLElBQUksQ0FBQyxlQUFlLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FDakMsQ0FBQyxjQUF1QixFQUFFLEVBQUUsQ0FDMUIsY0FBYztnQkFDZCxJQUFJLENBQUMsa0JBQWtCO3FCQUNwQixXQUFXLENBQUMsVUFBUSxDQUFDLGVBQWUsQ0FBQztxQkFDckMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FDM0MsQ0FBQztTQUNIO1FBRUQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDO0lBQzlCLENBQUM7Q0FDRixDQUFBO0FBdEJ5Qix3QkFBZSxHQUFHLGNBQWMsQ0FBQzs7WUFHeEIsV0FBVztZQUE4QixrQkFBa0I7O0FBSmpGLFFBQVE7SUFEcEIsVUFBVSxFQUFFO0dBQ0EsUUFBUSxDQXVCcEI7U0F2QlksUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlU25hcHNob3QsIENhbkFjdGl2YXRlLCBSb3V0ZXJTdGF0ZVNuYXBzaG90IH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IEFwcGxpY2F0aW9uU2VydmljZSB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IFBlcm1pc3Npb25zIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBTaW1HdWFyZCBpbXBsZW1lbnRzIENhbkFjdGl2YXRlIHtcbiAgcHJpdmF0ZSBzdGF0aWMgcmVhZG9ubHkgYXBwbGljYXRpb25OYW1lID0gJ2Nvbm5lY3Rpdml0eSc7XG4gIHByaXZhdGUgc2hvd1NpbVByb3ZpZGVyOiBQcm9taXNlPGJvb2xlYW4+O1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgcGVybWlzc2lvbnM6IFBlcm1pc3Npb25zLCBwcml2YXRlIGFwcGxpY2F0aW9uU2VydmljZTogQXBwbGljYXRpb25TZXJ2aWNlKSB7fVxuXG4gIGNhbkFjdGl2YXRlKHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZVNuYXBzaG90LCBzdGF0ZTogUm91dGVyU3RhdGVTbmFwc2hvdCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIGlmICh0aGlzLnNob3dTaW1Qcm92aWRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICBjb25zdCBoYXNSb2xlOiBQcm9taXNlPGJvb2xlYW4+ID0gUHJvbWlzZS5yZXNvbHZlKFxuICAgICAgICB0aGlzLnBlcm1pc3Npb25zLmhhc1JvbGUoJ1JPTEVfQ09OTkVDVElWSVRZX1JFQUQnKVxuICAgICAgKTtcblxuICAgICAgdGhpcy5zaG93U2ltUHJvdmlkZXIgPSBoYXNSb2xlLnRoZW4oXG4gICAgICAgIChoYXNQZXJtaXNzaW9uczogYm9vbGVhbikgPT5cbiAgICAgICAgICBoYXNQZXJtaXNzaW9ucyAmJlxuICAgICAgICAgIHRoaXMuYXBwbGljYXRpb25TZXJ2aWNlXG4gICAgICAgICAgICAuaXNBdmFpbGFibGUoU2ltR3VhcmQuYXBwbGljYXRpb25OYW1lKVxuICAgICAgICAgICAgLnRoZW4ocmVzdWx0ID0+IHJlc3VsdCAmJiByZXN1bHQuZGF0YSlcbiAgICAgICk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuc2hvd1NpbVByb3ZpZGVyO1xuICB9XG59XG4iXX0=