import { BaseDeviceGridColumn } from './base.device-grid-column';
import { SerialNumberCellRendererComponent } from './serial-number.cell-renderer.component';
import { gettext } from '@c8y/ngx-components';
export class SerialNumberDeviceGridColumn extends BaseDeviceGridColumn {
    constructor(initialColumnConfig) {
        super(initialColumnConfig);
        const hardwareSerialNumberPath = 'c8y_Hardware.serialNumber';
        const vendingSerialNumberPath = 'com_nsn_startups_vendme_fragments_VendingMachineTypeInfo.serial';
        this.name = 'serialNumber';
        this.header = gettext('Serial number');
        this.cellRendererComponent = SerialNumberCellRendererComponent;
        this.filterable = true;
        this.filteringConfig = {
            schema: {
                type: 'object',
                properties: {
                    serialNumbers: {
                        type: 'array',
                        items: {
                            type: 'string'
                        }
                    }
                }
            },
            form: [
                {
                    key: 'serialNumbers',
                    title: gettext('Show devices with serial number'),
                    add: gettext('Or'),
                    items: [
                        {
                            key: 'serialNumbers[]',
                            notitle: true,
                            placeholder: gettext('e.g. 54321-123, you can use an asterisk (*) as wildcard character')
                        }
                    ]
                }
            ],
            getFilter(model) {
                const filter = {};
                if (model.serialNumbers.length) {
                    filter.__or = {
                        [hardwareSerialNumberPath]: { __in: model.serialNumbers },
                        [vendingSerialNumberPath]: { __in: model.serialNumbers }
                    };
                }
                return filter;
            }
        };
        this.sortable = true;
        this.sortingConfig = {
            pathSortingConfigs: [{ path: hardwareSerialNumberPath }, { path: vendingSerialNumberPath }]
        };
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsLW51bWJlci5kZXZpY2UtZ3JpZC1jb2x1bW4uanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL2RldmljZS1ncmlkLyIsInNvdXJjZXMiOlsiY29sdW1ucy9zZXJpYWwtbnVtYmVyLmRldmljZS1ncmlkLWNvbHVtbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsaUNBQWlDLEVBQUUsTUFBTSx5Q0FBeUMsQ0FBQztBQUM1RixPQUFPLEVBQUUsT0FBTyxFQUFnQixNQUFNLHFCQUFxQixDQUFDO0FBRTVELE1BQU0sT0FBTyw0QkFBNkIsU0FBUSxvQkFBb0I7SUFDcEUsWUFBWSxtQkFBa0M7UUFDNUMsS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7UUFFM0IsTUFBTSx3QkFBd0IsR0FBRywyQkFBMkIsQ0FBQztRQUM3RCxNQUFNLHVCQUF1QixHQUMzQixpRUFBaUUsQ0FBQztRQUVwRSxJQUFJLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztRQUMzQixJQUFJLENBQUMsTUFBTSxHQUFHLE9BQU8sQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUN2QyxJQUFJLENBQUMscUJBQXFCLEdBQUcsaUNBQWlDLENBQUM7UUFFL0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUM7UUFDdkIsSUFBSSxDQUFDLGVBQWUsR0FBRztZQUNyQixNQUFNLEVBQUU7Z0JBQ04sSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsVUFBVSxFQUFFO29CQUNWLGFBQWEsRUFBRTt3QkFDYixJQUFJLEVBQUUsT0FBTzt3QkFDYixLQUFLLEVBQUU7NEJBQ0wsSUFBSSxFQUFFLFFBQVE7eUJBQ2Y7cUJBQ0Y7aUJBQ0Y7YUFDRjtZQUNELElBQUksRUFBRTtnQkFDSjtvQkFDRSxHQUFHLEVBQUUsZUFBZTtvQkFDcEIsS0FBSyxFQUFFLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQztvQkFDakQsR0FBRyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUM7b0JBQ2xCLEtBQUssRUFBRTt3QkFDTDs0QkFDRSxHQUFHLEVBQUUsaUJBQWlCOzRCQUN0QixPQUFPLEVBQUUsSUFBSTs0QkFDYixXQUFXLEVBQUUsT0FBTyxDQUNsQixtRUFBbUUsQ0FDcEU7eUJBQ0Y7cUJBQ0Y7aUJBQ0Y7YUFDRjtZQUNELFNBQVMsQ0FBQyxLQUFVO2dCQUNsQixNQUFNLE1BQU0sR0FBUSxFQUFFLENBQUM7Z0JBQ3ZCLElBQUksS0FBSyxDQUFDLGFBQWEsQ0FBQyxNQUFNLEVBQUU7b0JBQzlCLE1BQU0sQ0FBQyxJQUFJLEdBQUc7d0JBQ1osQ0FBQyx3QkFBd0IsQ0FBQyxFQUFFLEVBQUUsSUFBSSxFQUFFLEtBQUssQ0FBQyxhQUFhLEVBQUU7d0JBQ3pELENBQUMsdUJBQXVCLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxLQUFLLENBQUMsYUFBYSxFQUFFO3FCQUN6RCxDQUFDO2lCQUNIO2dCQUNELE9BQU8sTUFBTSxDQUFDO1lBQ2hCLENBQUM7U0FDRixDQUFDO1FBRUYsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUM7UUFDckIsSUFBSSxDQUFDLGFBQWEsR0FBRztZQUNuQixrQkFBa0IsRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLHdCQUF3QixFQUFFLEVBQUUsRUFBRSxJQUFJLEVBQUUsdUJBQXVCLEVBQUUsQ0FBQztTQUM1RixDQUFDO0lBQ0osQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZURldmljZUdyaWRDb2x1bW4gfSBmcm9tICcuL2Jhc2UuZGV2aWNlLWdyaWQtY29sdW1uJztcbmltcG9ydCB7IFNlcmlhbE51bWJlckNlbGxSZW5kZXJlckNvbXBvbmVudCB9IGZyb20gJy4vc2VyaWFsLW51bWJlci5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBDb2x1bW5Db25maWcgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcblxuZXhwb3J0IGNsYXNzIFNlcmlhbE51bWJlckRldmljZUdyaWRDb2x1bW4gZXh0ZW5kcyBCYXNlRGV2aWNlR3JpZENvbHVtbiB7XG4gIGNvbnN0cnVjdG9yKGluaXRpYWxDb2x1bW5Db25maWc/OiBDb2x1bW5Db25maWcpIHtcbiAgICBzdXBlcihpbml0aWFsQ29sdW1uQ29uZmlnKTtcblxuICAgIGNvbnN0IGhhcmR3YXJlU2VyaWFsTnVtYmVyUGF0aCA9ICdjOHlfSGFyZHdhcmUuc2VyaWFsTnVtYmVyJztcbiAgICBjb25zdCB2ZW5kaW5nU2VyaWFsTnVtYmVyUGF0aCA9XG4gICAgICAnY29tX25zbl9zdGFydHVwc192ZW5kbWVfZnJhZ21lbnRzX1ZlbmRpbmdNYWNoaW5lVHlwZUluZm8uc2VyaWFsJztcblxuICAgIHRoaXMubmFtZSA9ICdzZXJpYWxOdW1iZXInO1xuICAgIHRoaXMuaGVhZGVyID0gZ2V0dGV4dCgnU2VyaWFsIG51bWJlcicpO1xuICAgIHRoaXMuY2VsbFJlbmRlcmVyQ29tcG9uZW50ID0gU2VyaWFsTnVtYmVyQ2VsbFJlbmRlcmVyQ29tcG9uZW50O1xuXG4gICAgdGhpcy5maWx0ZXJhYmxlID0gdHJ1ZTtcbiAgICB0aGlzLmZpbHRlcmluZ0NvbmZpZyA9IHtcbiAgICAgIHNjaGVtYToge1xuICAgICAgICB0eXBlOiAnb2JqZWN0JyxcbiAgICAgICAgcHJvcGVydGllczoge1xuICAgICAgICAgIHNlcmlhbE51bWJlcnM6IHtcbiAgICAgICAgICAgIHR5cGU6ICdhcnJheScsXG4gICAgICAgICAgICBpdGVtczoge1xuICAgICAgICAgICAgICB0eXBlOiAnc3RyaW5nJ1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIGZvcm06IFtcbiAgICAgICAge1xuICAgICAgICAgIGtleTogJ3NlcmlhbE51bWJlcnMnLFxuICAgICAgICAgIHRpdGxlOiBnZXR0ZXh0KCdTaG93IGRldmljZXMgd2l0aCBzZXJpYWwgbnVtYmVyJyksXG4gICAgICAgICAgYWRkOiBnZXR0ZXh0KCdPcicpLFxuICAgICAgICAgIGl0ZW1zOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIGtleTogJ3NlcmlhbE51bWJlcnNbXScsXG4gICAgICAgICAgICAgIG5vdGl0bGU6IHRydWUsXG4gICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBnZXR0ZXh0KFxuICAgICAgICAgICAgICAgICdlLmcuIDU0MzIxLTEyMywgeW91IGNhbiB1c2UgYW4gYXN0ZXJpc2sgKCopIGFzIHdpbGRjYXJkIGNoYXJhY3RlcidcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGdldEZpbHRlcihtb2RlbDogYW55KTogYW55IHtcbiAgICAgICAgY29uc3QgZmlsdGVyOiBhbnkgPSB7fTtcbiAgICAgICAgaWYgKG1vZGVsLnNlcmlhbE51bWJlcnMubGVuZ3RoKSB7XG4gICAgICAgICAgZmlsdGVyLl9fb3IgPSB7XG4gICAgICAgICAgICBbaGFyZHdhcmVTZXJpYWxOdW1iZXJQYXRoXTogeyBfX2luOiBtb2RlbC5zZXJpYWxOdW1iZXJzIH0sXG4gICAgICAgICAgICBbdmVuZGluZ1NlcmlhbE51bWJlclBhdGhdOiB7IF9faW46IG1vZGVsLnNlcmlhbE51bWJlcnMgfVxuICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbHRlcjtcbiAgICAgIH1cbiAgICB9O1xuXG4gICAgdGhpcy5zb3J0YWJsZSA9IHRydWU7XG4gICAgdGhpcy5zb3J0aW5nQ29uZmlnID0ge1xuICAgICAgcGF0aFNvcnRpbmdDb25maWdzOiBbeyBwYXRoOiBoYXJkd2FyZVNlcmlhbE51bWJlclBhdGggfSwgeyBwYXRoOiB2ZW5kaW5nU2VyaWFsTnVtYmVyUGF0aCB9XVxuICAgIH07XG4gIH1cbn1cbiJdfQ==