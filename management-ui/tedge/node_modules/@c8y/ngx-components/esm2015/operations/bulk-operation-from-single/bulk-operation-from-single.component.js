import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { get } from 'lodash-es';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService, OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';
let BulkOperationFromSingleComponent = class BulkOperationFromSingleComponent extends BaseStepperComponent {
    constructor(activatedRoute, bulkOperationService) {
        super();
        this.activatedRoute = activatedRoute;
        this.bulkOperationService = bulkOperationService;
    }
    retrieveOperationPrototype() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            const prototype = (yield this.bulkOperationService.getOperation(this.activatedRoute.snapshot.params.operationId)).data;
            return {
                description: get(prototype, 'description'),
                prototype
            };
        });
    }
};
BulkOperationFromSingleComponent.ctorParameters = () => [
    { type: ActivatedRoute },
    { type: BulkOperationsService }
];
BulkOperationFromSingleComponent = tslib_1.__decorate([
    Component({
        selector: 'bulk-operation-from-single',
        template: "<c8y-bulk-operation-stepper> </c8y-bulk-operation-stepper>\n"
    })
], BulkOperationFromSingleComponent);
export { BulkOperationFromSingleComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9uLWZyb20tc2luZ2xlLyIsInNvdXJjZXMiOlsiYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ2xELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsZ0JBQWdCLEVBQ2pCLE1BQU0sd0RBQXdELENBQUM7QUFNaEUsSUFBYSxnQ0FBZ0MsR0FBN0MsTUFBYSxnQ0FBaUMsU0FBUSxvQkFBb0I7SUFDeEUsWUFDVSxjQUE4QixFQUM5QixvQkFBMkM7UUFFbkQsS0FBSyxFQUFFLENBQUM7UUFIQSxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFDOUIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUF1QjtJQUdyRCxDQUFDO0lBRWUsMEJBQTBCOztZQUN4QyxNQUFNLFNBQVMsR0FBZSxDQUFDLE1BQU0sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFlBQVksQ0FDekUsSUFBSSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FDaEQsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUVSLE9BQU87Z0JBQ0wsV0FBVyxFQUFFLEdBQUcsQ0FBQyxTQUFTLEVBQUUsYUFBYSxDQUFDO2dCQUMxQyxTQUFTO2FBQ1YsQ0FBQztRQUNKLENBQUM7S0FBQTtDQUNGLENBQUE7O1lBaEIyQixjQUFjO1lBQ1IscUJBQXFCOztBQUgxQyxnQ0FBZ0M7SUFKNUMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLDRCQUE0QjtRQUN0Qyx3RUFBd0Q7S0FDekQsQ0FBQztHQUNXLGdDQUFnQyxDQWtCNUM7U0FsQlksZ0NBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IElPcGVyYXRpb24gfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBnZXQgfSBmcm9tICdsb2Rhc2gtZXMnO1xuaW1wb3J0IHsgQmFzZVN0ZXBwZXJDb21wb25lbnQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gIE9wZXJhdGlvbkRldGFpbHNcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYnVsay1vcGVyYXRpb24tZnJvbS1zaW5nbGUnLFxuICB0ZW1wbGF0ZVVybDogJ2J1bGstb3BlcmF0aW9uLWZyb20tc2luZ2xlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBCdWxrT3BlcmF0aW9uRnJvbVNpbmdsZUNvbXBvbmVudCBleHRlbmRzIEJhc2VTdGVwcGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBhY3RpdmF0ZWRSb3V0ZTogQWN0aXZhdGVkUm91dGUsXG4gICAgcHJpdmF0ZSBidWxrT3BlcmF0aW9uU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBwcm90ZWN0ZWQgYXN5bmMgcmV0cmlldmVPcGVyYXRpb25Qcm90b3R5cGUoKTogUHJvbWlzZTxPcGVyYXRpb25EZXRhaWxzPiB7XG4gICAgY29uc3QgcHJvdG90eXBlOiBJT3BlcmF0aW9uID0gKGF3YWl0IHRoaXMuYnVsa09wZXJhdGlvblNlcnZpY2UuZ2V0T3BlcmF0aW9uKFxuICAgICAgdGhpcy5hY3RpdmF0ZWRSb3V0ZS5zbmFwc2hvdC5wYXJhbXMub3BlcmF0aW9uSWRcbiAgICApKS5kYXRhO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGRlc2NyaXB0aW9uOiBnZXQocHJvdG90eXBlLCAnZGVzY3JpcHRpb24nKSxcbiAgICAgIHByb3RvdHlwZVxuICAgIH07XG4gIH1cbn1cbiJdfQ==