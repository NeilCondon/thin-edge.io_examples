import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { get } from 'lodash-es';
import { BehaviorSubject } from 'rxjs';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService, OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';
let StepperBulkTypeFirmwareComponent = class StepperBulkTypeFirmwareComponent extends BaseStepperComponent {
    constructor(bulkOperationService, translate) {
        super();
        this.bulkOperationService = bulkOperationService;
        this.translate = translate;
        this.descriptionTemplate = gettext('{{ name }} (version {{ version }})');
        this.textFilter$ = new BehaviorSubject('');
        this.stepData = {
            firmware: undefined,
            versionOrPatch: undefined
        };
    }
    goToVersionOrPatchStep({ stepper }) {
        const selectedFirmware = this.stepData.firmware;
        this.bulkOperationService.setFirmwareId(selectedFirmware.id);
        this.deviceTypes = (selectedFirmware.c8y_Filter || {}).type;
        stepper.next();
    }
    onVersionOrPatchSelected(versionOrPatch) {
        this.stepData.versionOrPatch = versionOrPatch;
    }
    onFirmwareSelected(fw) {
        this.stepData.firmware = fw;
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
    retrieveOperationPrototype() {
        const selectedFirmware = this.stepData.firmware;
        const selectedVersionOrPatch = this.stepData.versionOrPatch;
        if (!selectedFirmware || !selectedVersionOrPatch) {
            return;
        }
        const firmware = {
            name: selectedFirmware.name,
            version: selectedVersionOrPatch.c8y_Firmware.version,
            url: selectedVersionOrPatch.c8y_Firmware.url
        };
        if (selectedVersionOrPatch.c8y_Patch) {
            firmware.isPatch = true;
            firmware.dependency = selectedVersionOrPatch.c8y_Patch.dependency;
        }
        const name = selectedFirmware.name;
        const version = selectedVersionOrPatch.c8y_Firmware.version;
        const description = `Update firmware to: ${name} (version: ${version}).`;
        return {
            name: gettext('Firmware update'),
            description: this.translate.instant(this.descriptionTemplate, {
                name: get(this.stepData, 'firmware.name'),
                version: get(this.stepData, 'versionOrPatch.c8y_Firmware.version')
            }),
            prototype: {
                description,
                c8y_Firmware: firmware
            }
        };
    }
    onSelectionChange(event) {
        this.textFilter$.next('');
        super.onSelectionChange(event);
    }
};
StepperBulkTypeFirmwareComponent.ctorParameters = () => [
    { type: BulkOperationsService },
    { type: TranslateService }
];
StepperBulkTypeFirmwareComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-stepper-firmware',
        template: "<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select firmware' | translate;\n      completed: !!stepData?.firmware;\n      buttonsDisabled: !stepData?.firmware;\n      onNext: goToVersionOrPatchStep.bind(this)\n    \"\n  >\n    <c8y-select-firmware-step\n      [selected]=\"stepData?.firmware\"\n      (firmware)=\"onFirmwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-firmware-step\n  ></ng-container>\n  <ng-container\n    *customStep=\"\n      'Select version or patch' | translate;\n      completed: !!stepData?.versionOrPatch;\n      buttonsDisabled: !stepData?.versionOrPatch\n    \"\n  >\n    <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <h4 class=\"text-center m-b-16 text-gray\" translate>\n            Select version or patch\n          </h4>\n          <p class=\"text-center p-b-8 text-truncate\">\n            <strong [title]=\"stepData?.firmware?.name\">{{ stepData?.firmware?.name }}</strong\n            ><br />\n            <small [title]=\"stepData?.firmware?.description\">{{\n              stepData?.firmware?.description\n            }}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-h\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-version-or-patch-step\n            [selected]=\"stepData?.versionOrPatch\"\n            (versionOrPatch)=\"onVersionOrPatchSelected($event)\">\n          </c8y-version-or-patch-step>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"
    })
], StepperBulkTypeFirmwareComponent);
export { StepperBulkTypeFirmwareComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlLyIsInNvdXJjZXMiOlsic3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxlQUFlLEVBQWdCLE1BQU0sTUFBTSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsZ0JBQWdCLEVBQ2pCLE1BQU0sd0RBQXdELENBQUM7QUFNaEUsSUFBYSxnQ0FBZ0MsR0FBN0MsTUFBYSxnQ0FBaUMsU0FBUSxvQkFBb0I7SUFleEUsWUFDVSxvQkFBMkMsRUFDM0MsU0FBMkI7UUFFbkMsS0FBSyxFQUFFLENBQUM7UUFIQSx5QkFBb0IsR0FBcEIsb0JBQW9CLENBQXVCO1FBQzNDLGNBQVMsR0FBVCxTQUFTLENBQWtCO1FBaEI1Qix3QkFBbUIsR0FBVyxPQUFPLENBQUMsb0NBQW9DLENBQUMsQ0FBQztRQUVyRixnQkFBVyxHQUE0QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUUvRCxhQUFRLEdBQWlFO1lBQ3ZFLFFBQVEsRUFBRSxTQUFTO1lBQ25CLGNBQWMsRUFBRSxTQUFTO1NBQzFCLENBQUM7SUFZRixDQUFDO0lBRUQsc0JBQXNCLENBQUMsRUFBRSxPQUFPLEVBQUU7UUFDaEMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNoRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxVQUFVLElBQUksRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQzVELE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNqQixDQUFDO0lBRUQsd0JBQXdCLENBQUMsY0FBOEI7UUFDckQsSUFBSSxDQUFDLFFBQVEsQ0FBQyxjQUFjLEdBQUcsY0FBYyxDQUFDO0lBQ2hELENBQUM7SUFFRCxrQkFBa0IsQ0FBQyxFQUFrQjtRQUNuQyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7SUFDOUIsQ0FBQztJQUVELFdBQVc7UUFDVCxJQUFJLElBQUksQ0FBQyxZQUFZLEVBQUU7WUFDckIsSUFBSSxDQUFDLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUNqQztJQUNILENBQUM7SUFFUywwQkFBMEI7UUFDbEMsTUFBTSxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLFFBQVEsQ0FBQztRQUNoRCxNQUFNLHNCQUFzQixHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDO1FBRTVELElBQUksQ0FBQyxnQkFBZ0IsSUFBSSxDQUFDLHNCQUFzQixFQUFFO1lBQ2hELE9BQU87U0FDUjtRQUVELE1BQU0sUUFBUSxHQUFvQjtZQUNoQyxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsSUFBSTtZQUMzQixPQUFPLEVBQUUsc0JBQXNCLENBQUMsWUFBWSxDQUFDLE9BQU87WUFDcEQsR0FBRyxFQUFFLHNCQUFzQixDQUFDLFlBQVksQ0FBQyxHQUFHO1NBQ2YsQ0FBQztRQUVoQyxJQUFJLHNCQUFzQixDQUFDLFNBQVMsRUFBRTtZQUNwQyxRQUFRLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQztZQUN4QixRQUFRLENBQUMsVUFBVSxHQUFHLHNCQUFzQixDQUFDLFNBQVMsQ0FBQyxVQUFVLENBQUM7U0FDbkU7UUFFRCxNQUFNLElBQUksR0FBRyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUM7UUFDbkMsTUFBTSxPQUFPLEdBQUcsc0JBQXNCLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQztRQUM1RCxNQUFNLFdBQVcsR0FBVyx1QkFBdUIsSUFBSSxjQUFjLE9BQU8sSUFBSSxDQUFDO1FBRWpGLE9BQU87WUFDTCxJQUFJLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDO1lBQ2hDLFdBQVcsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsbUJBQW1CLEVBQUU7Z0JBQzVELElBQUksRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxlQUFlLENBQUM7Z0JBQ3pDLE9BQU8sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxxQ0FBcUMsQ0FBQzthQUNuRSxDQUFDO1lBQ0YsU0FBUyxFQUFHO2dCQUNWLFdBQVc7Z0JBQ1gsWUFBWSxFQUFFLFFBQVE7YUFDRztTQUM1QixDQUFDO0lBQ0osQ0FBQztJQUVTLGlCQUFpQixDQUFDLEtBQTRCO1FBQ3RELElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFDO1FBQzFCLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0YsQ0FBQTs7WUFuRWlDLHFCQUFxQjtZQUNoQyxnQkFBZ0I7O0FBakIxQixnQ0FBZ0M7SUFKNUMsU0FBUyxDQUFDO1FBQ1QsUUFBUSxFQUFFLHNCQUFzQjtRQUNoQyx1dURBQXdEO0tBQ3pELENBQUM7R0FDVyxnQ0FBZ0MsQ0FtRjVDO1NBbkZZLGdDQUFnQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN0ZXBwZXJTZWxlY3Rpb25FdmVudCB9IGZyb20gJ0Bhbmd1bGFyL2Nkay9zdGVwcGVyJztcbmltcG9ydCB7IENvbXBvbmVudCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCwgSU9wZXJhdGlvbiB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IGdldHRleHQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFRyYW5zbGF0ZVNlcnZpY2UgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcbmltcG9ydCB7IGdldCB9IGZyb20gJ2xvZGFzaC1lcyc7XG5pbXBvcnQgeyBCZWhhdmlvclN1YmplY3QsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgQmFzZVN0ZXBwZXJDb21wb25lbnQgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb24tc3RlcHBlcic7XG5pbXBvcnQge1xuICBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gIE9wZXJhdGlvbkRldGFpbHNcbn0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXN0ZXBwZXItZmlybXdhcmUnLFxuICB0ZW1wbGF0ZVVybDogJ3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBTdGVwcGVyQnVsa1R5cGVGaXJtd2FyZUNvbXBvbmVudCBleHRlbmRzIEJhc2VTdGVwcGVyQ29tcG9uZW50IGltcGxlbWVudHMgT25EZXN0cm95IHtcbiAgcmVhZG9ubHkgZGVzY3JpcHRpb25UZW1wbGF0ZTogc3RyaW5nID0gZ2V0dGV4dCgne3sgbmFtZSB9fSAodmVyc2lvbiB7eyB2ZXJzaW9uIH19KScpO1xuXG4gIHRleHRGaWx0ZXIkOiBCZWhhdmlvclN1YmplY3Q8c3RyaW5nPiA9IG5ldyBCZWhhdmlvclN1YmplY3QoJycpO1xuXG4gIHN0ZXBEYXRhOiB7IGZpcm13YXJlOiBJTWFuYWdlZE9iamVjdDsgdmVyc2lvbk9yUGF0Y2g6IElNYW5hZ2VkT2JqZWN0IH0gPSB7XG4gICAgZmlybXdhcmU6IHVuZGVmaW5lZCxcbiAgICB2ZXJzaW9uT3JQYXRjaDogdW5kZWZpbmVkXG4gIH07XG5cbiAgc2VsZWN0ZWRGaXJtd2FyZTogSU1hbmFnZWRPYmplY3Q7XG4gIHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2g6IElNYW5hZ2VkT2JqZWN0O1xuXG4gIHByaXZhdGUgc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb247XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBidWxrT3BlcmF0aW9uU2VydmljZTogQnVsa09wZXJhdGlvbnNTZXJ2aWNlLFxuICAgIHByaXZhdGUgdHJhbnNsYXRlOiBUcmFuc2xhdGVTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBnb1RvVmVyc2lvbk9yUGF0Y2hTdGVwKHsgc3RlcHBlciB9KSB7XG4gICAgY29uc3Qgc2VsZWN0ZWRGaXJtd2FyZSA9IHRoaXMuc3RlcERhdGEuZmlybXdhcmU7XG4gICAgdGhpcy5idWxrT3BlcmF0aW9uU2VydmljZS5zZXRGaXJtd2FyZUlkKHNlbGVjdGVkRmlybXdhcmUuaWQpO1xuICAgIHRoaXMuZGV2aWNlVHlwZXMgPSAoc2VsZWN0ZWRGaXJtd2FyZS5jOHlfRmlsdGVyIHx8IHt9KS50eXBlO1xuICAgIHN0ZXBwZXIubmV4dCgpO1xuICB9XG5cbiAgb25WZXJzaW9uT3JQYXRjaFNlbGVjdGVkKHZlcnNpb25PclBhdGNoOiBJTWFuYWdlZE9iamVjdCkge1xuICAgIHRoaXMuc3RlcERhdGEudmVyc2lvbk9yUGF0Y2ggPSB2ZXJzaW9uT3JQYXRjaDtcbiAgfVxuXG4gIG9uRmlybXdhcmVTZWxlY3RlZChmdzogSU1hbmFnZWRPYmplY3QpIHtcbiAgICB0aGlzLnN0ZXBEYXRhLmZpcm13YXJlID0gZnc7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG5cbiAgcHJvdGVjdGVkIHJldHJpZXZlT3BlcmF0aW9uUHJvdG90eXBlKCk6IE9wZXJhdGlvbkRldGFpbHMge1xuICAgIGNvbnN0IHNlbGVjdGVkRmlybXdhcmUgPSB0aGlzLnN0ZXBEYXRhLmZpcm13YXJlO1xuICAgIGNvbnN0IHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2ggPSB0aGlzLnN0ZXBEYXRhLnZlcnNpb25PclBhdGNoO1xuXG4gICAgaWYgKCFzZWxlY3RlZEZpcm13YXJlIHx8ICFzZWxlY3RlZFZlcnNpb25PclBhdGNoKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgZmlybXdhcmU6IElNYW5hZ2VkT2JqZWN0ID0gKHtcbiAgICAgIG5hbWU6IHNlbGVjdGVkRmlybXdhcmUubmFtZSxcbiAgICAgIHZlcnNpb246IHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2guYzh5X0Zpcm13YXJlLnZlcnNpb24sXG4gICAgICB1cmw6IHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2guYzh5X0Zpcm13YXJlLnVybFxuICAgIH0gYXMgdW5rbm93bikgYXMgSU1hbmFnZWRPYmplY3Q7XG5cbiAgICBpZiAoc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaC5jOHlfUGF0Y2gpIHtcbiAgICAgIGZpcm13YXJlLmlzUGF0Y2ggPSB0cnVlO1xuICAgICAgZmlybXdhcmUuZGVwZW5kZW5jeSA9IHNlbGVjdGVkVmVyc2lvbk9yUGF0Y2guYzh5X1BhdGNoLmRlcGVuZGVuY3k7XG4gICAgfVxuXG4gICAgY29uc3QgbmFtZSA9IHNlbGVjdGVkRmlybXdhcmUubmFtZTtcbiAgICBjb25zdCB2ZXJzaW9uID0gc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaC5jOHlfRmlybXdhcmUudmVyc2lvbjtcbiAgICBjb25zdCBkZXNjcmlwdGlvbjogc3RyaW5nID0gYFVwZGF0ZSBmaXJtd2FyZSB0bzogJHtuYW1lfSAodmVyc2lvbjogJHt2ZXJzaW9ufSkuYDtcblxuICAgIHJldHVybiB7XG4gICAgICBuYW1lOiBnZXR0ZXh0KCdGaXJtd2FyZSB1cGRhdGUnKSxcbiAgICAgIGRlc2NyaXB0aW9uOiB0aGlzLnRyYW5zbGF0ZS5pbnN0YW50KHRoaXMuZGVzY3JpcHRpb25UZW1wbGF0ZSwge1xuICAgICAgICBuYW1lOiBnZXQodGhpcy5zdGVwRGF0YSwgJ2Zpcm13YXJlLm5hbWUnKSxcbiAgICAgICAgdmVyc2lvbjogZ2V0KHRoaXMuc3RlcERhdGEsICd2ZXJzaW9uT3JQYXRjaC5jOHlfRmlybXdhcmUudmVyc2lvbicpXG4gICAgICB9KSxcbiAgICAgIHByb3RvdHlwZTogKHtcbiAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgIGM4eV9GaXJtd2FyZTogZmlybXdhcmVcbiAgICAgIH0gYXMgdW5rbm93bikgYXMgSU9wZXJhdGlvblxuICAgIH07XG4gIH1cblxuICBwcm90ZWN0ZWQgb25TZWxlY3Rpb25DaGFuZ2UoZXZlbnQ6IFN0ZXBwZXJTZWxlY3Rpb25FdmVudCkge1xuICAgIHRoaXMudGV4dEZpbHRlciQubmV4dCgnJyk7XG4gICAgc3VwZXIub25TZWxlY3Rpb25DaGFuZ2UoZXZlbnQpO1xuICB9XG59XG4iXX0=