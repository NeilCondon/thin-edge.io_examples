import * as tslib_1 from "tslib";
import { Component, Input } from '@angular/core';
import { NgForm, ControlContainer } from '@angular/forms';
let OpcuaDeviceProtocolDescription = class OpcuaDeviceProtocolDescription {
    constructor() {
        this.moId = '';
    }
    set model(_model) {
        this.moId = _model.referencedServerId;
        this._model = _model;
        this.autoScan = _model.enabled ? '1' : '0';
    }
    setAutoScanOption(data) {
        this._model.enabled = data !== '0' ? true : false;
    }
};
tslib_1.__decorate([
    Input()
], OpcuaDeviceProtocolDescription.prototype, "model", null);
OpcuaDeviceProtocolDescription = tslib_1.__decorate([
    Component({
        selector: 'opcua-device-protocol-description',
        template: "<div class=\"card m-b-4\">\n  <div class=\"card-block\">\n    <div class=\"row\">\n      <div class=\"col-md-7\">\n        <div class=\"form-group\">\n          <label translate>Name</label>\n          <label class=\"editable\" [ngClass]=\"{ updated: ctrlName.dirty }\">\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              name=\"name\"\n              #ctrlName=\"ngModel\"\n              [(ngModel)]=\"_model.name\"\n            />\n          </label>\n        </div>\n        <div class=\"form-group\">\n          <label translate>Description</label>\n          <label class=\"editable\" [ngClass]=\"{ updated: ctrlDescription.dirty }\">\n            <textarea\n              class=\"form-control\"\n              rows=\"1\"\n              name=\"description\"\n              #ctrlDescription=\"ngModel\"\n              [(ngModel)]=\"_model.description\"\n            ></textarea>\n            <span *ngIf=\"_model.description\">\n              {{ _model.description }}\n            </span>\n          </label>\n        </div>\n        <div class=\"flex-row\">\n          <div style=\"min-width: 120px;\">\n            <button\n              type=\"button\"\n              class=\"btn m-t-4\"\n              name=\"autoScanAddressSpace\"\n              [(ngModel)]=\"autoScan\"\n              (ngModelChange)=\"setAutoScanOption($event)\"\n              btnCheckbox\n              btnCheckboxTrue=\"1\"\n              btnCheckboxFalse=\"0\"\n              ngDefaultControl\n            >\n              <span *ngIf=\"autoScan === '1'\">\n                <i c8yIcon=\"check\" class=\"text-success\"></i>\n                {{ 'Active' | translate }}\n              </span>\n              <span *ngIf=\"autoScan === '0'\">\n                <i c8yIcon=\"ban\" class=\"text-danger\"></i> \n                {{ 'Inactive' | translate }}\n              </span>\n            </button>\n          </div>\n          <small class=\"m-l-16 text-muted\">\n            {{ 'When active, the gateway scans the address space of all servers and automatically applies this device protocol to all nodes matching the criteria.' | translate }}\n          </small>\n        </div>\n      </div>\n      <div class=\"col-md-5\">\n        <dl class=\"dl-horizontal m-b-0\">\n          <dt><label translate>Device protocol type</label></dt>\n          <dd>\n            <span class=\"label label-info m-r-8 text-capitalize\">\n              {{ _model.fieldbusType }}\n            </span>\n          </dd>\n          <dt><label class=\"small\" translate>ID</label></dt>\n          <dd style=\"font-size:1.5em\">{{ _model.id }}</dd>\n          <dt><label class=\"small\" translate>Date created</label></dt>\n          <dd>{{ _model.creationTime | c8yDate }}</dd>\n          <dt><label class=\"small\" translate>Last update</label></dt>\n          <dd>{{ _model.lastUpdated | c8yDate }}</dd>\n          <dt><label class=\"small\" translate>Fieldbus version</label></dt>\n          <dd>{{ _model.fieldbusVersion }}</dd>\n        </dl>\n      </div>\n    </div>\n  </div>\n</div>\n",
        viewProviders: [{ provide: ControlContainer, useExisting: NgForm }]
    })
], OpcuaDeviceProtocolDescription);
export { OpcuaDeviceProtocolDescription };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BjdWEtZGV2aWNlLXByb3RvY29sLWRlc2NyaXB0aW9uLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvcHJvdG9jb2wtb3BjdWEvIiwic291cmNlcyI6WyJvcGN1YS1kZXZpY2UtcHJvdG9jb2wtZGVzY3JpcHRpb24uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRCxPQUFPLEVBQUMsTUFBTSxFQUFFLGdCQUFnQixFQUFDLE1BQU0sZ0JBQWdCLENBQUM7QUFReEQsSUFBYSw4QkFBOEIsR0FBM0MsTUFBYSw4QkFBOEI7SUFOM0M7UUFlVSxTQUFJLEdBQVcsRUFBRSxDQUFDO0lBSzVCLENBQUM7SUFYVSxJQUFJLEtBQUssQ0FBQyxNQUFNO1FBQ3ZCLElBQUksQ0FBQyxJQUFJLEdBQUcsTUFBTSxDQUFDLGtCQUFrQixDQUFDO1FBQ3RDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxRQUFRLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDN0MsQ0FBQztJQUlELGlCQUFpQixDQUFDLElBQVk7UUFDNUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxPQUFPLEdBQUcsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7SUFDcEQsQ0FBQztDQUNGLENBQUE7QUFYVTtJQUFSLEtBQUssRUFBRTsyREFJUDtBQVBVLDhCQUE4QjtJQU4xQyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsbUNBQW1DO1FBQzdDLHVpR0FBdUQ7UUFDdkQsYUFBYSxFQUFFLENBQUMsRUFBQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBQyxDQUFDO0tBQ2xFLENBQUM7R0FFVyw4QkFBOEIsQ0FjMUM7U0FkWSw4QkFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7TmdGb3JtLCBDb250cm9sQ29udGFpbmVyfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ29wY3VhLWRldmljZS1wcm90b2NvbC1kZXNjcmlwdGlvbicsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL29wY3VhLWRldmljZS1wcm90b2NvbC1kZXNjcmlwdGlvbi5odG1sJyxcclxuICB2aWV3UHJvdmlkZXJzOiBbe3Byb3ZpZGU6IENvbnRyb2xDb250YWluZXIsIHVzZUV4aXN0aW5nOiBOZ0Zvcm19XVxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIE9wY3VhRGV2aWNlUHJvdG9jb2xEZXNjcmlwdGlvbiB7XHJcbiAgX21vZGVsOiBhbnk7XHJcbiAgYXV0b1NjYW46IHN0cmluZztcclxuICBASW5wdXQoKSBzZXQgbW9kZWwoX21vZGVsKSB7XHJcbiAgICB0aGlzLm1vSWQgPSBfbW9kZWwucmVmZXJlbmNlZFNlcnZlcklkO1xyXG4gICAgdGhpcy5fbW9kZWwgPSBfbW9kZWw7XHJcbiAgICB0aGlzLmF1dG9TY2FuID0gX21vZGVsLmVuYWJsZWQgPyAnMScgOiAnMCc7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIG1vSWQ6IHN0cmluZyA9ICcnO1xyXG5cclxuICBzZXRBdXRvU2Nhbk9wdGlvbihkYXRhOiBzdHJpbmcpIHtcclxuICAgIHRoaXMuX21vZGVsLmVuYWJsZWQgPSBkYXRhICE9PSAnMCcgPyB0cnVlIDogZmFsc2U7XHJcbiAgfVxyXG59XHJcbiJdfQ==