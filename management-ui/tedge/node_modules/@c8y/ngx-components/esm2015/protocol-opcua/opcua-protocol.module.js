import * as tslib_1 from "tslib";
import { CdkTreeModule } from '@angular/cdk/tree';
import { RouterModule } from '@angular/router';
import { NgModule } from '@angular/core';
import { CoreModule, DeviceStatusModule, DropAreaModule, FormsModule, gettext, HOOK_ONCE_ROUTE, ViewContext } from '@c8y/ngx-components';
import { ButtonsModule } from 'ngx-bootstrap/buttons';
import { AddressSpaceService } from './address-space.service';
import { OpcuaAddressSpaceDetailComponent } from './opcua-address-space-detail.component';
import { OpcuaDeviceProtocolDetailComponent } from './opcua-device-protocol-detail.component';
import { OpcuaDeviceProtocolDataReportingComponent } from './opcua-device-protocol-data-reporting.component';
import { OpcuaDeviceProtocolMapping } from './opcua-device-protocol-mapping.component';
import { ReactiveFormsModule } from '@angular/forms';
import { OpcuaDeviceProtocolObjectMapping } from './opcua-device-protocol-object-mapping.component';
import { OpcuaDeviceProtocolMappingCustomAction } from './opcua-device-protocol-mapping-customaction.component';
import { OpcuaDeviceProtocolObjectMappingStatus } from './opcua-device-protocol-object-mapping-status-icon.component';
import { OpcuaAddressSpaceComponent } from './opcua-address-space.component';
import { OpcuaAgentGuard } from './opcua-agent.guard';
import { OpcuaMicroserviceGuard } from './opcua-microservice.guard';
import { OpcuaServerConfigComponent } from './opcua-server-config.component';
import { OpcuaServerListComponent } from './opcua-server-list.component';
import { OpcuaServerGuard } from './opcua-server.guard';
import { OpcuaServersComponent } from './opcua-servers.component';
import { OpcuaService } from './opcuaService';
import { CollapseModule } from 'ngx-bootstrap/collapse';
import { BsDropdownModule } from 'ngx-bootstrap/dropdown';
import { TooltipModule } from 'ngx-bootstrap/tooltip';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { OpcuaDeviceProtocolDescription } from './opcua-device-protocol-description.component';
import { OpcuaAddressSpaceTreeComponent } from './opcua-address-space-tree.component';
import { OpcuaAutoApplySettingsComponent } from './opcua-auto-apply-settings.component';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { OpcuaDeviceProtocolBrowsePathValidation } from './opcua-device-protocol-browse-path-validation.directive';
const routes = [
    {
        context: ViewContext.Device,
        path: 'opcua-servers',
        component: OpcuaServersComponent,
        label: gettext('OPC UA server'),
        icon: 'server',
        canActivate: [OpcuaAgentGuard, OpcuaMicroserviceGuard]
    },
    {
        context: ViewContext.Device,
        path: 'address-space',
        component: OpcuaAddressSpaceComponent,
        label: gettext('Address space'),
        icon: 'cloud-network',
        canActivate: [OpcuaServerGuard, OpcuaMicroserviceGuard]
    }
];
const deviceProtocolRoutes = [
    {
        path: 'deviceprotocols/opcuaV2/:id',
        component: OpcuaDeviceProtocolDetailComponent
    }
];
const ɵ0 = routes;
let OpcuaProtocolModule = class OpcuaProtocolModule {
};
OpcuaProtocolModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            OpcuaServersComponent,
            OpcuaServerListComponent,
            OpcuaServerConfigComponent,
            OpcuaAddressSpaceComponent,
            OpcuaAddressSpaceTreeComponent,
            OpcuaAddressSpaceDetailComponent,
            OpcuaDeviceProtocolDescription,
            OpcuaDeviceProtocolDetailComponent,
            OpcuaDeviceProtocolDataReportingComponent,
            OpcuaDeviceProtocolMapping,
            OpcuaDeviceProtocolObjectMapping,
            OpcuaDeviceProtocolMappingCustomAction,
            OpcuaDeviceProtocolObjectMappingStatus,
            OpcuaAutoApplySettingsComponent,
            OpcuaDeviceProtocolBrowsePathValidation
        ],
        imports: [
            CoreModule,
            FormsModule,
            ReactiveFormsModule,
            DropAreaModule,
            ButtonsModule,
            CdkTreeModule,
            RouterModule.forRoot(deviceProtocolRoutes, { useHash: true }),
            TooltipModule.forRoot(),
            PopoverModule.forRoot(),
            DeviceStatusModule,
            BrowserAnimationsModule,
            CollapseModule.forRoot(),
            BsDropdownModule.forRoot()
        ],
        entryComponents: [
            OpcuaAddressSpaceTreeComponent,
            OpcuaAddressSpaceComponent,
            OpcuaServersComponent
        ],
        providers: [
            OpcuaAgentGuard,
            OpcuaServerGuard,
            OpcuaMicroserviceGuard,
            OpcuaService,
            AddressSpaceService,
            {
                provide: HOOK_ONCE_ROUTE,
                useValue: ɵ0,
                multi: true
            }
        ]
    })
], OpcuaProtocolModule);
export { OpcuaProtocolModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,