import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, ViewChild, Input, HostListener } from '@angular/core';
import { FormGroup, Validators, FormBuilder } from '@angular/forms';
import { DeviceGridService } from '@c8y/ngx-components/device-grid';
import { C8yStepper, Pagination, AlertService, gettext } from '@c8y/ngx-components';
import { AddGroupService } from './add-group.service';
import { SubAssetsService } from '../sub-assets.service';
let AddGroupComponent = class AddGroupComponent {
    constructor(deviceGridService, fb, addGroupService, alert, subAssetsService) {
        this.deviceGridService = deviceGridService;
        this.fb = fb;
        this.addGroupService = addGroupService;
        this.alert = alert;
        this.subAssetsService = subAssetsService;
        this.refresh = new EventEmitter();
        this.onDeviceQueryStringChange = new EventEmitter();
        this.onCancel = new EventEmitter();
        this.pendingStatus = false;
        this.pagination = { pageSize: 20, currentPage: 1 };
        this.selected = [];
        this.ITEMS_SELECT_LIMIT = 15;
        this.btnLabels = {
            next: gettext('Next'),
            cancel: gettext('Cancel'),
            create: gettext('Create')
        };
    }
    onEnterKeyDown(event) {
        // Order matters! Needs to be placed before this.stepper.next
        if (this.stepper.selectedIndex === 1) {
            this.createGroup();
        }
        this.stepper.next();
    }
    onEscapeKeyDown(event) {
        this.onCancel.emit();
    }
    onBackspaceKeyDown(event) {
        this.stepper.previous();
        setTimeout(() => {
            this.setFocusOnNameInput();
        });
    }
    ngOnInit() {
        this.formGroupStepOne = this.fb.group({
            name: ['', Validators.required],
            description: ['']
        });
        this.subscription = this.onCancel.subscribe(() => this.resetStepper());
    }
    ngAfterViewInit() {
        this.nameInput = this.nameInputRef.nativeElement;
        this.setFocusOnNameInput();
    }
    createGroup() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.pendingStatus = true;
            this.subAssetsService.uiOnlyCountersUpdate.next('INCREASE');
            yield this.addGroupService.createGroupAndAssignDevices(this.formGroupStepOne.value, this.currentGroupId, this.selected);
            this.pendingStatus = false;
            this.resetStepper();
            this.alert.success(gettext('Group created.'));
            this.refresh.emit();
            this.onCancel.emit();
        });
    }
    onSelected(selectedDevicesIDs) {
        this.selected = selectedDevicesIDs;
    }
    resetStepper() {
        this.stepper.reset();
        this.stepper.selectedIndex = 1;
        this.selected = [];
    }
    ngOnDestroy() {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    }
    setFocusOnNameInput() {
        if (this.nameInput) {
            this.nameInput.focus();
            this.nameInput.select();
        }
    }
};
AddGroupComponent.ctorParameters = () => [
    { type: DeviceGridService },
    { type: FormBuilder },
    { type: AddGroupService },
    { type: AlertService },
    { type: SubAssetsService }
];
tslib_1.__decorate([
    Input()
], AddGroupComponent.prototype, "currentGroupId", void 0);
tslib_1.__decorate([
    Input()
], AddGroupComponent.prototype, "refresh", void 0);
tslib_1.__decorate([
    Output()
], AddGroupComponent.prototype, "onDeviceQueryStringChange", void 0);
tslib_1.__decorate([
    Output()
], AddGroupComponent.prototype, "onCancel", void 0);
tslib_1.__decorate([
    ViewChild(C8yStepper, { static: false })
], AddGroupComponent.prototype, "stepper", void 0);
tslib_1.__decorate([
    ViewChild('nameRef', { static: false })
], AddGroupComponent.prototype, "nameInputRef", void 0);
tslib_1.__decorate([
    HostListener('document:keydown.enter', ['$event'])
], AddGroupComponent.prototype, "onEnterKeyDown", null);
tslib_1.__decorate([
    HostListener('document:keydown.escape', ['$event'])
], AddGroupComponent.prototype, "onEscapeKeyDown", null);
tslib_1.__decorate([
    HostListener('document:keydown.backspace', ['$event'])
], AddGroupComponent.prototype, "onBackspaceKeyDown", null);
AddGroupComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-add-group',
        template: "<c8y-title *ngIf=\"!currentGroupId\">\n  {{ 'Add group' | translate }}\n</c8y-title>\n\n<div class=\"d-contents\" *ngIf=\"!currentGroupId; else stepper\">\n  <ng-container [ngTemplateOutlet]=\"stepper\"></ng-container>\n</div>\n\n<ng-template #stepper>\n  <c8y-stepper\n    class=\"flex-col flex-nowrap no-align-items fit-h c8y-stepper--no-btns\"\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-md-6', 'col-md-offset-3', 'p-t-16', 'p-b-32', 'flex-no-shrink']\"\n    linear\n  >\n    <cdk-step [stepControl]=\"formGroupStepOne\" [label]=\"'New group' | translate\">\n      <div class=\"p-16 p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center text-medium\">\n              {{ 'New group' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"row\">\n              <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n                <c8y-form-group>\n                  <div [formGroup]=\"formGroupStepOne\">\n                    <c8y-form-group>\n                      <label translate>Name</label>\n                      <input\n                        class=\"form-control\"\n                        type=\"text\"\n                        formControlName=\"name\"\n                        placeholder=\"{{ 'e.g. First floor' | translate }} \"\n                        #nameRef\n                        required\n                      />\n                      <c8y-messages>\n                        <c8y-message *ngIf=\"!formGroupStepOne.untouched && !nameRef.value\" translate\n                          >This field is required.</c8y-message\n                        >\n                      </c8y-messages>\n                    </c8y-form-group>\n\n                    <c8y-form-group>\n                      <label translate>Description</label>\n                      <input\n                        class=\"form-control\"\n                        type=\"text\"\n                        formControlName=\"description\"\n                        placeholder=\"{{ 'e.g. first floor devices' | translate }}\"\n                      />\n                    </c8y-form-group>\n                  </div>\n                </c8y-form-group>\n                <c8y-form-group>\n                  <div [formGroup]=\"formGroupStepOne\"></div>\n                </c8y-form-group>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        (onCancel)=\"onCancel.emit()\"\n        [labels]=\"{ next: btnLabels.next, cancel: btnLabels.cancel }\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <cdk-step [label]=\"'Assign devices' | translate\">\n      <div class=\"p-16 p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center text-medium\">\n              {{ 'Assign devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-xs-12 no-gutter flex-grow\">\n        <c8y-device-grid\n          [title]=\"'Select target devices' | translate\"\n          [actionControls]=\"[]\"\n          [infiniteScroll]=\"'auto'\"\n          [selectable]=\"'true'\"\n          [pagination]=\"pagination\"\n          (itemsSelect)=\"onSelected($event)\"\n          [itemsSelectLimit]=\"ITEMS_SELECT_LIMIT\"\n          [refresh]=\"refresh\"\n          class=\"d-contents\"\n        >\n          <div class=\"c8y-empty-state\">\n            <h1 c8yIcon=\"search\"></h1>\n            <div>\n              <p>\n                <strong>{{ 'No matching devices.' | translate }}</strong>\n              </p>\n              <small>{{ 'Refine your search terms' | translate }}</small>\n            </div>\n          </div>\n        </c8y-device-grid>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        (onCancel)=\"onCancel.emit()\"\n        (onCustom)=\"createGroup()\"\n        [labels]=\"{ custom: btnLabels.create }\"\n        [pending]=\"pendingStatus\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</ng-template>\n"
    })
], AddGroupComponent);
export { AddGroupComponent };
//# sourceMappingURL=data:application/json;base64,