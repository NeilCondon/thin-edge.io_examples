import * as tslib_1 from "tslib";
import { Component, Input, Output, EventEmitter, HostListener } from '@angular/core';
import { AlertService, gettext } from '@c8y/ngx-components';
import { InventoryService } from '@c8y/client';
import { SubAssetsService } from '../sub-assets.service';
import { AssignDevicesService } from './assign-devices.service';
let AssignChildDevicesComponent = class AssignChildDevicesComponent {
    constructor(alert, subAssetsService, inventoryService, assignDevicesService) {
        this.alert = alert;
        this.subAssetsService = subAssetsService;
        this.inventoryService = inventoryService;
        this.assignDevicesService = assignDevicesService;
        this.onCancel = new EventEmitter();
        this.refresh = new EventEmitter();
        this.selected = [];
        this.pendingStatus = false;
    }
    onEnterKeyDown(event) {
        if (this.selected.length > 0) {
            this.assignDevices();
        }
    }
    onEscapeKeyDown(event) {
        this.onCancel.emit();
    }
    ngOnInit() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.setNotIncludedInGroupQuery();
        });
    }
    setNotIncludedInGroupQuery() {
        const notIncludedInGroupQuery = { __not: { __bygroupid: this.currentGroupId } };
        this.baseQuery = notIncludedInGroupQuery;
    }
    assignDevices() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            this.pendingStatus = true;
            try {
                yield this.assignDevicesService.assignDevices(this.currentGroupId, this.selected);
                this.refresh.emit();
                this.alert.success(gettext('Child devices assigned to the group.'));
            }
            catch (error) {
                this.alert.danger(gettext('Could not assign child devices to the group'), error);
            }
            this.pendingStatus = false;
            this.selected = [];
            this.onCancel.emit();
        });
    }
    onSelected(selectedDevicesIDs) {
        this.selected = selectedDevicesIDs;
    }
};
AssignChildDevicesComponent.ctorParameters = () => [
    { type: AlertService },
    { type: SubAssetsService },
    { type: InventoryService },
    { type: AssignDevicesService }
];
tslib_1.__decorate([
    Input()
], AssignChildDevicesComponent.prototype, "currentGroupId", void 0);
tslib_1.__decorate([
    Input()
], AssignChildDevicesComponent.prototype, "parentDevice", void 0);
tslib_1.__decorate([
    Output()
], AssignChildDevicesComponent.prototype, "onCancel", void 0);
tslib_1.__decorate([
    Input()
], AssignChildDevicesComponent.prototype, "refresh", void 0);
tslib_1.__decorate([
    HostListener('document:keydown.enter', ['$event'])
], AssignChildDevicesComponent.prototype, "onEnterKeyDown", null);
tslib_1.__decorate([
    HostListener('document:keydown.escape', ['$event'])
], AssignChildDevicesComponent.prototype, "onEscapeKeyDown", null);
AssignChildDevicesComponent = tslib_1.__decorate([
    Component({
        selector: 'c8y-assign-child-devices',
        template: "<div class=\"card-block flex-no-shrink separator-bottom col-xs-12 large-padding p-t-24 p-b-24\">\n  <div class=\"row\">\n    <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n      <h4 class=\"text-center text-medium\">\n        {{ 'Assign child devices' | translate }}\n      </h4>\n    </div>\n  </div>\n</div>\n\n<div class=\"d-flex d-col no-align-items fit-h\">\n  <c8y-sub-assets-grid\n    [title]=\"'Select target child devices' | translate\"\n    [emptyStateText]=\"'All child devices are already assigned to the group' | translate\"\n    [refresh]=\"refresh\"\n    [actionControls]=\"[]\"\n    [selectable]=\"true\"\n    [parent-group]=\"parentDevice\"\n    [baseQuery]=\"baseQuery\"\n    (itemsSelect)=\"onSelected($event)\"\n    class=\"d-contents\"\n  >\n  </c8y-sub-assets-grid>\n</div>\n\n<div class=\"text-center card-footer p-24 separator\">\n  <button\n    (click)=\"onCancel.emit()\"\n    type=\"button\"\n    class=\"btn btn-default\"\n    title=\"{{ 'Cancel' | translate }}\"\n  >\n    <span>{{ 'Cancel' | translate }}</span>\n  </button>\n  <button\n    (click)=\"assignDevices()\"\n    type=\"button\"\n    class=\"btn btn-primary\"\n    [ngClass]=\"{ 'btn-pending': pendingStatus }\"\n    title=\"{{ 'Assign' | translate }}\"\n    [disabled]=\"selected.length === 0\"\n  >\n    <span>{{ 'Assign' | translate }}</span>\n  </button>\n</div>\n"
    })
], AssignChildDevicesComponent);
export { AssignChildDevicesComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzaWduLWNoaWxkLWRldmljZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9zdWItYXNzZXRzLyIsInNvdXJjZXMiOlsiYXNzaWduLWRldmljZXMvYXNzaWduLWNoaWxkLWRldmljZXMuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNyRixPQUFPLEVBQUUsWUFBWSxFQUFFLE9BQU8sRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQzVELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUV6RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQU1oRSxJQUFhLDJCQUEyQixHQUF4QyxNQUFhLDJCQUEyQjtJQVV0QyxZQUNVLEtBQW1CLEVBQ25CLGdCQUFrQyxFQUNsQyxnQkFBa0MsRUFDbEMsb0JBQTBDO1FBSDFDLFVBQUssR0FBTCxLQUFLLENBQWM7UUFDbkIscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBQ2xDLHlCQUFvQixHQUFwQixvQkFBb0IsQ0FBc0I7UUFYMUMsYUFBUSxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFDcEMsWUFBTyxHQUFHLElBQUksWUFBWSxFQUFPLENBQUM7UUFFM0MsYUFBUSxHQUFhLEVBQUUsQ0FBQztRQUV4QixrQkFBYSxHQUFZLEtBQUssQ0FBQztJQU81QixDQUFDO0lBRWdELGNBQWMsQ0FBQyxLQUFvQjtRQUNyRixJQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM1QixJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7U0FDdEI7SUFDSCxDQUFDO0lBRW9ELGVBQWUsQ0FBQyxLQUFvQjtRQUN2RixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFFSyxRQUFROztZQUNaLElBQUksQ0FBQywwQkFBMEIsRUFBRSxDQUFDO1FBQ3BDLENBQUM7S0FBQTtJQUVELDBCQUEwQjtRQUN4QixNQUFNLHVCQUF1QixHQUFHLEVBQUUsS0FBSyxFQUFFLEVBQUUsV0FBVyxFQUFFLElBQUksQ0FBQyxjQUFjLEVBQUUsRUFBRSxDQUFDO1FBQ2hGLElBQUksQ0FBQyxTQUFTLEdBQUcsdUJBQXVCLENBQUM7SUFDM0MsQ0FBQztJQUVLLGFBQWE7O1lBQ2pCLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxDQUFDO1lBRTFCLElBQUk7Z0JBQ0YsTUFBTSxJQUFJLENBQUMsb0JBQW9CLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO2dCQUNsRixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO2dCQUNwQixJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsc0NBQXNDLENBQUMsQ0FBQyxDQUFDO2FBQ3JFO1lBQUMsT0FBTyxLQUFLLEVBQUU7Z0JBQ2QsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLDZDQUE2QyxDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7YUFDbEY7WUFDRCxJQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQztZQUMzQixJQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQztZQUNuQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3ZCLENBQUM7S0FBQTtJQUVELFVBQVUsQ0FBQyxrQkFBNEI7UUFDckMsSUFBSSxDQUFDLFFBQVEsR0FBRyxrQkFBa0IsQ0FBQztJQUNyQyxDQUFDO0NBQ0YsQ0FBQTs7WUEzQ2tCLFlBQVk7WUFDRCxnQkFBZ0I7WUFDaEIsZ0JBQWdCO1lBQ1osb0JBQW9COztBQWIzQztJQUFSLEtBQUssRUFBRTttRUFBd0I7QUFDdkI7SUFBUixLQUFLLEVBQUU7aUVBQThCO0FBQzVCO0lBQVQsTUFBTSxFQUFFOzZEQUFvQztBQUNwQztJQUFSLEtBQUssRUFBRTs0REFBbUM7QUFhUztJQUFuRCxZQUFZLENBQUMsd0JBQXdCLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztpRUFJbEQ7QUFFb0Q7SUFBcEQsWUFBWSxDQUFDLHlCQUF5QixFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7a0VBRW5EO0FBekJVLDJCQUEyQjtJQUp2QyxTQUFTLENBQUM7UUFDVCxRQUFRLEVBQUUsMEJBQTBCO1FBQ3BDLCsyQ0FBb0Q7S0FDckQsQ0FBQztHQUNXLDJCQUEyQixDQXNEdkM7U0F0RFksMkJBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIEhvc3RMaXN0ZW5lciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWxlcnRTZXJ2aWNlLCBnZXR0ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBJbnZlbnRvcnlTZXJ2aWNlIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgU3ViQXNzZXRzU2VydmljZSB9IGZyb20gJy4uL3N1Yi1hc3NldHMuc2VydmljZSc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFzc2lnbkRldmljZXNTZXJ2aWNlIH0gZnJvbSAnLi9hc3NpZ24tZGV2aWNlcy5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWFzc2lnbi1jaGlsZC1kZXZpY2VzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL2Fzc2lnbi1jaGlsZC1kZXZpY2VzLmNvbXBvbmVudC5odG1sJ1xufSlcbmV4cG9ydCBjbGFzcyBBc3NpZ25DaGlsZERldmljZXNDb21wb25lbnQge1xuICBASW5wdXQoKSBjdXJyZW50R3JvdXBJZDogc3RyaW5nO1xuICBASW5wdXQoKSBwYXJlbnREZXZpY2U6IElNYW5hZ2VkT2JqZWN0O1xuICBAT3V0cHV0KCkgb25DYW5jZWwgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcbiAgQElucHV0KCkgcmVmcmVzaCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xuXG4gIHNlbGVjdGVkOiBzdHJpbmdbXSA9IFtdO1xuICBiYXNlUXVlcnk6IGFueTtcbiAgcGVuZGluZ1N0YXR1czogYm9vbGVhbiA9IGZhbHNlO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgYWxlcnQ6IEFsZXJ0U2VydmljZSxcbiAgICBwcml2YXRlIHN1YkFzc2V0c1NlcnZpY2U6IFN1YkFzc2V0c1NlcnZpY2UsXG4gICAgcHJpdmF0ZSBpbnZlbnRvcnlTZXJ2aWNlOiBJbnZlbnRvcnlTZXJ2aWNlLFxuICAgIHByaXZhdGUgYXNzaWduRGV2aWNlc1NlcnZpY2U6IEFzc2lnbkRldmljZXNTZXJ2aWNlXG4gICkge31cblxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXlkb3duLmVudGVyJywgWyckZXZlbnQnXSkgb25FbnRlcktleURvd24oZXZlbnQ6IEtleWJvYXJkRXZlbnQpIHtcbiAgICBpZiAodGhpcy5zZWxlY3RlZC5sZW5ndGggPiAwKSB7XG4gICAgICB0aGlzLmFzc2lnbkRldmljZXMoKTtcbiAgICB9XG4gIH1cblxuICBASG9zdExpc3RlbmVyKCdkb2N1bWVudDprZXlkb3duLmVzY2FwZScsIFsnJGV2ZW50J10pIG9uRXNjYXBlS2V5RG93bihldmVudDogS2V5Ym9hcmRFdmVudCkge1xuICAgIHRoaXMub25DYW5jZWwuZW1pdCgpO1xuICB9XG5cbiAgYXN5bmMgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5zZXROb3RJbmNsdWRlZEluR3JvdXBRdWVyeSgpO1xuICB9XG5cbiAgc2V0Tm90SW5jbHVkZWRJbkdyb3VwUXVlcnkoKSB7XG4gICAgY29uc3Qgbm90SW5jbHVkZWRJbkdyb3VwUXVlcnkgPSB7IF9fbm90OiB7IF9fYnlncm91cGlkOiB0aGlzLmN1cnJlbnRHcm91cElkIH0gfTtcbiAgICB0aGlzLmJhc2VRdWVyeSA9IG5vdEluY2x1ZGVkSW5Hcm91cFF1ZXJ5O1xuICB9XG5cbiAgYXN5bmMgYXNzaWduRGV2aWNlcygpIHtcbiAgICB0aGlzLnBlbmRpbmdTdGF0dXMgPSB0cnVlO1xuXG4gICAgdHJ5IHtcbiAgICAgIGF3YWl0IHRoaXMuYXNzaWduRGV2aWNlc1NlcnZpY2UuYXNzaWduRGV2aWNlcyh0aGlzLmN1cnJlbnRHcm91cElkLCB0aGlzLnNlbGVjdGVkKTtcbiAgICAgIHRoaXMucmVmcmVzaC5lbWl0KCk7XG4gICAgICB0aGlzLmFsZXJ0LnN1Y2Nlc3MoZ2V0dGV4dCgnQ2hpbGQgZGV2aWNlcyBhc3NpZ25lZCB0byB0aGUgZ3JvdXAuJykpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICB0aGlzLmFsZXJ0LmRhbmdlcihnZXR0ZXh0KCdDb3VsZCBub3QgYXNzaWduIGNoaWxkIGRldmljZXMgdG8gdGhlIGdyb3VwJyksIGVycm9yKTtcbiAgICB9XG4gICAgdGhpcy5wZW5kaW5nU3RhdHVzID0gZmFsc2U7XG4gICAgdGhpcy5zZWxlY3RlZCA9IFtdO1xuICAgIHRoaXMub25DYW5jZWwuZW1pdCgpO1xuICB9XG5cbiAgb25TZWxlY3RlZChzZWxlY3RlZERldmljZXNJRHM6IHN0cmluZ1tdKSB7XG4gICAgdGhpcy5zZWxlY3RlZCA9IHNlbGVjdGVkRGV2aWNlc0lEcztcbiAgfVxufVxuIl19