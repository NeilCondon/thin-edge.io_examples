import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { CoreModule, gettext, HOOK_ONCE_ROUTE, ViewContext } from '@c8y/ngx-components';
import { DeviceGridModule } from '@c8y/ngx-components/device-grid';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { AddGroupModule } from './add-group/add-group.module';
import { AssetTypeCellRendererComponent } from './columns/asset-type.cell-renderer.component';
import { DeleteAssetsModalComponent } from './delete-assets-modal/delete-assets-modal.component';
import { GroupInfoComponent } from './group-info.component';
import { GroupsComponent } from './groups.component';
import { SubAssetsGridComponent } from './sub-assets-grid.component';
import { SubAssetsComponent } from './sub-assets.component';
import { SubAssetsService } from './sub-assets.service';
import { UnassignModalComponent } from './unassign-assets-modal/unassign-modal.component';
import { AssignDevicesComponent } from './assign-devices/assign-devices.component';
import { AssignChildDevicesComponent } from './assign-devices/assign-child-devices.component';
import { AssignDevicesService } from './assign-devices/assign-devices.service';
const ɵ0 = [
    {
        context: ViewContext.Group,
        path: 'subassets',
        priority: 1000,
        icon: 'c8y-group-open',
        label: gettext('Subassets'),
        component: SubAssetsComponent
    },
    {
        path: 'group',
        component: GroupsComponent
    }
];
let SubAssetsModule = class SubAssetsModule {
};
SubAssetsModule = tslib_1.__decorate([
    NgModule({
        declarations: [
            SubAssetsComponent,
            SubAssetsGridComponent,
            AssetTypeCellRendererComponent,
            GroupsComponent,
            GroupInfoComponent,
            DeleteAssetsModalComponent,
            UnassignModalComponent,
            AssignDevicesComponent,
            AssignChildDevicesComponent
        ],
        imports: [CoreModule, DeviceGridModule, AddGroupModule, PopoverModule],
        entryComponents: [
            SubAssetsComponent,
            AssetTypeCellRendererComponent,
            GroupsComponent,
            DeleteAssetsModalComponent,
            UnassignModalComponent
        ],
        exports: [],
        providers: [
            {
                provide: HOOK_ONCE_ROUTE,
                useValue: ɵ0,
                multi: true
            },
            SubAssetsService,
            AssignDevicesService
        ]
    })
], SubAssetsModule);
export { SubAssetsModule };
export { ɵ0 };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWFzc2V0cy5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3N1Yi1hc3NldHMvIiwic291cmNlcyI6WyJzdWItYXNzZXRzLm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsVUFBVSxFQUFFLE9BQU8sRUFBRSxlQUFlLEVBQUUsV0FBVyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDeEYsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUNBQWlDLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsTUFBTSw4Q0FBOEMsQ0FBQztBQUM5RixPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUNqRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDckUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sa0RBQWtELENBQUM7QUFDMUYsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMkNBQTJDLENBQUM7QUFDbkYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDOUYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUNBQXlDLENBQUM7V0EwQi9EO0lBQ1I7UUFDRSxPQUFPLEVBQUUsV0FBVyxDQUFDLEtBQUs7UUFDMUIsSUFBSSxFQUFFLFdBQVc7UUFDakIsUUFBUSxFQUFFLElBQUk7UUFDZCxJQUFJLEVBQUUsZ0JBQWdCO1FBQ3RCLEtBQUssRUFBRSxPQUFPLENBQUMsV0FBVyxDQUFDO1FBQzNCLFNBQVMsRUFBRSxrQkFBa0I7S0FDOUI7SUFDRDtRQUNFLElBQUksRUFBRSxPQUFPO1FBQ2IsU0FBUyxFQUFFLGVBQWU7S0FDM0I7Q0FDRjtBQU9QLElBQWEsZUFBZSxHQUE1QixNQUFhLGVBQWU7Q0FBRyxDQUFBO0FBQWxCLGVBQWU7SUE1QzNCLFFBQVEsQ0FBQztRQUNSLFlBQVksRUFBRTtZQUNaLGtCQUFrQjtZQUNsQixzQkFBc0I7WUFDdEIsOEJBQThCO1lBQzlCLGVBQWU7WUFDZixrQkFBa0I7WUFDbEIsMEJBQTBCO1lBQzFCLHNCQUFzQjtZQUN0QixzQkFBc0I7WUFDdEIsMkJBQTJCO1NBQzVCO1FBQ0QsT0FBTyxFQUFFLENBQUMsVUFBVSxFQUFFLGdCQUFnQixFQUFFLGNBQWMsRUFBRSxhQUFhLENBQUM7UUFDdEUsZUFBZSxFQUFFO1lBQ2Ysa0JBQWtCO1lBQ2xCLDhCQUE4QjtZQUM5QixlQUFlO1lBQ2YsMEJBQTBCO1lBQzFCLHNCQUFzQjtTQUN2QjtRQUNELE9BQU8sRUFBRSxFQUFFO1FBQ1gsU0FBUyxFQUFFO1lBQ1Q7Z0JBQ0UsT0FBTyxFQUFFLGVBQWU7Z0JBQ3hCLFFBQVEsSUFhUDtnQkFDRCxLQUFLLEVBQUUsSUFBSTthQUNaO1lBQ0QsZ0JBQWdCO1lBQ2hCLG9CQUFvQjtTQUNyQjtLQUNGLENBQUM7R0FDVyxlQUFlLENBQUc7U0FBbEIsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb3JlTW9kdWxlLCBnZXR0ZXh0LCBIT09LX09OQ0VfUk9VVEUsIFZpZXdDb250ZXh0IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBEZXZpY2VHcmlkTW9kdWxlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtZ3JpZCc7XG5pbXBvcnQgeyBQb3BvdmVyTW9kdWxlIH0gZnJvbSAnbmd4LWJvb3RzdHJhcC9wb3BvdmVyJztcbmltcG9ydCB7IEFkZEdyb3VwTW9kdWxlIH0gZnJvbSAnLi9hZGQtZ3JvdXAvYWRkLWdyb3VwLm1vZHVsZSc7XG5pbXBvcnQgeyBBc3NldFR5cGVDZWxsUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbnMvYXNzZXQtdHlwZS5jZWxsLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBEZWxldGVBc3NldHNNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vZGVsZXRlLWFzc2V0cy1tb2RhbC9kZWxldGUtYXNzZXRzLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBHcm91cEluZm9Db21wb25lbnQgfSBmcm9tICcuL2dyb3VwLWluZm8uY29tcG9uZW50JztcbmltcG9ydCB7IEdyb3Vwc0NvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXBzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBTdWJBc3NldHNHcmlkQ29tcG9uZW50IH0gZnJvbSAnLi9zdWItYXNzZXRzLWdyaWQuY29tcG9uZW50JztcbmltcG9ydCB7IFN1YkFzc2V0c0NvbXBvbmVudCB9IGZyb20gJy4vc3ViLWFzc2V0cy5jb21wb25lbnQnO1xuaW1wb3J0IHsgU3ViQXNzZXRzU2VydmljZSB9IGZyb20gJy4vc3ViLWFzc2V0cy5zZXJ2aWNlJztcbmltcG9ydCB7IFVuYXNzaWduTW9kYWxDb21wb25lbnQgfSBmcm9tICcuL3VuYXNzaWduLWFzc2V0cy1tb2RhbC91bmFzc2lnbi1tb2RhbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgQXNzaWduRGV2aWNlc0NvbXBvbmVudCB9IGZyb20gJy4vYXNzaWduLWRldmljZXMvYXNzaWduLWRldmljZXMuY29tcG9uZW50JztcbmltcG9ydCB7IEFzc2lnbkNoaWxkRGV2aWNlc0NvbXBvbmVudCB9IGZyb20gJy4vYXNzaWduLWRldmljZXMvYXNzaWduLWNoaWxkLWRldmljZXMuY29tcG9uZW50JztcbmltcG9ydCB7IEFzc2lnbkRldmljZXNTZXJ2aWNlIH0gZnJvbSAnLi9hc3NpZ24tZGV2aWNlcy9hc3NpZ24tZGV2aWNlcy5zZXJ2aWNlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbXG4gICAgU3ViQXNzZXRzQ29tcG9uZW50LFxuICAgIFN1YkFzc2V0c0dyaWRDb21wb25lbnQsXG4gICAgQXNzZXRUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3Vwc0NvbXBvbmVudCxcbiAgICBHcm91cEluZm9Db21wb25lbnQsXG4gICAgRGVsZXRlQXNzZXRzTW9kYWxDb21wb25lbnQsXG4gICAgVW5hc3NpZ25Nb2RhbENvbXBvbmVudCxcbiAgICBBc3NpZ25EZXZpY2VzQ29tcG9uZW50LFxuICAgIEFzc2lnbkNoaWxkRGV2aWNlc0NvbXBvbmVudFxuICBdLFxuICBpbXBvcnRzOiBbQ29yZU1vZHVsZSwgRGV2aWNlR3JpZE1vZHVsZSwgQWRkR3JvdXBNb2R1bGUsIFBvcG92ZXJNb2R1bGVdLFxuICBlbnRyeUNvbXBvbmVudHM6IFtcbiAgICBTdWJBc3NldHNDb21wb25lbnQsXG4gICAgQXNzZXRUeXBlQ2VsbFJlbmRlcmVyQ29tcG9uZW50LFxuICAgIEdyb3Vwc0NvbXBvbmVudCxcbiAgICBEZWxldGVBc3NldHNNb2RhbENvbXBvbmVudCxcbiAgICBVbmFzc2lnbk1vZGFsQ29tcG9uZW50XG4gIF0sXG4gIGV4cG9ydHM6IFtdLFxuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX09OQ0VfUk9VVEUsXG4gICAgICB1c2VWYWx1ZTogW1xuICAgICAgICB7XG4gICAgICAgICAgY29udGV4dDogVmlld0NvbnRleHQuR3JvdXAsXG4gICAgICAgICAgcGF0aDogJ3N1YmFzc2V0cycsXG4gICAgICAgICAgcHJpb3JpdHk6IDEwMDAsXG4gICAgICAgICAgaWNvbjogJ2M4eS1ncm91cC1vcGVuJyxcbiAgICAgICAgICBsYWJlbDogZ2V0dGV4dCgnU3ViYXNzZXRzJyksXG4gICAgICAgICAgY29tcG9uZW50OiBTdWJBc3NldHNDb21wb25lbnRcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHBhdGg6ICdncm91cCcsXG4gICAgICAgICAgY29tcG9uZW50OiBHcm91cHNDb21wb25lbnRcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICBTdWJBc3NldHNTZXJ2aWNlLFxuICAgIEFzc2lnbkRldmljZXNTZXJ2aWNlXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgU3ViQXNzZXRzTW9kdWxlIHt9XG4iXX0=