import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { AssetNodeService } from '../asset-node.service';
import { GroupNode } from './group-node';
import { GroupFragment } from '../group-fragment.model';
var GroupNodeService = /** @class */ (function (_super) {
    tslib_1.__extends(GroupNodeService, _super);
    function GroupNodeService() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.PAGE_SIZE = 5;
        return _this;
    }
    GroupNodeService.prototype.createGroupNode = function (config) {
        return new GroupNode(this, config);
    };
    GroupNodeService.prototype.createChildNode = function (managedObject) {
        var config = { mo: managedObject };
        return this.createGroupNode(config);
    };
    GroupNodeService.prototype.subAssetsQueryFilter = function () {
        var rootQueryFilter = this.rootQueryFilter();
        var filter = this.queriesUtil.addOrFilter(rootQueryFilter, {
            type: GroupFragment.subGroupType
        });
        return this.queriesUtil.buildQuery(filter);
    };
    GroupNodeService.prototype.getGroupItems = function (moId) {
        return this.inventory.childAssetsList(moId, {
            query: this.subAssetsQueryFilter(),
            withChildren: false,
            pageSize: this.PAGE_SIZE,
            withTotalPages: true
        });
    };
    GroupNodeService = tslib_1.__decorate([
        Injectable()
    ], GroupNodeService);
    return GroupNodeService;
}(AssetNodeService));
export { GroupNodeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAtbm9kZS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9hc3NldHMtbmF2aWdhdG9yLyIsInNvdXJjZXMiOlsiYXNzZXQtc2VsZWN0b3IvZ3JvdXAtbm9kZS5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3pELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDekMsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBR3hEO0lBQXNDLDRDQUFnQjtJQUR0RDtRQUFBLHFFQTZCQztRQTNCVyxlQUFTLEdBQUcsQ0FBQyxDQUFDOztJQTJCMUIsQ0FBQztJQXpCQywwQ0FBZSxHQUFmLFVBQWdCLE1BQU07UUFDcEIsT0FBTyxJQUFJLFNBQVMsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDckMsQ0FBQztJQUVELDBDQUFlLEdBQWYsVUFBZ0IsYUFBYTtRQUMzQixJQUFNLE1BQU0sR0FBdUIsRUFBRSxFQUFFLEVBQUUsYUFBYSxFQUFFLENBQUM7UUFDekQsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCwrQ0FBb0IsR0FBcEI7UUFDRSxJQUFNLGVBQWUsR0FBRyxJQUFJLENBQUMsZUFBZSxFQUFFLENBQUM7UUFDL0MsSUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLENBQUMsZUFBZSxFQUFFO1lBQzNELElBQUksRUFBRSxhQUFhLENBQUMsWUFBWTtTQUNqQyxDQUFDLENBQUM7UUFDSCxPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCx3Q0FBYSxHQUFiLFVBQWMsSUFBWTtRQUN4QixPQUFPLElBQUksQ0FBQyxTQUFTLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRTtZQUMxQyxLQUFLLEVBQUUsSUFBSSxDQUFDLG9CQUFvQixFQUFFO1lBQ2xDLFlBQVksRUFBRSxLQUFLO1lBQ25CLFFBQVEsRUFBRSxJQUFJLENBQUMsU0FBUztZQUN4QixjQUFjLEVBQUUsSUFBSTtTQUNyQixDQUFDLENBQUM7SUFDTCxDQUFDO0lBM0JVLGdCQUFnQjtRQUQ1QixVQUFVLEVBQUU7T0FDQSxnQkFBZ0IsQ0E0QjVCO0lBQUQsdUJBQUM7Q0FBQSxBQTVCRCxDQUFzQyxnQkFBZ0IsR0E0QnJEO1NBNUJZLGdCQUFnQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFzc2V0Tm9kZVNlcnZpY2UgfSBmcm9tICcuLi9hc3NldC1ub2RlLnNlcnZpY2UnO1xuaW1wb3J0IHsgR3JvdXBOb2RlIH0gZnJvbSAnLi9ncm91cC1ub2RlJztcbmltcG9ydCB7IEdyb3VwRnJhZ21lbnQgfSBmcm9tICcuLi9ncm91cC1mcmFnbWVudC5tb2RlbCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBHcm91cE5vZGVTZXJ2aWNlIGV4dGVuZHMgQXNzZXROb2RlU2VydmljZSB7XG4gIHByb3RlY3RlZCBQQUdFX1NJWkUgPSA1O1xuXG4gIGNyZWF0ZUdyb3VwTm9kZShjb25maWcpIHtcbiAgICByZXR1cm4gbmV3IEdyb3VwTm9kZSh0aGlzLCBjb25maWcpO1xuICB9XG5cbiAgY3JlYXRlQ2hpbGROb2RlKG1hbmFnZWRPYmplY3QpOiBHcm91cE5vZGUge1xuICAgIGNvbnN0IGNvbmZpZzogUGFydGlhbDxHcm91cE5vZGU+ID0geyBtbzogbWFuYWdlZE9iamVjdCB9O1xuICAgIHJldHVybiB0aGlzLmNyZWF0ZUdyb3VwTm9kZShjb25maWcpO1xuICB9XG5cbiAgc3ViQXNzZXRzUXVlcnlGaWx0ZXIoKSB7XG4gICAgY29uc3Qgcm9vdFF1ZXJ5RmlsdGVyID0gdGhpcy5yb290UXVlcnlGaWx0ZXIoKTtcbiAgICBjb25zdCBmaWx0ZXIgPSB0aGlzLnF1ZXJpZXNVdGlsLmFkZE9yRmlsdGVyKHJvb3RRdWVyeUZpbHRlciwge1xuICAgICAgdHlwZTogR3JvdXBGcmFnbWVudC5zdWJHcm91cFR5cGVcbiAgICB9KTtcbiAgICByZXR1cm4gdGhpcy5xdWVyaWVzVXRpbC5idWlsZFF1ZXJ5KGZpbHRlcik7XG4gIH1cblxuICBnZXRHcm91cEl0ZW1zKG1vSWQ6IHN0cmluZyk6IFByb21pc2U8YW55PiB7XG4gICAgcmV0dXJuIHRoaXMuaW52ZW50b3J5LmNoaWxkQXNzZXRzTGlzdChtb0lkLCB7XG4gICAgICBxdWVyeTogdGhpcy5zdWJBc3NldHNRdWVyeUZpbHRlcigpLFxuICAgICAgd2l0aENoaWxkcmVuOiBmYWxzZSxcbiAgICAgIHBhZ2VTaXplOiB0aGlzLlBBR0VfU0laRSxcbiAgICAgIHdpdGhUb3RhbFBhZ2VzOiB0cnVlXG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==