import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { CommonModule, CoreModule, FormsModule, HOOK_NAVIGATOR_NODES, HOOK_TABS } from '@c8y/ngx-components';
import { PopoverModule } from 'ngx-bootstrap/popover';
import { ImpactConnectivityService } from './impact-connectivity.service';
import { ImpactNodeFactory } from './impact-node.factory';
import { ImpactProviderSettingsComponent } from './impact-provider-settings.component';
import { ImpactTabFactory } from './impact-tab.factory';
import { ImpactGuard } from './impact.guard';
import { StatusDisplayComponent } from './status-display.component';
var impactRoutes = [
    {
        path: 'connectivitySettings/impact_provider_settings',
        component: ImpactProviderSettingsComponent,
        canActivate: [ImpactGuard]
    }
];
var ImpactModule = /** @class */ (function () {
    function ImpactModule() {
    }
    ImpactModule = tslib_1.__decorate([
        NgModule({
            declarations: [ImpactProviderSettingsComponent, StatusDisplayComponent],
            exports: [ImpactProviderSettingsComponent],
            imports: [
                CoreModule,
                CommonModule,
                FormsModule,
                RouterModule.forChild(impactRoutes),
                PopoverModule,
                ReactiveFormsModule
            ],
            entryComponents: [ImpactProviderSettingsComponent],
            providers: [
                ImpactConnectivityService,
                ImpactGuard,
                ImpactTabFactory,
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useClass: ImpactNodeFactory,
                    multi: true
                },
                {
                    provide: HOOK_TABS,
                    useClass: ImpactTabFactory,
                    multi: true
                }
            ]
        })
    ], ImpactModule);
    return ImpactModule;
}());
export { ImpactModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wYWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvY29ubmVjdGl2aXR5LyIsInNvdXJjZXMiOlsiaW1wYWN0L2ltcGFjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDckQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFDTCxZQUFZLEVBQ1osVUFBVSxFQUNWLFdBQVcsRUFDWCxvQkFBb0IsRUFDcEIsU0FBUyxFQUVWLE1BQU0scUJBQXFCLENBQUM7QUFDN0IsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQzFFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSwrQkFBK0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUVwRSxJQUFNLFlBQVksR0FBWTtJQUM1QjtRQUNFLElBQUksRUFBRSwrQ0FBK0M7UUFDckQsU0FBUyxFQUFFLCtCQUErQjtRQUMxQyxXQUFXLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDM0I7Q0FDRixDQUFDO0FBOEJGO0lBQUE7SUFBMkIsQ0FBQztJQUFmLFlBQVk7UUE1QnhCLFFBQVEsQ0FBQztZQUNSLFlBQVksRUFBRSxDQUFDLCtCQUErQixFQUFFLHNCQUFzQixDQUFDO1lBQ3ZFLE9BQU8sRUFBRSxDQUFDLCtCQUErQixDQUFDO1lBQzFDLE9BQU8sRUFBRTtnQkFDUCxVQUFVO2dCQUNWLFlBQVk7Z0JBQ1osV0FBVztnQkFDWCxZQUFZLENBQUMsUUFBUSxDQUFDLFlBQVksQ0FBQztnQkFDbkMsYUFBYTtnQkFDYixtQkFBbUI7YUFDcEI7WUFDRCxlQUFlLEVBQUUsQ0FBQywrQkFBK0IsQ0FBQztZQUNsRCxTQUFTLEVBQUU7Z0JBQ1QseUJBQXlCO2dCQUN6QixXQUFXO2dCQUNYLGdCQUFnQjtnQkFDaEI7b0JBQ0UsT0FBTyxFQUFFLG9CQUFvQjtvQkFDN0IsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsS0FBSyxFQUFFLElBQUk7aUJBQ1o7Z0JBQ0Q7b0JBQ0UsT0FBTyxFQUFFLFNBQVM7b0JBQ2xCLFFBQVEsRUFBRSxnQkFBZ0I7b0JBQzFCLEtBQUssRUFBRSxJQUFJO2lCQUNaO2FBQ0Y7U0FDRixDQUFDO09BQ1csWUFBWSxDQUFHO0lBQUQsbUJBQUM7Q0FBQSxBQUE1QixJQUE0QjtTQUFmLFlBQVkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUmVhY3RpdmVGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcbmltcG9ydCB7IFJvdXRlck1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQge1xuICBDb21tb25Nb2R1bGUsXG4gIENvcmVNb2R1bGUsXG4gIEZvcm1zTW9kdWxlLFxuICBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgSE9PS19UQUJTLFxuICBSb3V0ZVxufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IFBvcG92ZXJNb2R1bGUgfSBmcm9tICduZ3gtYm9vdHN0cmFwL3BvcG92ZXInO1xuaW1wb3J0IHsgSW1wYWN0Q29ubmVjdGl2aXR5U2VydmljZSB9IGZyb20gJy4vaW1wYWN0LWNvbm5lY3Rpdml0eS5zZXJ2aWNlJztcbmltcG9ydCB7IEltcGFjdE5vZGVGYWN0b3J5IH0gZnJvbSAnLi9pbXBhY3Qtbm9kZS5mYWN0b3J5JztcbmltcG9ydCB7IEltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnQgfSBmcm9tICcuL2ltcGFjdC1wcm92aWRlci1zZXR0aW5ncy5jb21wb25lbnQnO1xuaW1wb3J0IHsgSW1wYWN0VGFiRmFjdG9yeSB9IGZyb20gJy4vaW1wYWN0LXRhYi5mYWN0b3J5JztcbmltcG9ydCB7IEltcGFjdEd1YXJkIH0gZnJvbSAnLi9pbXBhY3QuZ3VhcmQnO1xuaW1wb3J0IHsgU3RhdHVzRGlzcGxheUNvbXBvbmVudCB9IGZyb20gJy4vc3RhdHVzLWRpc3BsYXkuY29tcG9uZW50JztcblxuY29uc3QgaW1wYWN0Um91dGVzOiBSb3V0ZVtdID0gW1xuICB7XG4gICAgcGF0aDogJ2Nvbm5lY3Rpdml0eVNldHRpbmdzL2ltcGFjdF9wcm92aWRlcl9zZXR0aW5ncycsXG4gICAgY29tcG9uZW50OiBJbXBhY3RQcm92aWRlclNldHRpbmdzQ29tcG9uZW50LFxuICAgIGNhbkFjdGl2YXRlOiBbSW1wYWN0R3VhcmRdXG4gIH1cbl07XG5cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW0ltcGFjdFByb3ZpZGVyU2V0dGluZ3NDb21wb25lbnQsIFN0YXR1c0Rpc3BsYXlDb21wb25lbnRdLFxuICBleHBvcnRzOiBbSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudF0sXG4gIGltcG9ydHM6IFtcbiAgICBDb3JlTW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgICBGb3Jtc01vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoaW1wYWN0Um91dGVzKSxcbiAgICBQb3BvdmVyTW9kdWxlLFxuICAgIFJlYWN0aXZlRm9ybXNNb2R1bGVcbiAgXSxcbiAgZW50cnlDb21wb25lbnRzOiBbSW1wYWN0UHJvdmlkZXJTZXR0aW5nc0NvbXBvbmVudF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEltcGFjdENvbm5lY3Rpdml0eVNlcnZpY2UsXG4gICAgSW1wYWN0R3VhcmQsXG4gICAgSW1wYWN0VGFiRmFjdG9yeSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX05BVklHQVRPUl9OT0RFUyxcbiAgICAgIHVzZUNsYXNzOiBJbXBhY3ROb2RlRmFjdG9yeSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBIT09LX1RBQlMsXG4gICAgICB1c2VDbGFzczogSW1wYWN0VGFiRmFjdG9yeSxcbiAgICAgIG11bHRpOiB0cnVlXG4gICAgfVxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEltcGFjdE1vZHVsZSB7fVxuIl19