import * as tslib_1 from "tslib";
import { NgModule } from '@angular/core';
import { ContextDashboardModule } from '../context-dashboard.module';
import { ContextDashboardComponent } from '../context-dashboard.component';
import { DeviceDashboardGuard } from '../device-dashboard.guard';
import { GroupDashboardGuard } from '../group-dashboard.guard';
import { ViewContext, HOOK_NAVIGATOR_NODES, gettext, CoreModule, HOOK_COMPONENTS, QuickLinkModule, DocsModule } from '@c8y/ngx-components';
import { CockpitDashboardComponent } from './cockpit-dashboard.component';
import { WelcomeToCockpit } from './welcome/welcome.component';
import { LegacyWelcomeComponent } from './legacy-welcome/legacy-welcome.component';
// import for the preview img to get into the build.
var previewImage = '';
try {
    // tslint:disable-next-line: no-var-requires
    previewImage = require('@c8y/style/img/welcome-widget-pr.png');
}
catch (ex) {
    // intended empty
}
var ɵ0 = [{ label: gettext('Home'), icon: 'home', priority: 10000, path: '/' }], ɵ1 = [
    {
        id: 'cockpit.welcome.widget',
        label: gettext('Welcome to Cockpit'),
        description: gettext('Displays a welcome message for Cockpit'),
        component: WelcomeToCockpit,
        previewImage: previewImage,
        data: {
            settings: {
                noNewWidgets: false,
                widgetDefaults: {
                    _width: 12,
                    _height: 6
                },
                ng1: {
                    options: {
                        noDeviceTarget: true,
                        groupsSelectable: false
                    }
                }
            }
        }
    }
], ɵ2 = [
    {
        id: 'Cockpit Welcome',
        label: gettext('Welcome to Cockpit'),
        description: gettext('Displays a welcome message for Cockpit'),
        component: LegacyWelcomeComponent,
        data: {
            settings: {
                noNewWidgets: true,
                ng1: {
                    options: {
                        noDeviceTarget: true,
                        groupsSelectable: false
                    }
                }
            }
        }
    }
];
var CockpitDashboardModule = /** @class */ (function () {
    function CockpitDashboardModule() {
    }
    CockpitDashboardModule = tslib_1.__decorate([
        NgModule({
            entryComponents: [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent],
            imports: [
                DocsModule,
                CoreModule,
                ContextDashboardModule.config({
                    routes: [
                        {
                            path: 'dashboard/:dashboardId',
                            component: ContextDashboardComponent,
                            canActivate: [DeviceDashboardGuard],
                            context: ViewContext.Device
                        },
                        {
                            path: 'dashboard/:dashboardId',
                            component: ContextDashboardComponent,
                            canActivate: [GroupDashboardGuard],
                            context: ViewContext.Group
                        },
                        {
                            path: '',
                            component: CockpitDashboardComponent
                        }
                    ]
                }),
                QuickLinkModule
            ],
            declarations: [CockpitDashboardComponent, WelcomeToCockpit, LegacyWelcomeComponent],
            providers: [
                {
                    provide: HOOK_NAVIGATOR_NODES,
                    useValue: ɵ0,
                    multi: true
                },
                {
                    provide: HOOK_COMPONENTS,
                    multi: true,
                    useValue: ɵ1
                },
                {
                    provide: HOOK_COMPONENTS,
                    multi: true,
                    useValue: ɵ2
                }
            ]
        })
    ], CockpitDashboardModule);
    return CockpitDashboardModule;
}());
export { CockpitDashboardModule };
export { ɵ0, ɵ1, ɵ2 };
//# sourceMappingURL=data:application/json;base64,