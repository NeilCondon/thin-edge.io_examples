import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { BsModalService } from 'ngx-bootstrap/modal';
import { CookieBannerPreferencesModalComponent } from './cookie-banner-preferences-modal/cookie-banner-preferences-modal.component';
import { CookieBannerService } from './cookie-banner.service';
var CookieBannerComponent = /** @class */ (function () {
    function CookieBannerComponent(bsModalService, cookieBannerService) {
        this.bsModalService = bsModalService;
        this.cookieBannerService = cookieBannerService;
        this.shouldDisable = false;
    }
    CookieBannerComponent.prototype.ngOnInit = function () {
        this.settings = this.cookieBannerService.getCookieBannerSettings();
        this.cookiePreferences = this.cookieBannerService.getCookiePreferencesConfig();
        this.shouldShowCookieBanner();
    };
    CookieBannerComponent.prototype.onConfigurePreferences = function () {
        var _this = this;
        this.disableButtons(true);
        var initialState = {
            configCookiePreferences: this.cookiePreferences
        };
        var modalRef = this.bsModalService.show(CookieBannerPreferencesModalComponent, {
            initialState: initialState
        });
        modalRef.content.closeSubject.subscribe(function (userCookiePreferences) {
            _this.disableButtons(false);
            if (userCookiePreferences) {
                _this.cookieBannerService.setCookies(userCookiePreferences);
                _this.setCookieBannerVisibility(false);
            }
        });
    };
    CookieBannerComponent.prototype.acceptCookies = function () {
        this.cookieBannerService.setCookies(this.cookiePreferences || { required: true });
        this.setCookieBannerVisibility(false);
    };
    CookieBannerComponent.prototype.shouldShowCookieBanner = function () {
        this.setCookieBannerVisibility(this.cookieBannerService.shouldShowCookieBanner());
    };
    CookieBannerComponent.prototype.disableButtons = function (shouldDisable) {
        this.shouldDisable = shouldDisable;
    };
    CookieBannerComponent.prototype.setCookieBannerVisibility = function (shouldShow) {
        this.showBanner = shouldShow;
        this.cookieBannerService.isCookieBannerShowed$.next(shouldShow);
    };
    CookieBannerComponent.ctorParameters = function () { return [
        { type: BsModalService },
        { type: CookieBannerService }
    ]; };
    CookieBannerComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-cookie-banner',
            template: "<div class=\"c8y-cookie-banner\">\n  <div class=\"container\">\n    <div class=\"row p-t-16 p-b-16\" *ngIf=\"showBanner\">\n      <div class=\"col-md-2\" *ngIf=\"settings.cookieBannerTitle\">\n        <h3>{{ settings.cookieBannerTitle | translate }}</h3>\n        <div class=\"p-b-16 visible-sm visible-xs\"></div>\n      </div>\n      <div class=\"col-md-7\">\n        <div class=\"cookie-banner-content text-pre-line\">\n          {{ settings.cookieBannerText | translate }}\n        </div>\n      </div>\n      <div class=\"col-md-3\">\n        <div class=\"row\">\n          <div class=\"col-sm-6 col-md-12\">\n            <div class=\"p-b-16 visible-sm visible-xs\"></div>\n            <button\n              class=\"btn btn-primary btn-block\"\n              (click)=\"acceptCookies()\"\n              [disabled]=\"shouldDisable\"\n            >\n              {{ 'Agree and proceed' | translate }}\n            </button>\n          </div>\n          <div class=\"col-sm-6 col-md-12\" *ngIf=\"!!cookiePreferences\">\n            <div class=\"p-b-16\"></div>\n            <button\n              class=\"btn btn-default btn-block\"\n              (click)=\"onConfigurePreferences()\"\n              [disabled]=\"shouldDisable\"\n            >\n              {{ 'Configure preferences' | translate }}\n            </button>\n          </div>\n          <div class=\"col-sm-6 col-md-12\">\n            <div class=\"p-b-16\"></div>\n            <a\n              class=\"btn btn-default btn-block\"\n              href=\"{{ settings.policyUrl }}\"\n              target=\"_blank\"\n              *ngIf=\"settings.policyUrl\"\n            >\n              {{ 'Privacy policy' | translate }}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n"
        })
    ], CookieBannerComponent);
    return CookieBannerComponent;
}());
export { CookieBannerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29va2llLWJhbm5lci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzLyIsInNvdXJjZXMiOlsiY29yZS9ib290c3RyYXAvY29va2llLWJhbm5lci9jb29raWUtYmFubmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDckQsT0FBTyxFQUFFLHFDQUFxQyxFQUFFLE1BQU0sNkVBQTZFLENBQUM7QUFFcEksT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFNOUQ7SUFLRSwrQkFDVSxjQUE4QixFQUM5QixtQkFBd0M7UUFEeEMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFKbEQsa0JBQWEsR0FBWSxLQUFLLENBQUM7SUFLNUIsQ0FBQztJQUVKLHdDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyx1QkFBdUIsRUFBRSxDQUFDO1FBQ25FLElBQUksQ0FBQyxpQkFBaUIsR0FBRyxJQUFJLENBQUMsbUJBQW1CLENBQUMsMEJBQTBCLEVBQUUsQ0FBQztRQUMvRSxJQUFJLENBQUMsc0JBQXNCLEVBQUUsQ0FBQztJQUNoQyxDQUFDO0lBRUQsc0RBQXNCLEdBQXRCO1FBQUEsaUJBa0JDO1FBakJDLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLENBQUM7UUFFMUIsSUFBTSxZQUFZLEdBQUc7WUFDbkIsdUJBQXVCLEVBQUUsSUFBSSxDQUFDLGlCQUFpQjtTQUNoRCxDQUFDO1FBRUYsSUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMscUNBQXFDLEVBQUU7WUFDL0UsWUFBWSxjQUFBO1NBQ2IsQ0FBQyxDQUFDO1FBRUgsUUFBUSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxDQUFDLFVBQUMscUJBQXdDO1lBQy9FLEtBQUksQ0FBQyxjQUFjLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDM0IsSUFBSSxxQkFBcUIsRUFBRTtnQkFDekIsS0FBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO2dCQUMzRCxLQUFJLENBQUMseUJBQXlCLENBQUMsS0FBSyxDQUFDLENBQUM7YUFDdkM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCw2Q0FBYSxHQUFiO1FBQ0UsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsQ0FDakMsSUFBSSxDQUFDLGlCQUFpQixJQUFJLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxDQUM3QyxDQUFDO1FBQ0YsSUFBSSxDQUFDLHlCQUF5QixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ3hDLENBQUM7SUFFTyxzREFBc0IsR0FBOUI7UUFDRSxJQUFJLENBQUMseUJBQXlCLENBQUMsSUFBSSxDQUFDLG1CQUFtQixDQUFDLHNCQUFzQixFQUFFLENBQUMsQ0FBQztJQUNwRixDQUFDO0lBRU8sOENBQWMsR0FBdEIsVUFBdUIsYUFBc0I7UUFDM0MsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7SUFDckMsQ0FBQztJQUVPLHlEQUF5QixHQUFqQyxVQUFrQyxVQUFtQjtRQUNuRCxJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztRQUM3QixJQUFJLENBQUMsbUJBQW1CLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7O2dCQWhEeUIsY0FBYztnQkFDVCxtQkFBbUI7O0lBUHZDLHFCQUFxQjtRQUpqQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsbUJBQW1CO1lBQzdCLHd3REFBNkM7U0FDOUMsQ0FBQztPQUNXLHFCQUFxQixDQXVEakM7SUFBRCw0QkFBQztDQUFBLEFBdkRELElBdURDO1NBdkRZLHFCQUFxQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBCc01vZGFsU2VydmljZSB9IGZyb20gJ25neC1ib290c3RyYXAvbW9kYWwnO1xuaW1wb3J0IHsgQ29va2llQmFubmVyUHJlZmVyZW5jZXNNb2RhbENvbXBvbmVudCB9IGZyb20gJy4vY29va2llLWJhbm5lci1wcmVmZXJlbmNlcy1tb2RhbC9jb29raWUtYmFubmVyLXByZWZlcmVuY2VzLW1vZGFsLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDb29raWVCYW5uZXJTZXR0aW5ncywgQ29va2llUHJlZmVyZW5jZXMgfSBmcm9tICcuL2Nvb2tpZS1iYW5uZXIubW9kZWwnO1xuaW1wb3J0IHsgQ29va2llQmFubmVyU2VydmljZSB9IGZyb20gJy4vY29va2llLWJhbm5lci5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWNvb2tpZS1iYW5uZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vY29va2llLWJhbm5lci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQ29va2llQmFubmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgc2V0dGluZ3M6IENvb2tpZUJhbm5lclNldHRpbmdzO1xuICBzaG93QmFubmVyOiBib29sZWFuO1xuICBzaG91bGREaXNhYmxlOiBib29sZWFuID0gZmFsc2U7XG4gIGNvb2tpZVByZWZlcmVuY2VzOiBDb29raWVQcmVmZXJlbmNlcztcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSBic01vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXG4gICAgcHJpdmF0ZSBjb29raWVCYW5uZXJTZXJ2aWNlOiBDb29raWVCYW5uZXJTZXJ2aWNlXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLnNldHRpbmdzID0gdGhpcy5jb29raWVCYW5uZXJTZXJ2aWNlLmdldENvb2tpZUJhbm5lclNldHRpbmdzKCk7XG4gICAgdGhpcy5jb29raWVQcmVmZXJlbmNlcyA9IHRoaXMuY29va2llQmFubmVyU2VydmljZS5nZXRDb29raWVQcmVmZXJlbmNlc0NvbmZpZygpO1xuICAgIHRoaXMuc2hvdWxkU2hvd0Nvb2tpZUJhbm5lcigpO1xuICB9XG5cbiAgb25Db25maWd1cmVQcmVmZXJlbmNlcygpIHtcbiAgICB0aGlzLmRpc2FibGVCdXR0b25zKHRydWUpO1xuXG4gICAgY29uc3QgaW5pdGlhbFN0YXRlID0ge1xuICAgICAgY29uZmlnQ29va2llUHJlZmVyZW5jZXM6IHRoaXMuY29va2llUHJlZmVyZW5jZXNcbiAgICB9O1xuXG4gICAgY29uc3QgbW9kYWxSZWYgPSB0aGlzLmJzTW9kYWxTZXJ2aWNlLnNob3coQ29va2llQmFubmVyUHJlZmVyZW5jZXNNb2RhbENvbXBvbmVudCwge1xuICAgICAgaW5pdGlhbFN0YXRlXG4gICAgfSk7XG5cbiAgICBtb2RhbFJlZi5jb250ZW50LmNsb3NlU3ViamVjdC5zdWJzY3JpYmUoKHVzZXJDb29raWVQcmVmZXJlbmNlczogQ29va2llUHJlZmVyZW5jZXMpID0+IHtcbiAgICAgIHRoaXMuZGlzYWJsZUJ1dHRvbnMoZmFsc2UpO1xuICAgICAgaWYgKHVzZXJDb29raWVQcmVmZXJlbmNlcykge1xuICAgICAgICB0aGlzLmNvb2tpZUJhbm5lclNlcnZpY2Uuc2V0Q29va2llcyh1c2VyQ29va2llUHJlZmVyZW5jZXMpO1xuICAgICAgICB0aGlzLnNldENvb2tpZUJhbm5lclZpc2liaWxpdHkoZmFsc2UpO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG5cbiAgYWNjZXB0Q29va2llcygpIHtcbiAgICB0aGlzLmNvb2tpZUJhbm5lclNlcnZpY2Uuc2V0Q29va2llcyhcbiAgICAgIHRoaXMuY29va2llUHJlZmVyZW5jZXMgfHwgeyByZXF1aXJlZDogdHJ1ZSB9XG4gICAgKTtcbiAgICB0aGlzLnNldENvb2tpZUJhbm5lclZpc2liaWxpdHkoZmFsc2UpO1xuICB9XG5cbiAgcHJpdmF0ZSBzaG91bGRTaG93Q29va2llQmFubmVyKCkge1xuICAgIHRoaXMuc2V0Q29va2llQmFubmVyVmlzaWJpbGl0eSh0aGlzLmNvb2tpZUJhbm5lclNlcnZpY2Uuc2hvdWxkU2hvd0Nvb2tpZUJhbm5lcigpKTtcbiAgfVxuXG4gIHByaXZhdGUgZGlzYWJsZUJ1dHRvbnMoc2hvdWxkRGlzYWJsZTogYm9vbGVhbikge1xuICAgIHRoaXMuc2hvdWxkRGlzYWJsZSA9IHNob3VsZERpc2FibGU7XG4gIH1cblxuICBwcml2YXRlIHNldENvb2tpZUJhbm5lclZpc2liaWxpdHkoc2hvdWxkU2hvdzogYm9vbGVhbikge1xuICAgIHRoaXMuc2hvd0Jhbm5lciA9IHNob3VsZFNob3c7XG4gICAgdGhpcy5jb29raWVCYW5uZXJTZXJ2aWNlLmlzQ29va2llQmFubmVyU2hvd2VkJC5uZXh0KHNob3VsZFNob3cpO1xuICB9XG59XG4iXX0=