import * as tslib_1 from "tslib";
import { Directive, Renderer2, Input, ElementRef } from '@angular/core';
/**
 * Allows to set a icon. Switches between c8y default icons
 * and font awesome icons
 * @example <i [c8yIcon]="'clock'">
 */
var IconDirective = /** @class */ (function () {
    function IconDirective(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this.c8yMatch = /^c8y-/;
        this.klasses = [];
        this.currentClasses = '';
    }
    Object.defineProperty(IconDirective.prototype, "c8yIcon", {
        set: function (icon) {
            this.updateIcon(icon);
        },
        enumerable: true,
        configurable: true
    });
    IconDirective.prototype.isC8y = function (icon) {
        return this.c8yMatch.test(icon);
    };
    IconDirective.prototype.getClasses = function (icon) {
        if (icon === void 0) { icon = ''; }
        var classes = '';
        if (icon) {
            var _icon = icon.trim();
            var isC8y = this.isC8y(_icon);
            var iconClass = isC8y ? _icon.replace(this.c8yMatch, 'c8y-icon-') : "dlt-c8y-icon-" + _icon;
            classes = (isC8y ? 'c8y-icon' : '') + " " + iconClass;
        }
        return classes;
    };
    IconDirective.prototype.updateIcon = function (icon) {
        var _this = this;
        var newClasses = this.getClasses(icon);
        if (newClasses !== this.currentClasses) {
            this.currentClasses.split(/\s/).filter(function (c) { return c; }).forEach(function (klass) {
                _this.renderer.removeClass(_this.el.nativeElement, klass);
            });
            newClasses.split(/\s/).filter(function (c) { return c; }).forEach(function (klass) {
                _this.renderer.addClass(_this.el.nativeElement, klass);
            });
            this.currentClasses = newClasses;
        }
    };
    IconDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 }
    ]; };
    tslib_1.__decorate([
        Input()
    ], IconDirective.prototype, "c8yIcon", null);
    IconDirective = tslib_1.__decorate([
        Directive({
            selector: '[c8yIcon]',
        })
    ], IconDirective);
    return IconDirective;
}());
export { IconDirective };
export var ICONS = [
    'home',
    'th',
    'bar-chart-o',
    'tasks',
    'tachometer',
    'bell',
    'puzzle-piece',
    'map-marker',
    'location-arrow',
    'globe',
    'power-off',
    'desktop',
    'laptop',
    'mobile',
    'signal',
    'qrcode',
    'file',
    'file-text',
    'folder',
    'folder-open',
    'archive',
    'ssd',
    'book',
    'bookmark',
    'tag',
    'flag',
    'search',
    'heart',
    'star',
    'bolt',
    'cog',
    'cogs',
    'wrench',
    'ban',
    'user',
    'users',
    'sign-in',
    'sign-out',
    'upload',
    'download',
    'cloud-upload',
    'cloud-download',
    'cloud',
    'hourglass',
    'refresh',
    'repeat',
    'undo',
    'lock',
    'unlock',
    'info',
    'question-circle',
    'exclamation-circle',
    'bug',
    'calendar',
    'random',
    'asterisk',
    'key',
    'link',
    'chain-broken',
    'external-link',
    'picture-o',
    'comment',
    'bullhorn',
    'phone',
    'lightbulb-o',
    'flask',
    'cloud-network',
    'exchange',
    'code-fork',
    'keyboard-o',
    'terminal',
    'code',
    'clipboard',
    'pencil',
    'envelope',
    'inbox',
    'reply',
    'share',
    'thumbs-up',
    'thumbs-down',
    'check',
    'plus',
    'expand',
    'compress',
    'arrows',
    'arrow-up',
    'arrow-down',
    'arrow-left',
    'arrow-right',
    'th-list',
    'bars',
    'table',
    'columns',
    'filter',
    'sort',
    'sort-up',
    'sort-down',
    'ellipsis-h',
    'ellipsis-v',
    'rss'
];
//# sourceMappingURL=data:application/json;base64,