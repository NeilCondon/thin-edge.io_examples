export var minColumnGridTrackSize = 80;
export var ratiosByColumnTypes = {
    icon: 1,
    numeric: 1,
    'text-short': 1.67,
    'text-long': 3.33
};
export var FilteringActionType;
(function (FilteringActionType) {
    FilteringActionType["ApplyFilter"] = "APPLY_FILTER";
    FilteringActionType["ResetFilter"] = "RESET_FILTER";
})(FilteringActionType || (FilteringActionType = {}));
//# sourceMappingURL=data:application/json;base64,