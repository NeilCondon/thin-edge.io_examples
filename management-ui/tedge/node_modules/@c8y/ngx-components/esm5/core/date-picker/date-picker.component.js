import * as tslib_1 from "tslib";
import { Component, EventEmitter, Output } from '@angular/core';
import { FormControl, FormGroup } from '@angular/forms';
var DatePickerComponent = /** @class */ (function () {
    function DatePickerComponent() {
        this.onDateSelected = new EventEmitter();
    }
    DatePickerComponent.prototype.ngOnInit = function () {
        this.fgDatePicker = new FormGroup({
            dateFrom: new FormControl(),
            dateTo: new FormControl()
        });
    };
    DatePickerComponent.prototype.filter = function () {
        this.onDateSelected.emit(this.fgDatePicker.value);
        this.dateFrom = this.fgDatePicker.get('dateFrom').value;
        this.dateTo = this.fgDatePicker.get('dateTo').value;
    };
    DatePickerComponent.prototype.clearFilter = function () {
        this.fgDatePicker.setValue({
            dateFrom: null,
            dateTo: null
        });
        this.onDateSelected.emit(null);
        this.dateFrom = null;
        this.dateTo = null;
    };
    tslib_1.__decorate([
        Output()
    ], DatePickerComponent.prototype, "onDateSelected", void 0);
    DatePickerComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-date-picker',
            template: "<div\n  dropdown\n  class=\"c8y-child-assets-selector\"\n  #datefilter=\"bs-dropdown\"\n  placement=\"bottom left\"\n  [autoClose]=\"false\"\n>\n  <button\n    id=\"date-range\"\n    dropdownToggle\n    title=\"{{ 'Date filter' | translate }}\"\n    type=\"button\"\n    class=\"btn dropdown-toggle d-flex a-i-center c8y-dropdown\"\n    aria-controls=\"dropdown-date-range\"\n  >\n    <i c8yIcon=\"calendar-o\" class=\"m-r-4 text-primary\"></i>\n    <span class=\"text-truncate\">\n      <span *ngIf=\"dateFrom\">\n        <span class=\"text-label-small\">{{ 'From`date`' | translate }}</span>\n        {{ dateFrom | date }}\n      </span>\n      <span *ngIf=\"dateTo\">\n        <span class=\"text-label-small\">{{ 'To`date`' | translate }}</span>\n        {{ dateTo | date }}\n      </span>\n      <span *ngIf=\"!dateFrom && !dateTo\">\n        {{ 'Filter by date' | translate }}\n      </span>\n    </span>\n  </button>\n  <div\n    id=\"dropdown-date-range\"\n    *dropdownMenu\n    class=\"dropdown-menu\"\n    role=\"menu\"\n    aria-labelledby=\"date-range\"\n  >\n    <form [formGroup]=\"fgDatePicker\" class=\"dropdown-form\">\n      <span class=\"text-medium m-b-4\" translate>Date from</span>\n      <c8y-form-group class=\"datepicker d-block m-b-16\" style=\"max-height: 32px;\">\n        <input\n          formControlName=\"dateFrom\"\n          class=\"form-control fit-w text-left\"\n          placeholder=\"{{ 'Date from' | translate }}\"\n          bsDatepicker\n          [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        />\n      </c8y-form-group>\n      <span class=\"text-medium m-b-4\" translate>Date to</span>\n      <c8y-form-group class=\"datepicker m-l-0 d-block\" style=\"max-height: 32px;\">\n        <input\n          formControlName=\"dateTo\"\n          class=\"form-control fit-w text-left\"\n          placeholder=\"{{ 'Date to' | translate }}\"\n          bsDatepicker\n          [bsConfig]=\"{ customTodayClass: 'today', returnFocusToInput: true }\"\n        />\n      </c8y-form-group>\n      <div class=\"p-t-24\">\n        <button\n          title=\"{{ 'Clear selection' | translate }}\"\n          type=\"button\"\n          class=\"btn btn-default btn-sm\"\n          (click)=\"clearFilter(); datefilter.isOpen = !datefilter.isOpen\"\n        >\n          {{ 'Clear`selection`' | translate }}\n        </button>\n        <button\n          [disabled]=\"!fgDatePicker.get('dateFrom').value && !fgDatePicker.get('dateTo').value\"\n          title=\"{{ 'Apply selection' | translate }}\"\n          type=\"submit\"\n          class=\"btn btn-primary btn-sm\"\n          (click)=\"filter(); datefilter.isOpen = !datefilter.isOpen\"\n        >\n          {{ 'Apply`selection`' | translate }}\n        </button>\n      </div>\n    </form>\n  </div>\n</div>\n"
        })
    ], DatePickerComponent);
    return DatePickerComponent;
}());
export { DatePickerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy8iLCJzb3VyY2VzIjpbImNvcmUvZGF0ZS1waWNrZXIvZGF0ZS1waWNrZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFlBQVksRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUFFLFdBQVcsRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQU94RDtJQUpBO1FBS1ksbUJBQWMsR0FBOEIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQTRCM0UsQ0FBQztJQXRCQyxzQ0FBUSxHQUFSO1FBQ0UsSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLFNBQVMsQ0FBQztZQUNoQyxRQUFRLEVBQUUsSUFBSSxXQUFXLEVBQUU7WUFDM0IsTUFBTSxFQUFFLElBQUksV0FBVyxFQUFFO1NBQzFCLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxvQ0FBTSxHQUFOO1FBQ0UsSUFBSSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNsRCxJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEtBQUssQ0FBQztRQUN4RCxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDLEtBQUssQ0FBQztJQUN0RCxDQUFDO0lBRUQseUNBQVcsR0FBWDtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDO1lBQ3pCLFFBQVEsRUFBRSxJQUFJO1lBQ2QsTUFBTSxFQUFFLElBQUk7U0FDYixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUMvQixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQztRQUNyQixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztJQUNyQixDQUFDO0lBM0JTO1FBQVQsTUFBTSxFQUFFOytEQUFnRTtJQUQ5RCxtQkFBbUI7UUFKL0IsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGlCQUFpQjtZQUMzQixteEZBQTJDO1NBQzVDLENBQUM7T0FDVyxtQkFBbUIsQ0E2Qi9CO0lBQUQsMEJBQUM7Q0FBQSxBQTdCRCxJQTZCQztTQTdCWSxtQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT25Jbml0LCBPdXRwdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvcm1Db250cm9sLCBGb3JtR3JvdXAgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XG5pbXBvcnQgeyBQaWNrZWREYXRlcyB9IGZyb20gJy4vZGF0ZS1waWNrZXIubW9kZWwnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktZGF0ZS1waWNrZXInLFxuICB0ZW1wbGF0ZVVybDogJy4vZGF0ZS1waWNrZXIuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIERhdGVQaWNrZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBAT3V0cHV0KCkgb25EYXRlU2VsZWN0ZWQ6IEV2ZW50RW1pdHRlcjxQaWNrZWREYXRlcz4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgZGF0ZUZyb206IHN0cmluZztcbiAgZGF0ZVRvOiBzdHJpbmc7XG4gIGZnRGF0ZVBpY2tlcjogRm9ybUdyb3VwO1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuZmdEYXRlUGlja2VyID0gbmV3IEZvcm1Hcm91cCh7XG4gICAgICBkYXRlRnJvbTogbmV3IEZvcm1Db250cm9sKCksXG4gICAgICBkYXRlVG86IG5ldyBGb3JtQ29udHJvbCgpXG4gICAgfSk7XG4gIH1cblxuICBmaWx0ZXIoKSB7XG4gICAgdGhpcy5vbkRhdGVTZWxlY3RlZC5lbWl0KHRoaXMuZmdEYXRlUGlja2VyLnZhbHVlKTtcbiAgICB0aGlzLmRhdGVGcm9tID0gdGhpcy5mZ0RhdGVQaWNrZXIuZ2V0KCdkYXRlRnJvbScpLnZhbHVlO1xuICAgIHRoaXMuZGF0ZVRvID0gdGhpcy5mZ0RhdGVQaWNrZXIuZ2V0KCdkYXRlVG8nKS52YWx1ZTtcbiAgfVxuXG4gIGNsZWFyRmlsdGVyKCkge1xuICAgIHRoaXMuZmdEYXRlUGlja2VyLnNldFZhbHVlKHtcbiAgICAgIGRhdGVGcm9tOiBudWxsLFxuICAgICAgZGF0ZVRvOiBudWxsXG4gICAgfSk7XG4gICAgdGhpcy5vbkRhdGVTZWxlY3RlZC5lbWl0KG51bGwpO1xuICAgIHRoaXMuZGF0ZUZyb20gPSBudWxsO1xuICAgIHRoaXMuZGF0ZVRvID0gbnVsbDtcbiAgfVxufVxuIl19