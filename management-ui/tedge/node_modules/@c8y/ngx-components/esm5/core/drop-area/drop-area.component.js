import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { get, map, some } from 'lodash-es';
import { gettext } from '../i18n/gettext';
/**
 * A drop-zone which is a file selector allowing users to select file(s) from their file system, either natively or by drag and drop.
 *
 * ## Example:
 *
 * ```html
 *  <div>
 *    <c8y-drop-area
 *      (dropped)="uploadFile($event)"
 *      [icon]="'upload'">
 *    </c8y-drop-area>
 *  </div>
 * ```
 */
var DropAreaComponent = /** @class */ (function () {
    function DropAreaComponent(cd) {
        this.cd = cd;
        this.title = gettext('Upload file');
        this.message = gettext('Drop file here');
        this.icon = 'plus-square';
        this.loadingMessage = gettext('Uploadingâ€¦');
        /** Affects displaying both the drop zone and the list of dropped files. */
        this.alwaysShow = false;
        this.clickToOpen = true;
        this.loading = false;
        this.progress = -1; // -1 = spinner
        this.dropped = new EventEmitter();
        this.maxAllowedFiles = Infinity;
        this.isOver = false;
        this.errors = false;
        this.onChange = function (_) { return undefined; };
        this.onTouched = function () { return undefined; };
    }
    DropAreaComponent_1 = DropAreaComponent;
    DropAreaComponent.prototype.ngOnInit = function () {
        this.alwaysShow = this.alwaysShow || this.area.nativeElement.children.length === 0;
        if (this.files && this.files.length > 0) {
            this.onFilesSelected(this.files);
        }
    };
    /**
     * Toggles the style of the drop zone element when a file is dragged over the component.
     */
    DropAreaComponent.prototype.toggle = function ($event) {
        this.zone.nativeElement.style.height = this.area.nativeElement.offsetHeight + 'px';
        this.onOver();
    };
    /**
     * Shows computer browser with files to drop into drop-area zone.
     */
    DropAreaComponent.prototype.showPicker = function ($event) {
        this.preventDefault($event);
        this.picker.nativeElement.value = '';
        this.picker.nativeElement.click();
    };
    /**
     * Triggered when file is on over drop area, but not dropped.
     */
    DropAreaComponent.prototype.onOver = function () {
        if (!this.isOver) {
            this.isOver = true;
            document.addEventListener('dragover', this.preventDefault);
            document.addEventListener('drop', this.preventDefault);
        }
    };
    /**
     * Triggered when file is dropped.
     */
    DropAreaComponent.prototype.onPick = function ($event) {
        this.errors = false;
        this.preventDefault($event);
        this.onFilesSelected($event.target.files);
    };
    /**
     * Handle file when it is dropped into drop-area.
     */
    DropAreaComponent.prototype.onDrop = function ($event) {
        this.preventDefault($event);
        this.onFilesSelected($event.dataTransfer.files);
        this.stopDragging();
    };
    /**
     * Checks condition what should be displayed: drop-area zone or list of dropped files.
     */
    DropAreaComponent.prototype.shouldShowFilesList = function () {
        return (this.alwaysShow &&
            !this.isFilesArrayEmpty() &&
            !this.hasEmptyFiles() &&
            !this.isTooManyFiles());
    };
    /**
     * Triggered when file is picked over web application.
     */
    DropAreaComponent.prototype.stopDragging = function () {
        document.removeEventListener('dragover', this.preventDefault);
        document.removeEventListener('drop', this.preventDefault);
        this.isOver = false;
    };
    /**
     * Delete files already dropped files.
     */
    DropAreaComponent.prototype.onDelete = function () {
        delete this.files;
        delete this.filesNameString;
        this.clearErrors();
        this.dropped.emit(undefined);
        this.onChange(undefined);
    };
    DropAreaComponent.prototype.writeValue = function (value) {
        this.files = value;
        if (!value) {
            this.onDelete();
        }
        this.cd.detectChanges();
    };
    DropAreaComponent.prototype.registerOnChange = function (fn) {
        this.onChange = fn;
    };
    DropAreaComponent.prototype.registerOnTouched = function (fn) {
        this.onTouched = fn;
    };
    DropAreaComponent.prototype.onFilesSelected = function (files) {
        this.files = files;
        this.filesNameString = this.getFilesNamesAsString(files);
        this.errors = false;
        if (!this.isFilesArrayEmpty() && !this.isTooManyFiles()) {
            if (this.hasEmptyFiles()) {
                this.errors = true;
                this.errorMessage = gettext('File must not be empty, select another one.');
            }
            else {
                var droppedFiles = this.compose(files);
                this.dropped.emit(droppedFiles);
                this.onChange(droppedFiles);
            }
        }
        else {
            this.errors = true;
            this.errorMessage = gettext('Too many files selected.');
        }
    };
    DropAreaComponent.prototype.getFilesNamesAsString = function (files) {
        return map(files, function (_a) {
            var name = _a.name;
            return name;
        }).join(', ');
    };
    DropAreaComponent.prototype.isFilesArrayEmpty = function () {
        return get(this, 'files.length', 0) === 0;
    };
    DropAreaComponent.prototype.isTooManyFiles = function () {
        return get(this, 'files.length', 0) > this.maxAllowedFiles;
    };
    DropAreaComponent.prototype.hasEmptyFiles = function () {
        var result = true;
        if (!this.isFilesArrayEmpty()) {
            result = this.isAnyFileEmpty();
        }
        return result;
    };
    DropAreaComponent.prototype.isAnyFileEmpty = function () {
        return some(Array.from(this.files), ['size', 0]);
    };
    DropAreaComponent.prototype.clearErrors = function () {
        delete this.errorMessage;
        this.errors = false;
    };
    DropAreaComponent.prototype.preventDefault = function ($event) {
        if ($event) {
            $event.preventDefault();
        }
    };
    DropAreaComponent.prototype.compose = function (files) {
        var _this = this;
        return Array.from(files).map(function (file) { return ({
            file: file,
            readAsJson: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { var _a, _b; return tslib_1.__generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = (_a = JSON).parse;
                        return [4 /*yield*/, this.read(file, ReadAsType.TEXT)];
                    case 1: return [2 /*return*/, _b.apply(_a, [_c.sent()])];
                }
            }); }); },
            readAsText: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.read(file, ReadAsType.TEXT)];
            }); }); },
            readAsArrayBuffer: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.read(file, ReadAsType.ARRAY_BUFFER)];
            }); }); },
            readAsBinaryString: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.read(file, ReadAsType.BINARY_STRING)];
            }); }); },
            readAsDataURL: function () { return tslib_1.__awaiter(_this, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, this.read(file, ReadAsType.DATA_URL)];
            }); }); }
        }); });
    };
    DropAreaComponent.prototype.read = function (file, type) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                return [2 /*return*/, new Promise(function (resolve, reject) {
                        var reader = new FileReader();
                        switch (type) {
                            case ReadAsType.TEXT: {
                                reader.readAsText(file);
                                break;
                            }
                            case ReadAsType.ARRAY_BUFFER: {
                                reader.readAsArrayBuffer(file);
                                break;
                            }
                            case ReadAsType.BINARY_STRING: {
                                reader.readAsBinaryString(file);
                                break;
                            }
                            case ReadAsType.DATA_URL: {
                                reader.readAsDataURL(file);
                                break;
                            }
                        }
                        reader.onload = function () { return _this.onLoad(reader, resolve, reject); };
                    })];
            });
        });
    };
    DropAreaComponent.prototype.onLoad = function (reader, resolve, reject) {
        if (reader.readyState !== 2) {
            return;
        }
        if (reader.error) {
            reject(reader.error);
        }
        resolve(reader.result);
    };
    var DropAreaComponent_1;
    DropAreaComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef }
    ]; };
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "title", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "message", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "icon", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "loadingMessage", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "alwaysShow", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "clickToOpen", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "loading", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "progress", void 0);
    tslib_1.__decorate([
        Output()
    ], DropAreaComponent.prototype, "dropped", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "maxAllowedFiles", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "files", void 0);
    tslib_1.__decorate([
        Input()
    ], DropAreaComponent.prototype, "accept", void 0);
    tslib_1.__decorate([
        ViewChild('area', { static: true })
    ], DropAreaComponent.prototype, "area", void 0);
    tslib_1.__decorate([
        ViewChild('zone', { static: false })
    ], DropAreaComponent.prototype, "zone", void 0);
    tslib_1.__decorate([
        ViewChild('picker', { static: false })
    ], DropAreaComponent.prototype, "picker", void 0);
    DropAreaComponent = DropAreaComponent_1 = tslib_1.__decorate([
        Component({
            selector: 'c8y-drop-area',
            template: "<div\n  class=\"drop-zone\"\n  *ngIf=\"!shouldShowFilesList()\"\n  [ngClass]=\"{ 'has-errors': errors }\"\n  [style.pointerEvents]=\"loading ? 'none' : 'auto'\"\n  #zone\n  (dragleave)=\"stopDragging()\"\n  (drop)=\"onDrop($event)\"\n  (dragover)=\"onOver()\"\n  [style.display]=\"isOver || alwaysShow || loading ? 'block' : 'none'\"\n  (click)=\"showPicker($event)\"\n>\n  <div class=\"file-placeholder\"  [ngClass]=\"{ 'drag-over': isOver }\">\n    <div *ngIf=\"loading\" class=\"d-flex p-4 flex-center\">\n      <p class=\"flex-item-middle m-r-8\">\n        {{ loadingMessage | translate }}\n      </p>\n      <div class=\"progress progress-striped active m-0\" *ngIf=\"progress !== -1\"\n          style=\"min-width: 50%;\">\n        <div\n          class=\"progress-bar\"\n          role=\"progressbar\"\n          aria-valuenow=\"0\"\n          aria-valuemin=\"0\"\n          aria-valuemax=\"100\"\n          [style.width]=\"progress + '%'\"\n        ></div>\n      </div>\n      <div class=\"spinner p-relative m-0\" *ngIf=\"progress === -1\">\n        <div class=\"rect1\"></div>\n        <div class=\"rect2\"></div>\n        <div class=\"rect3\"></div>\n        <div class=\"rect4\"></div>\n        <div class=\"rect5\"></div>\n      </div>\n    </div>\n\n    <div *ngIf=\"!loading\" class=\"hint-placeholder pointer\">\n      <i class=\"dlt-c8y-icon-{{ icon }}\"></i>\n      <p *ngIf=\"!errors\">\n        <b>{{ message | translate }}</b>\n        <br />\n        <span *ngIf=\"alwaysShow && clickToOpen\" translate>or click to browse your computer.</span>\n      </p>\n      <div *ngIf=\"errors\" class=\"has-errors\">\n        <p class=\"form-control-feedback-message\">\n          {{ errorMessage | translate }}\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"drop-zone\" *ngIf=\"shouldShowFilesList()\"\n  [style.display]=\"isOver || alwaysShow || loading ? 'block' : 'none'\">\n  <div *ngIf=\"loading\" class=\"d-flex p-4 flex-center\">\n    <p class=\"flex-item-middle m-r-8\">\n      {{ loadingMessage | translate }}\n    </p>\n    <div class=\"progress progress-striped active m-0\" *ngIf=\"progress !== -1\"\n      style=\"min-width: 50%;\">\n      <div\n        class=\"progress-bar\"\n        role=\"progressbar\"\n        aria-valuenow=\"0\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        [style.width]=\"progress + '%'\"\n      ></div>\n    </div>\n    <div class=\"spinner  p-relative m-0\" *ngIf=\"progress === -1\">\n      <div class=\"rect1\"></div>\n      <div class=\"rect2\"></div>\n      <div class=\"rect3\"></div>\n      <div class=\"rect4\"></div>\n      <div class=\"rect5\"></div>\n    </div>\n  </div>\n  <div *ngIf=\"!loading\" class=\"file-placeholder p-4\">\n    <div class=\"flex-row p-4\">\n      <i c8yIcon=\"file-o\" class=\"m-r-8\"></i>\n      <span title=\"{{ filesNameString }}\" class=\"text-truncate\">\n        {{ filesNameString }}\n      </span>\n      <button\n        title=\"{{ 'Remove' | translate }}\"\n        class=\"btn btn-clean showOnHover flex-item-right\"\n        >\n        <i c8yIcon=\"minus-circle\" class=\"text-danger\" (click)=\"onDelete()\"></i>\n      </button>\n    </div>\n  </div>\n</div>\n\n<input\n  #picker\n  *ngIf=\"clickToOpen\"\n  (change)=\"onPick($event)\"\n  (click)=\"picker.focus()\"\n  (blur)=\"onTouched()\"\n  [accept]=\"accept\"\n  [multiple]=\"maxAllowedFiles > 1\"\n  type=\"file\"\n  style=\"opacity: 0; filter: alpha(opacity = 0); height: 0px\"\n/>\n<div #area [hidden]=\"isOver || loading\" (dragover)=\"toggle($event)\">\n  <ng-content></ng-content>\n</div>\n",
            providers: [{ provide: NG_VALUE_ACCESSOR, useExisting: DropAreaComponent_1, multi: true }]
        })
    ], DropAreaComponent);
    return DropAreaComponent;
}());
export { DropAreaComponent };
var ReadAsType;
(function (ReadAsType) {
    ReadAsType[ReadAsType["TEXT"] = 0] = "TEXT";
    ReadAsType[ReadAsType["DATA_URL"] = 1] = "DATA_URL";
    ReadAsType[ReadAsType["ARRAY_BUFFER"] = 2] = "ARRAY_BUFFER";
    ReadAsType[ReadAsType["BINARY_STRING"] = 3] = "BINARY_STRING";
})(ReadAsType || (ReadAsType = {}));
//# sourceMappingURL=data:application/json;base64,