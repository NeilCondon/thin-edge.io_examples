import * as tslib_1 from "tslib";
import { BaseDeviceGridColumn } from './base.device-grid-column';
import { GroupCellRendererComponent } from './group.cell-renderer.component';
import { GroupFilteringFormRendererComponent } from './group.filtering-form-renderer.component';
import { gettext } from '@c8y/ngx-components';
var GroupDeviceGridColumn = /** @class */ (function (_super) {
    tslib_1.__extends(GroupDeviceGridColumn, _super);
    function GroupDeviceGridColumn(initialColumnConfig) {
        var _this = _super.call(this, initialColumnConfig) || this;
        _this.name = 'group';
        _this.header = gettext('Group');
        _this.cellRendererComponent = GroupCellRendererComponent;
        _this.filteringFormRendererComponent = GroupFilteringFormRendererComponent;
        _this.filterable = true;
        _this.filteringConfig = {
            getFilter: function (model) {
                var filter = {};
                if (model.selectedNodes) {
                    filter.__or = model.selectedNodes.map(function (mo) {
                        if (mo.c8y_DeviceQueryString) {
                            return { __useFilterQueryString: mo.c8y_DeviceQueryString };
                        }
                        return { __bygroupid: mo.id };
                    });
                }
                return filter;
            }
        };
        _this.sortable = false;
        return _this;
    }
    return GroupDeviceGridColumn;
}(BaseDeviceGridColumn));
export { GroupDeviceGridColumn };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JvdXAuZGV2aWNlLWdyaWQtY29sdW1uLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9kZXZpY2UtZ3JpZC8iLCJzb3VyY2VzIjpbImNvbHVtbnMvZ3JvdXAuZGV2aWNlLWdyaWQtY29sdW1uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsbUNBQW1DLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNoRyxPQUFPLEVBQUUsT0FBTyxFQUFnQixNQUFNLHFCQUFxQixDQUFDO0FBRzVEO0lBQTJDLGlEQUFvQjtJQUM3RCwrQkFBWSxtQkFBa0M7UUFBOUMsWUFDRSxrQkFBTSxtQkFBbUIsQ0FBQyxTQXFCM0I7UUFwQkMsS0FBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUM7UUFDcEIsS0FBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDL0IsS0FBSSxDQUFDLHFCQUFxQixHQUFHLDBCQUEwQixDQUFDO1FBQ3hELEtBQUksQ0FBQyw4QkFBOEIsR0FBRyxtQ0FBbUMsQ0FBQztRQUMxRSxLQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztRQUN2QixLQUFJLENBQUMsZUFBZSxHQUFHO1lBQ3JCLFNBQVMsRUFBVCxVQUFVLEtBQUs7Z0JBQ2IsSUFBTSxNQUFNLEdBQVEsRUFBRSxDQUFDO2dCQUN2QixJQUFJLEtBQUssQ0FBQyxhQUFhLEVBQUU7b0JBQ3ZCLE1BQU0sQ0FBQyxJQUFJLEdBQUcsS0FBSyxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQUMsVUFBQyxFQUFrQjt3QkFDdkQsSUFBSSxFQUFFLENBQUMscUJBQXFCLEVBQUU7NEJBQzVCLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxFQUFFLENBQUMscUJBQXFCLEVBQUUsQ0FBQzt5QkFDN0Q7d0JBQ0QsT0FBTyxFQUFFLFdBQVcsRUFBRSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7b0JBQ2hDLENBQUMsQ0FBQyxDQUFDO2lCQUNKO2dCQUNELE9BQU8sTUFBTSxDQUFDO1lBQ2hCLENBQUM7U0FDRixDQUFDO1FBQ0YsS0FBSSxDQUFDLFFBQVEsR0FBRyxLQUFLLENBQUM7O0lBQ3hCLENBQUM7SUFDSCw0QkFBQztBQUFELENBQUMsQUF4QkQsQ0FBMkMsb0JBQW9CLEdBd0I5RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VEZXZpY2VHcmlkQ29sdW1uIH0gZnJvbSAnLi9iYXNlLmRldmljZS1ncmlkLWNvbHVtbic7XG5pbXBvcnQgeyBHcm91cENlbGxSZW5kZXJlckNvbXBvbmVudCB9IGZyb20gJy4vZ3JvdXAuY2VsbC1yZW5kZXJlci5jb21wb25lbnQnO1xuaW1wb3J0IHsgR3JvdXBGaWx0ZXJpbmdGb3JtUmVuZGVyZXJDb21wb25lbnQgfSBmcm9tICcuL2dyb3VwLmZpbHRlcmluZy1mb3JtLXJlbmRlcmVyLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBnZXR0ZXh0LCBDb2x1bW5Db25maWcgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuXG5leHBvcnQgY2xhc3MgR3JvdXBEZXZpY2VHcmlkQ29sdW1uIGV4dGVuZHMgQmFzZURldmljZUdyaWRDb2x1bW4ge1xuICBjb25zdHJ1Y3Rvcihpbml0aWFsQ29sdW1uQ29uZmlnPzogQ29sdW1uQ29uZmlnKSB7XG4gICAgc3VwZXIoaW5pdGlhbENvbHVtbkNvbmZpZyk7XG4gICAgdGhpcy5uYW1lID0gJ2dyb3VwJztcbiAgICB0aGlzLmhlYWRlciA9IGdldHRleHQoJ0dyb3VwJyk7XG4gICAgdGhpcy5jZWxsUmVuZGVyZXJDb21wb25lbnQgPSBHcm91cENlbGxSZW5kZXJlckNvbXBvbmVudDtcbiAgICB0aGlzLmZpbHRlcmluZ0Zvcm1SZW5kZXJlckNvbXBvbmVudCA9IEdyb3VwRmlsdGVyaW5nRm9ybVJlbmRlcmVyQ29tcG9uZW50O1xuICAgIHRoaXMuZmlsdGVyYWJsZSA9IHRydWU7XG4gICAgdGhpcy5maWx0ZXJpbmdDb25maWcgPSB7XG4gICAgICBnZXRGaWx0ZXIobW9kZWwpIHtcbiAgICAgICAgY29uc3QgZmlsdGVyOiBhbnkgPSB7fTtcbiAgICAgICAgaWYgKG1vZGVsLnNlbGVjdGVkTm9kZXMpIHtcbiAgICAgICAgICBmaWx0ZXIuX19vciA9IG1vZGVsLnNlbGVjdGVkTm9kZXMubWFwKChtbzogSU1hbmFnZWRPYmplY3QpID0+IHtcbiAgICAgICAgICAgIGlmIChtby5jOHlfRGV2aWNlUXVlcnlTdHJpbmcpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHsgX191c2VGaWx0ZXJRdWVyeVN0cmluZzogbW8uYzh5X0RldmljZVF1ZXJ5U3RyaW5nIH07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4geyBfX2J5Z3JvdXBpZDogbW8uaWQgfTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmlsdGVyO1xuICAgICAgfVxuICAgIH07XG4gICAgdGhpcy5zb3J0YWJsZSA9IGZhbHNlO1xuICB9XG59XG4iXX0=