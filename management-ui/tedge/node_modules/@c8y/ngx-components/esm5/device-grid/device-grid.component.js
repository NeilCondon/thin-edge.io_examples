import * as tslib_1 from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { DataGridComponent, FilteringActionType, gettext } from '@c8y/ngx-components';
import { DeviceGridService } from './device-grid.service';
var DeviceGridComponent = /** @class */ (function () {
    function DeviceGridComponent(deviceGridService) {
        this.deviceGridService = deviceGridService;
        this.title = gettext('Devices');
        this.loadMoreItemsLabel = gettext('Load more devices');
        this.loadingItemsLabel = gettext('Loading devicesâ€¦');
        this.selectable = false;
        this.baseQuery = {};
        this.showChildDevices = {};
        this.onColumnsChange = new EventEmitter();
        this.onDeviceQueryStringChange = new EventEmitter();
        this.itemsSelect = new EventEmitter();
        this.onChildDevices = new EventEmitter();
        this.columns = this.deviceGridService.getDefaultColumns();
        this.pagination = this.deviceGridService.getDefaultPagination();
        this.actionControls = this.deviceGridService.getDefaultActionControls();
        this.bulkActionControls = this.deviceGridService.getDefaultBulkActionControls();
        this.withChildren = false;
        this.serverSideDataCallback = this.onDataSourceModifier.bind(this);
    }
    Object.defineProperty(DeviceGridComponent.prototype, "_columns", {
        set: function (value) {
            if (value) {
                this.columns = this.deviceGridService.getUserConfiguredColumns(value);
            }
            else {
                this.columns = this.deviceGridService.getUserConfiguredColumns(this.deviceGridService.getDefaultColumns());
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_pagination", {
        set: function (value) {
            if (value) {
                this.pagination = value;
            }
            else {
                this.pagination = this.deviceGridService.getDefaultPagination();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_infiniteScroll", {
        set: function (infiniteScroll) {
            this.infiniteScroll = infiniteScroll;
            this.pagination = this.deviceGridService.getInfiniteScrollPagination();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_actionControls", {
        set: function (value) {
            if (value) {
                this.actionControls = value;
            }
            else {
                this.actionControls = this.deviceGridService.getDefaultActionControls();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DeviceGridComponent.prototype, "_bulkActionControls", {
        set: function (value) {
            if (value) {
                this.bulkActionControls = value;
            }
            else {
                this.bulkActionControls = this.deviceGridService.getDefaultBulkActionControls();
            }
        },
        enumerable: true,
        configurable: true
    });
    DeviceGridComponent.prototype.trackByName = function (_index, column) {
        return column.name;
    };
    DeviceGridComponent.prototype.onDataSourceModifier = function (dataSourceModifier) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var serverSideDataResult, _a, res, data, paging, filteredSize, size;
            return tslib_1.__generator(this, function (_b) {
                switch (_b.label) {
                    case 0: return [4 /*yield*/, this.deviceGridService.getData(dataSourceModifier.columns, dataSourceModifier.pagination, this.baseQuery, this.withChildren)];
                    case 1:
                        _a = _b.sent(), res = _a.res, data = _a.data, paging = _a.paging;
                        return [4 /*yield*/, this.deviceGridService.getCount(dataSourceModifier.columns, dataSourceModifier.pagination, this.baseQuery)];
                    case 2:
                        filteredSize = _b.sent();
                        return [4 /*yield*/, this.deviceGridService.getTotal(this.baseQuery)];
                    case 3:
                        size = _b.sent();
                        this.onColumnsChange.emit(dataSourceModifier.columns);
                        this.onDeviceQueryStringChange.emit(this.deviceGridService.getDeviceQueryString(dataSourceModifier.columns, this.baseQuery));
                        serverSideDataResult = {
                            res: res,
                            data: data,
                            paging: paging,
                            filteredSize: filteredSize,
                            size: size
                        };
                        if (this.dataCallback) {
                            serverSideDataResult = this.dataCallback(serverSideDataResult);
                        }
                        return [2 /*return*/, serverSideDataResult];
                }
            });
        });
    };
    DeviceGridComponent.prototype.updateFiltering = function (columnNames, action) {
        var type = action.type;
        if (type === FilteringActionType.ResetFilter) {
            this.dataGrid.clearFilters();
        }
        else {
            this.dataGrid.updateFiltering(columnNames, action);
        }
    };
    DeviceGridComponent.prototype.configChange = function (config) {
        this.deviceGridService.saveConfig(config);
    };
    DeviceGridComponent.ctorParameters = function () { return [
        { type: DeviceGridService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "dataCallback", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "refresh", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "title", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "itemsSelectLimit", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "loadMoreItemsLabel", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "loadingItemsLabel", void 0);
    tslib_1.__decorate([
        Input('columns')
    ], DeviceGridComponent.prototype, "_columns", null);
    tslib_1.__decorate([
        Input('pagination')
    ], DeviceGridComponent.prototype, "_pagination", null);
    tslib_1.__decorate([
        Input('infiniteScroll')
    ], DeviceGridComponent.prototype, "_infiniteScroll", null);
    tslib_1.__decorate([
        Input('actionControls')
    ], DeviceGridComponent.prototype, "_actionControls", null);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "selectable", void 0);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "baseQuery", void 0);
    tslib_1.__decorate([
        Input('bulkActionControls')
    ], DeviceGridComponent.prototype, "_bulkActionControls", null);
    tslib_1.__decorate([
        Input()
    ], DeviceGridComponent.prototype, "showChildDevices", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceGridComponent.prototype, "onColumnsChange", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceGridComponent.prototype, "onDeviceQueryStringChange", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceGridComponent.prototype, "itemsSelect", void 0);
    tslib_1.__decorate([
        Output()
    ], DeviceGridComponent.prototype, "onChildDevices", void 0);
    tslib_1.__decorate([
        ViewChild(DataGridComponent, { static: true })
    ], DeviceGridComponent.prototype, "dataGrid", void 0);
    DeviceGridComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-device-grid',
            template: "<c8y-data-grid\n  [title]=\"title\"\n  [loadMoreItemsLabel]=\"loadMoreItemsLabel\"\n  [loadingItemsLabel]=\"loadingItemsLabel\"\n  [columns]=\"columns\"\n  [pagination]=\"pagination\"\n  [infiniteScroll]=\"infiniteScroll\"\n  [actionControls]=\"actionControls\"\n  [selectable]=\"selectable\"\n  [bulkActionControls]=\"bulkActionControls\"\n  [serverSideDataCallback]=\"serverSideDataCallback\"\n  [itemsSelectLimit]=\"itemsSelectLimit\"\n  (itemsSelect)=\"itemsSelect.emit($event)\"\n  (onConfigChange)=\"configChange($event)\"\n  [refresh]=\"refresh\"\n  [showChildDevices]=\"showChildDevices\"\n  (onChildDevices)=\"withChildren=$event;onChildDevices.emit($event)\"\n>\n  <div class=\"c8y-empty-state\">\n    <h1 c8yIcon=\"search\"></h1>\n    <div>\n      <p>\n        <strong>{{ 'No matching devices.' | translate }}</strong>\n      </p>\n      <small>{{ 'Refine your search terms' | translate }}</small>\n    </div>\n  </div>\n  <ng-container *ngFor=\"let column of columns; trackBy: trackByName\">\n    <c8y-column [name]=\"column.name\"></c8y-column>\n  </ng-container>\n</c8y-data-grid>\n"
        })
    ], DeviceGridComponent);
    return DeviceGridComponent;
}());
export { DeviceGridComponent };
//# sourceMappingURL=data:application/json;base64,