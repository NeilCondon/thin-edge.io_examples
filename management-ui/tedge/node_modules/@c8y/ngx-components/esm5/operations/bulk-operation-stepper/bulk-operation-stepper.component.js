import * as tslib_1 from "tslib";
import { Component, ContentChildren, EventEmitter, Output, ViewChild } from '@angular/core';
import { AlertService, C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';
import { get } from 'lodash-es';
import { Subject } from 'rxjs';
import { takeUntil } from 'rxjs/operators';
import { OperationDetailsComponent } from '@c8y/ngx-components/operations/details';
import { CustomStep } from './custom-step.directive';
import { OperationDetails, BulkOperationType, BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
var BulkOperationStepper = /** @class */ (function () {
    function BulkOperationStepper(bulkOperationService, modal, alert) {
        this.bulkOperationService = bulkOperationService;
        this.modal = modal;
        this.alert = alert;
        this.selectionChange = new EventEmitter();
        this.steps = [];
        this.showStepper = false;
        this.showButtons = false;
        this.stepperButtonsLabels = { custom: gettext('Schedule bulk operation') };
        this.deviceTypesSubject$ = new Subject();
        this.endSubscriptions = new Subject();
        this.deviceTypes$ = this.deviceTypesSubject$.asObservable();
    }
    BulkOperationStepper.prototype.ngAfterViewInit = function () {
        var _this = this;
        setTimeout(function () {
            // wait for the next event loop turn as `steps` has already been checked in this CD cycle
            _this.steps = _this.customSteps.toArray();
            _this.showStepper = true;
            setTimeout(function () {
                // postpone rendering of buttons for custom steps to the point where custom steps have already been rendered
                _this.showButtons = true;
                if (_this.stepper) {
                    _this.stepper.selectionChange.pipe(takeUntil(_this.endSubscriptions)).subscribe(function (event) {
                        _this.selectionChange.next(event);
                    });
                    _this.operationDetailsForm = _this.operationDetailsComponent.fgOperationDescription;
                }
            });
        });
    };
    BulkOperationStepper.prototype.changeDeviceTypes = function (deviceTypes) {
        if (deviceTypes) {
            this.deviceTypesSubject$.next(Array.isArray(deviceTypes) ? deviceTypes : [deviceTypes]);
        }
        else {
            this.deviceTypesSubject$.next([]);
        }
    };
    BulkOperationStepper.prototype.confirmDeviceSelection = function ($event) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var _a, _b, ex_1, _c, _d;
            return tslib_1.__generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        if (!!this.deviceQueryString) return [3 /*break*/, 8];
                        _e.label = 1;
                    case 1:
                        _e.trys.push([1, 6, , 7]);
                        return [4 /*yield*/, this.modal.confirm(gettext('All devices selected'), gettext('You are about to schedule the bulk operation to be executed for all devices. Do you want to proceed?'), Status.WARNING, { ok: gettext('Schedule for all devices'), cancel: gettext('Cancel and select devices') })];
                    case 2:
                        _e.sent();
                        $event.step.completed = true;
                        $event.stepper.next();
                        _a = this;
                        if (!this.retrieveOperationDetails) return [3 /*break*/, 4];
                        return [4 /*yield*/, this.retrieveOperationDetails()];
                    case 3:
                        _b = _e.sent();
                        return [3 /*break*/, 5];
                    case 4:
                        _b = undefined;
                        _e.label = 5;
                    case 5:
                        _a.operationDetails = _b;
                        return [3 /*break*/, 7];
                    case 6:
                        ex_1 = _e.sent();
                        return [3 /*break*/, 7];
                    case 7: return [3 /*break*/, 12];
                    case 8:
                        $event.step.completed = true;
                        $event.stepper.next();
                        _c = this;
                        if (!this.retrieveOperationDetails) return [3 /*break*/, 10];
                        return [4 /*yield*/, this.retrieveOperationDetails()];
                    case 9:
                        _d = _e.sent();
                        return [3 /*break*/, 11];
                    case 10:
                        _d = undefined;
                        _e.label = 11;
                    case 11:
                        _c.operationDetails = _d;
                        _e.label = 12;
                    case 12:
                        this.bulkOperationType = this.bulkOperationService.retrieveBulkOperationType(get(this.operationDetails, 'prototype'));
                        if (this.operationDetailsForm &&
                            get(this.operationDetailsForm, 'controls.description.pristine') &&
                            this.operationDetails) {
                            this.operationDetailsForm.patchValue({
                                description: get(this.operationDetails, 'prototype.description')
                            });
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    BulkOperationStepper.prototype.cancel = function () {
        this.close();
    };
    BulkOperationStepper.prototype.scheduleBulkOperation = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var ex_2;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        this.pendingStatus = true;
                        _a.label = 1;
                    case 1:
                        _a.trys.push([1, 3, , 4]);
                        this.operationDetails.prototype.description = get(this.operationDetailsForm, 'controls.description.value');
                        this.operationDetails.note = get(this.operationDetailsForm, 'controls.note.value');
                        this.operationDetails.schedule = get(this.operationDetailsForm, 'controls.schedule.value');
                        return [4 /*yield*/, this.bulkOperationService.scheduleBulkOperation(this.deviceQueryString, this.operationDetails)];
                    case 2:
                        _a.sent();
                        this.alert.success(gettext('New bulk operation scheduled.'));
                        this.close();
                        return [3 /*break*/, 4];
                    case 3:
                        ex_2 = _a.sent();
                        this.alert.addServerFailure(ex_2);
                        return [3 /*break*/, 4];
                    case 4:
                        this.pendingStatus = false;
                        return [2 /*return*/];
                }
            });
        });
    };
    BulkOperationStepper.prototype.ngOnDestroy = function () {
        this.endSubscriptions.next();
        this.endSubscriptions.complete();
    };
    BulkOperationStepper.prototype.close = function () {
        this.stepper.reset();
        this.bulkOperationService.returnToBulkOperationOverview();
    };
    BulkOperationStepper.ctorParameters = function () { return [
        { type: BulkOperationsService },
        { type: ModalService },
        { type: AlertService }
    ]; };
    tslib_1.__decorate([
        Output()
    ], BulkOperationStepper.prototype, "selectionChange", void 0);
    tslib_1.__decorate([
        ContentChildren(CustomStep)
    ], BulkOperationStepper.prototype, "customSteps", void 0);
    tslib_1.__decorate([
        ViewChild(C8yStepper, { static: false })
    ], BulkOperationStepper.prototype, "stepper", void 0);
    tslib_1.__decorate([
        ViewChild(OperationDetailsComponent, { static: false })
    ], BulkOperationStepper.prototype, "operationDetailsComponent", void 0);
    BulkOperationStepper = tslib_1.__decorate([
        Component({
            selector: 'c8y-bulk-operation-stepper',
            template: "<div class=\"fit-h\">\n  <c8y-stepper\n    class=\"flex-col no-align-items fit-h c8y-stepper--no-btns\"\n    linear\n    [disableDefaultIcons]=\"{ edit: true, done: false }\"\n    [customClasses]=\"['col-md-6', 'col-md-offset-3', 'p-t-16', 'p-b-32', 'flex-no-shrink']\"\n    *ngIf=\"showStepper\"\n  >\n    <!-- CUSTOM STEPS 1 to N-2 -->\n    <cdk-step\n      *ngFor=\"let step of steps\"\n      [label]=\"step.label | translate\"\n      [completed]=\"step.completed\"\n    >\n      <ng-container *ngTemplateOutlet=\"step.templateRef\"></ng-container>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        *ngIf=\"showButtons\"\n        [disabled]=\"step.buttonsDisabled\"\n        (onNext)=\"step.onNext($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n    <!-- STEP N-1 - Data-grid -->\n    <cdk-step [label]=\"'Select target devices' | translate\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row p-b-16\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Select target devices' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <c8y-device-selector\n          [deviceTypes]=\"deviceTypes$\"\n          (onDeviceQueryStringChange)=\"deviceQueryString = $event\"\n        ></c8y-device-selector>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        (onNext)=\"confirmDeviceSelection($event)\"\n        (onCancel)=\"cancel()\"\n      ></c8y-stepper-buttons>\n    </cdk-step>\n\n    <!-- STEP N - Scheduler -->\n    <cdk-step [label]=\"'Confirm and schedule bulk operation' | translate\">\n      <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n        <div class=\"row p-b-16\">\n          <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <h4 class=\"text-center m-b-16\">\n              {{ 'Confirm and schedule bulk operation' | translate }}\n            </h4>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"col-xs-12 flex-grow no-gutter\">\n        <div class=\"card-inner-scroll fit-h\">\n          <div class=\"card-block p-b-0\">\n            <div class=\"text-center p-b-16\">\n              <c8y-operation-summary\n                [name]=\"operationDetails?.name | translate\"\n                [description]=\"operationDetails?.description | translate\"\n                [deviceQueryString]=\"deviceQueryString\"\n              ></c8y-operation-summary>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-4 col-md-offset-4\">\n                <c8y-operation-details\n                  [bulkOperationType]=\"bulkOperationType\"\n                ></c8y-operation-details>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <c8y-stepper-buttons\n        class=\"d-block card-footer p-24 separator\"\n        [labels]=\"stepperButtonsLabels\"\n        [pending]=\"pendingStatus\"\n        [disabled]=\"operationDetailsForm?.invalid\"\n        (onCancel)=\"cancel()\"\n        (onCustom)=\"scheduleBulkOperation()\"\n      >\n      </c8y-stepper-buttons>\n    </cdk-step>\n  </c8y-stepper>\n</div>\n"
        })
    ], BulkOperationStepper);
    return BulkOperationStepper;
}());
export { BulkOperationStepper };
//# sourceMappingURL=data:application/json;base64,