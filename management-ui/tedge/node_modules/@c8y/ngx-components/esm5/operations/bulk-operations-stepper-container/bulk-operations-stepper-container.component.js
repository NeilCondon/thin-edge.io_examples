import * as tslib_1 from "tslib";
import { Component, OnInit, ViewContainerRef, ViewChild, ComponentFactoryResolver, ChangeDetectorRef } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
var BulkOperationsStepperContainerComponent = /** @class */ (function () {
    function BulkOperationsStepperContainerComponent(activatedRoute, bulkOpsService, resolver, changeDetector) {
        this.activatedRoute = activatedRoute;
        this.bulkOpsService = bulkOpsService;
        this.resolver = resolver;
        this.changeDetector = changeDetector;
    }
    BulkOperationsStepperContainerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.activatedRoute.params.subscribe(function (params) {
            if (params && params.type) {
                _this.bulkOperationType = params.type;
                _this.component = _this.bulkOpsService
                    .getBulkTypes()
                    .find(function (element) { return element.path.includes(_this.bulkOperationType); }).component;
                _this.changeDetector.detectChanges();
                _this.createComponent(_this.component);
            }
        });
    };
    BulkOperationsStepperContainerComponent.prototype.createComponent = function (component) {
        if (component) {
            var factory = this.resolver.resolveComponentFactory(component);
            this.container.createComponent(factory);
        }
    };
    BulkOperationsStepperContainerComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: BulkOperationsService },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef }
    ]; };
    tslib_1.__decorate([
        ViewChild('container', { static: false, read: ViewContainerRef })
    ], BulkOperationsStepperContainerComponent.prototype, "container", void 0);
    BulkOperationsStepperContainerComponent = tslib_1.__decorate([
        Component({
            selector: 'bulk-operations-stepper-container',
            template: "<c8y-title>{{ 'New bulk operation' | translate }}</c8y-title>\n<div class=\"card card--grid--fullpage\">\n  <div class=\"d-contents\">\n    <template #container></template>\n  </div>\n</div>\n"
        })
    ], BulkOperationsStepperContainerComponent);
    return BulkOperationsStepperContainerComponent;
}());
export { BulkOperationsStepperContainerComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVsay1vcGVyYXRpb25zLXN0ZXBwZXItY29udGFpbmVyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXIvIiwic291cmNlcyI6WyJidWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULE1BQU0sRUFDTixnQkFBZ0IsRUFDaEIsU0FBUyxFQUNULHdCQUF3QixFQUN4QixpQkFBaUIsRUFDbEIsTUFBTSxlQUFlLENBQUM7QUFDdkIsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBTS9GO0lBS0UsaURBQ1UsY0FBOEIsRUFDOUIsY0FBcUMsRUFDckMsUUFBa0MsRUFDbEMsY0FBaUM7UUFIakMsbUJBQWMsR0FBZCxjQUFjLENBQWdCO1FBQzlCLG1CQUFjLEdBQWQsY0FBYyxDQUF1QjtRQUNyQyxhQUFRLEdBQVIsUUFBUSxDQUEwQjtRQUNsQyxtQkFBYyxHQUFkLGNBQWMsQ0FBbUI7SUFDeEMsQ0FBQztJQUVKLDBEQUFRLEdBQVI7UUFBQSxpQkFhQztRQVpDLElBQUksQ0FBQyxjQUFjLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxVQUFBLE1BQU07WUFDekMsSUFBSSxNQUFNLElBQUksTUFBTSxDQUFDLElBQUksRUFBRTtnQkFDekIsS0FBSSxDQUFDLGlCQUFpQixHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUM7Z0JBRXJDLEtBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSSxDQUFDLGNBQWM7cUJBQ2pDLFlBQVksRUFBRTtxQkFDZCxJQUFJLENBQUMsVUFBQSxPQUFPLElBQUksT0FBQSxPQUFPLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsaUJBQWlCLENBQUMsRUFBN0MsQ0FBNkMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztnQkFFNUUsS0FBSSxDQUFDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQztnQkFDcEMsS0FBSSxDQUFDLGVBQWUsQ0FBQyxLQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7YUFDdEM7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxpRUFBZSxHQUF2QixVQUF3QixTQUFTO1FBQy9CLElBQUksU0FBUyxFQUFFO1lBQ2IsSUFBTSxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyx1QkFBdUIsQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUNqRSxJQUFJLENBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUN6QztJQUNILENBQUM7O2dCQTFCeUIsY0FBYztnQkFDZCxxQkFBcUI7Z0JBQzNCLHdCQUF3QjtnQkFDbEIsaUJBQWlCOztJQVJ3QjtRQUFsRSxTQUFTLENBQUMsV0FBVyxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsZ0JBQWdCLEVBQUUsQ0FBQzs4RUFBVztJQURsRSx1Q0FBdUM7UUFKbkQsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLG1DQUFtQztZQUM3Qyw0TUFBK0Q7U0FDaEUsQ0FBQztPQUNXLHVDQUF1QyxDQWlDbkQ7SUFBRCw4Q0FBQztDQUFBLEFBakNELElBaUNDO1NBakNZLHVDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgT25Jbml0LFxuICBWaWV3Q29udGFpbmVyUmVmLFxuICBWaWV3Q2hpbGQsXG4gIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcbiAgQ2hhbmdlRGV0ZWN0b3JSZWZcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBBY3RpdmF0ZWRSb3V0ZSB9IGZyb20gJ0Bhbmd1bGFyL3JvdXRlcic7XG5pbXBvcnQgeyBCdWxrT3BlcmF0aW9uc1NlcnZpY2UgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdidWxrLW9wZXJhdGlvbnMtc3RlcHBlci1jb250YWluZXInLFxuICB0ZW1wbGF0ZVVybDogJ2J1bGstb3BlcmF0aW9ucy1zdGVwcGVyLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgQnVsa09wZXJhdGlvbnNTdGVwcGVyQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcbiAgQFZpZXdDaGlsZCgnY29udGFpbmVyJywgeyBzdGF0aWM6IGZhbHNlLCByZWFkOiBWaWV3Q29udGFpbmVyUmVmIH0pIGNvbnRhaW5lcjtcbiAgYnVsa09wZXJhdGlvblR5cGU6IHN0cmluZztcblxuICBwcml2YXRlIGNvbXBvbmVudDogYW55O1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGFjdGl2YXRlZFJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICBwcml2YXRlIGJ1bGtPcHNTZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSByZXNvbHZlcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxuICAgIHByaXZhdGUgY2hhbmdlRGV0ZWN0b3I6IENoYW5nZURldGVjdG9yUmVmXG4gICkge31cblxuICBuZ09uSW5pdCgpIHtcbiAgICB0aGlzLmFjdGl2YXRlZFJvdXRlLnBhcmFtcy5zdWJzY3JpYmUocGFyYW1zID0+IHtcbiAgICAgIGlmIChwYXJhbXMgJiYgcGFyYW1zLnR5cGUpIHtcbiAgICAgICAgdGhpcy5idWxrT3BlcmF0aW9uVHlwZSA9IHBhcmFtcy50eXBlO1xuXG4gICAgICAgIHRoaXMuY29tcG9uZW50ID0gdGhpcy5idWxrT3BzU2VydmljZVxuICAgICAgICAgIC5nZXRCdWxrVHlwZXMoKVxuICAgICAgICAgIC5maW5kKGVsZW1lbnQgPT4gZWxlbWVudC5wYXRoLmluY2x1ZGVzKHRoaXMuYnVsa09wZXJhdGlvblR5cGUpKS5jb21wb25lbnQ7XG5cbiAgICAgICAgdGhpcy5jaGFuZ2VEZXRlY3Rvci5kZXRlY3RDaGFuZ2VzKCk7XG4gICAgICAgIHRoaXMuY3JlYXRlQ29tcG9uZW50KHRoaXMuY29tcG9uZW50KTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIHByaXZhdGUgY3JlYXRlQ29tcG9uZW50KGNvbXBvbmVudCkge1xuICAgIGlmIChjb21wb25lbnQpIHtcbiAgICAgIGNvbnN0IGZhY3RvcnkgPSB0aGlzLnJlc29sdmVyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KGNvbXBvbmVudCk7XG4gICAgICB0aGlzLmNvbnRhaW5lci5jcmVhdGVDb21wb25lbnQoZmFjdG9yeSk7XG4gICAgfVxuICB9XG59XG4iXX0=