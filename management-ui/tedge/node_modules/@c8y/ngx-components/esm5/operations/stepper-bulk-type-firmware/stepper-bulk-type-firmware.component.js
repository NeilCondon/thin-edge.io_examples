import * as tslib_1 from "tslib";
import { Component } from '@angular/core';
import { gettext } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { get } from 'lodash-es';
import { BehaviorSubject } from 'rxjs';
import { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';
import { BulkOperationsService, OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';
var StepperBulkTypeFirmwareComponent = /** @class */ (function (_super) {
    tslib_1.__extends(StepperBulkTypeFirmwareComponent, _super);
    function StepperBulkTypeFirmwareComponent(bulkOperationService, translate) {
        var _this = _super.call(this) || this;
        _this.bulkOperationService = bulkOperationService;
        _this.translate = translate;
        _this.descriptionTemplate = gettext('{{ name }} (version {{ version }})');
        _this.textFilter$ = new BehaviorSubject('');
        _this.stepData = {
            firmware: undefined,
            versionOrPatch: undefined
        };
        return _this;
    }
    StepperBulkTypeFirmwareComponent.prototype.goToVersionOrPatchStep = function (_a) {
        var stepper = _a.stepper;
        var selectedFirmware = this.stepData.firmware;
        this.bulkOperationService.setFirmwareId(selectedFirmware.id);
        this.deviceTypes = (selectedFirmware.c8y_Filter || {}).type;
        stepper.next();
    };
    StepperBulkTypeFirmwareComponent.prototype.onVersionOrPatchSelected = function (versionOrPatch) {
        this.stepData.versionOrPatch = versionOrPatch;
    };
    StepperBulkTypeFirmwareComponent.prototype.onFirmwareSelected = function (fw) {
        this.stepData.firmware = fw;
    };
    StepperBulkTypeFirmwareComponent.prototype.ngOnDestroy = function () {
        if (this.subscription) {
            this.subscription.unsubscribe();
        }
    };
    StepperBulkTypeFirmwareComponent.prototype.retrieveOperationPrototype = function () {
        var selectedFirmware = this.stepData.firmware;
        var selectedVersionOrPatch = this.stepData.versionOrPatch;
        if (!selectedFirmware || !selectedVersionOrPatch) {
            return;
        }
        var firmware = {
            name: selectedFirmware.name,
            version: selectedVersionOrPatch.c8y_Firmware.version,
            url: selectedVersionOrPatch.c8y_Firmware.url
        };
        if (selectedVersionOrPatch.c8y_Patch) {
            firmware.isPatch = true;
            firmware.dependency = selectedVersionOrPatch.c8y_Patch.dependency;
        }
        var name = selectedFirmware.name;
        var version = selectedVersionOrPatch.c8y_Firmware.version;
        var description = "Update firmware to: " + name + " (version: " + version + ").";
        return {
            name: gettext('Firmware update'),
            description: this.translate.instant(this.descriptionTemplate, {
                name: get(this.stepData, 'firmware.name'),
                version: get(this.stepData, 'versionOrPatch.c8y_Firmware.version')
            }),
            prototype: {
                description: description,
                c8y_Firmware: firmware
            }
        };
    };
    StepperBulkTypeFirmwareComponent.prototype.onSelectionChange = function (event) {
        this.textFilter$.next('');
        _super.prototype.onSelectionChange.call(this, event);
    };
    StepperBulkTypeFirmwareComponent.ctorParameters = function () { return [
        { type: BulkOperationsService },
        { type: TranslateService }
    ]; };
    StepperBulkTypeFirmwareComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-stepper-firmware',
            template: "<c8y-bulk-operation-stepper>\n  <ng-container\n    *customStep=\"\n      'Select firmware' | translate;\n      completed: !!stepData?.firmware;\n      buttonsDisabled: !stepData?.firmware;\n      onNext: goToVersionOrPatchStep.bind(this)\n    \"\n  >\n    <c8y-select-firmware-step\n      [selected]=\"stepData?.firmware\"\n      (firmware)=\"onFirmwareSelected($event)\"\n      class=\"d-contents\"\n    ></c8y-select-firmware-step\n  ></ng-container>\n  <ng-container\n    *customStep=\"\n      'Select version or patch' | translate;\n      completed: !!stepData?.versionOrPatch;\n      buttonsDisabled: !stepData?.versionOrPatch\n    \"\n  >\n    <div class=\"card-block p-t-0 flex-no-shrink separator-bottom col-xs-12\">\n      <div class=\"row\">\n        <div class=\"col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n          <h4 class=\"text-center m-b-16 text-gray\" translate>\n            Select version or patch\n          </h4>\n          <p class=\"text-center p-b-8 text-truncate\">\n            <strong [title]=\"stepData?.firmware?.name\">{{ stepData?.firmware?.name }}</strong\n            ><br />\n            <small [title]=\"stepData?.firmware?.description\">{{\n              stepData?.firmware?.description\n            }}</small>\n          </p>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-xs-12 flex-grow no-gutter\">\n      <div class=\"card-inner-scroll fit-h\">\n        <div class=\"card-block p-t-0 p-b-0\">\n          <c8y-version-or-patch-step\n            [selected]=\"stepData?.versionOrPatch\"\n            (versionOrPatch)=\"onVersionOrPatchSelected($event)\">\n          </c8y-version-or-patch-step>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</c8y-bulk-operation-stepper>\n"
        })
    ], StepperBulkTypeFirmwareComponent);
    return StepperBulkTypeFirmwareComponent;
}(BaseStepperComponent));
export { StepperBulkTypeFirmwareComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL3N0ZXBwZXItYnVsay10eXBlLWZpcm13YXJlLyIsInNvdXJjZXMiOlsic3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxPQUFPLEVBQUUsU0FBUyxFQUFhLE1BQU0sZUFBZSxDQUFDO0FBRXJELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hDLE9BQU8sRUFBRSxlQUFlLEVBQWdCLE1BQU0sTUFBTSxDQUFDO0FBQ3JELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQzdGLE9BQU8sRUFDTCxxQkFBcUIsRUFDckIsZ0JBQWdCLEVBQ2pCLE1BQU0sd0RBQXdELENBQUM7QUFNaEU7SUFBc0QsNERBQW9CO0lBZXhFLDBDQUNVLG9CQUEyQyxFQUMzQyxTQUEyQjtRQUZyQyxZQUlFLGlCQUFPLFNBQ1I7UUFKUywwQkFBb0IsR0FBcEIsb0JBQW9CLENBQXVCO1FBQzNDLGVBQVMsR0FBVCxTQUFTLENBQWtCO1FBaEI1Qix5QkFBbUIsR0FBVyxPQUFPLENBQUMsb0NBQW9DLENBQUMsQ0FBQztRQUVyRixpQkFBVyxHQUE0QixJQUFJLGVBQWUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUUvRCxjQUFRLEdBQWlFO1lBQ3ZFLFFBQVEsRUFBRSxTQUFTO1lBQ25CLGNBQWMsRUFBRSxTQUFTO1NBQzFCLENBQUM7O0lBWUYsQ0FBQztJQUVELGlFQUFzQixHQUF0QixVQUF1QixFQUFXO1lBQVQsb0JBQU87UUFDOUIsSUFBTSxnQkFBZ0IsR0FB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bSAnQGFuZ3VsYXIvY2RrL3N0ZXBwZXInO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0LCBJT3BlcmF0aW9uIH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHsgZ2V0dGV4dCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgZ2V0IH0gZnJvbSAnbG9kYXNoLWVzJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCwgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBCYXNlU3RlcHBlckNvbXBvbmVudCB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvb3BlcmF0aW9ucy9idWxrLW9wZXJhdGlvbi1zdGVwcGVyJztcbmltcG9ydCB7XG4gIEJ1bGtPcGVyYXRpb25zU2VydmljZSxcbiAgT3BlcmF0aW9uRGV0YWlsc1xufSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvYnVsay1vcGVyYXRpb25zLXNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjOHktc3RlcHBlci1maXJtd2FyZScsXG4gIHRlbXBsYXRlVXJsOiAnc3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFN0ZXBwZXJCdWxrVHlwZUZpcm13YXJlQ29tcG9uZW50IGV4dGVuZHMgQmFzZVN0ZXBwZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICByZWFkb25seSBkZXNjcmlwdGlvblRlbXBsYXRlOiBzdHJpbmcgPSBnZXR0ZXh0KCd7eyBuYW1lIH19ICh2ZXJzaW9uIHt7IHZlcnNpb24gfX0pJyk7XG5cbiAgdGV4dEZpbHRlciQ6IEJlaGF2aW9yU3ViamVjdDxzdHJpbmc+ID0gbmV3IEJlaGF2aW9yU3ViamVjdCgnJyk7XG5cbiAgc3RlcERhdGE6IHsgZmlybXdhcmU6IElNYW5hZ2VkT2JqZWN0OyB2ZXJzaW9uT3JQYXRjaDogSU1hbmFnZWRPYmplY3QgfSA9IHtcbiAgICBmaXJtd2FyZTogdW5kZWZpbmVkLFxuICAgIHZlcnNpb25PclBhdGNoOiB1bmRlZmluZWRcbiAgfTtcblxuICBzZWxlY3RlZEZpcm13YXJlOiBJTWFuYWdlZE9iamVjdDtcbiAgc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaDogSU1hbmFnZWRPYmplY3Q7XG5cbiAgcHJpdmF0ZSBzdWJzY3JpcHRpb246IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGJ1bGtPcGVyYXRpb25TZXJ2aWNlOiBCdWxrT3BlcmF0aW9uc1NlcnZpY2UsXG4gICAgcHJpdmF0ZSB0cmFuc2xhdGU6IFRyYW5zbGF0ZVNlcnZpY2VcbiAgKSB7XG4gICAgc3VwZXIoKTtcbiAgfVxuXG4gIGdvVG9WZXJzaW9uT3JQYXRjaFN0ZXAoeyBzdGVwcGVyIH0pIHtcbiAgICBjb25zdCBzZWxlY3RlZEZpcm13YXJlID0gdGhpcy5zdGVwRGF0YS5maXJtd2FyZTtcbiAgICB0aGlzLmJ1bGtPcGVyYXRpb25TZXJ2aWNlLnNldEZpcm13YXJlSWQoc2VsZWN0ZWRGaXJtd2FyZS5pZCk7XG4gICAgdGhpcy5kZXZpY2VUeXBlcyA9IChzZWxlY3RlZEZpcm13YXJlLmM4eV9GaWx0ZXIgfHwge30pLnR5cGU7XG4gICAgc3RlcHBlci5uZXh0KCk7XG4gIH1cblxuICBvblZlcnNpb25PclBhdGNoU2VsZWN0ZWQodmVyc2lvbk9yUGF0Y2g6IElNYW5hZ2VkT2JqZWN0KSB7XG4gICAgdGhpcy5zdGVwRGF0YS52ZXJzaW9uT3JQYXRjaCA9IHZlcnNpb25PclBhdGNoO1xuICB9XG5cbiAgb25GaXJtd2FyZVNlbGVjdGVkKGZ3OiBJTWFuYWdlZE9iamVjdCkge1xuICAgIHRoaXMuc3RlcERhdGEuZmlybXdhcmUgPSBmdztcbiAgfVxuXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikge1xuICAgICAgdGhpcy5zdWJzY3JpcHRpb24udW5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cblxuICBwcm90ZWN0ZWQgcmV0cmlldmVPcGVyYXRpb25Qcm90b3R5cGUoKTogT3BlcmF0aW9uRGV0YWlscyB7XG4gICAgY29uc3Qgc2VsZWN0ZWRGaXJtd2FyZSA9IHRoaXMuc3RlcERhdGEuZmlybXdhcmU7XG4gICAgY29uc3Qgc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaCA9IHRoaXMuc3RlcERhdGEudmVyc2lvbk9yUGF0Y2g7XG5cbiAgICBpZiAoIXNlbGVjdGVkRmlybXdhcmUgfHwgIXNlbGVjdGVkVmVyc2lvbk9yUGF0Y2gpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBmaXJtd2FyZTogSU1hbmFnZWRPYmplY3QgPSAoe1xuICAgICAgbmFtZTogc2VsZWN0ZWRGaXJtd2FyZS5uYW1lLFxuICAgICAgdmVyc2lvbjogc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaC5jOHlfRmlybXdhcmUudmVyc2lvbixcbiAgICAgIHVybDogc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaC5jOHlfRmlybXdhcmUudXJsXG4gICAgfSBhcyB1bmtub3duKSBhcyBJTWFuYWdlZE9iamVjdDtcblxuICAgIGlmIChzZWxlY3RlZFZlcnNpb25PclBhdGNoLmM4eV9QYXRjaCkge1xuICAgICAgZmlybXdhcmUuaXNQYXRjaCA9IHRydWU7XG4gICAgICBmaXJtd2FyZS5kZXBlbmRlbmN5ID0gc2VsZWN0ZWRWZXJzaW9uT3JQYXRjaC5jOHlfUGF0Y2guZGVwZW5kZW5jeTtcbiAgICB9XG5cbiAgICBjb25zdCBuYW1lID0gc2VsZWN0ZWRGaXJtd2FyZS5uYW1lO1xuICAgIGNvbnN0IHZlcnNpb24gPSBzZWxlY3RlZFZlcnNpb25PclBhdGNoLmM4eV9GaXJtd2FyZS52ZXJzaW9uO1xuICAgIGNvbnN0IGRlc2NyaXB0aW9uOiBzdHJpbmcgPSBgVXBkYXRlIGZpcm13YXJlIHRvOiAke25hbWV9ICh2ZXJzaW9uOiAke3ZlcnNpb259KS5gO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIG5hbWU6IGdldHRleHQoJ0Zpcm13YXJlIHVwZGF0ZScpLFxuICAgICAgZGVzY3JpcHRpb246IHRoaXMudHJhbnNsYXRlLmluc3RhbnQodGhpcy5kZXNjcmlwdGlvblRlbXBsYXRlLCB7XG4gICAgICAgIG5hbWU6IGdldCh0aGlzLnN0ZXBEYXRhLCAnZmlybXdhcmUubmFtZScpLFxuICAgICAgICB2ZXJzaW9uOiBnZXQodGhpcy5zdGVwRGF0YSwgJ3ZlcnNpb25PclBhdGNoLmM4eV9GaXJtd2FyZS52ZXJzaW9uJylcbiAgICAgIH0pLFxuICAgICAgcHJvdG90eXBlOiAoe1xuICAgICAgICBkZXNjcmlwdGlvbixcbiAgICAgICAgYzh5X0Zpcm13YXJlOiBmaXJtd2FyZVxuICAgICAgfSBhcyB1bmtub3duKSBhcyBJT3BlcmF0aW9uXG4gICAgfTtcbiAgfVxuXG4gIHByb3RlY3RlZCBvblNlbGVjdGlvbkNoYW5nZShldmVudDogU3RlcHBlclNlbGVjdGlvbkV2ZW50KSB7XG4gICAgdGhpcy50ZXh0RmlsdGVyJC5uZXh0KCcnKTtcbiAgICBzdXBlci5vblNlbGVjdGlvbkNoYW5nZShldmVudCk7XG4gIH1cbn1cbiJdfQ==