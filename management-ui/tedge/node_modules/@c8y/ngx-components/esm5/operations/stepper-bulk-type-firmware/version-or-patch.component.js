import * as tslib_1 from "tslib";
import { Component, Output, EventEmitter, Input } from '@angular/core';
import { of } from 'rxjs';
import { shareReplay, map, switchMap, distinctUntilKeyChanged, distinctUntilChanged, catchError, tap } from 'rxjs/operators';
import { IManagedObject, IResultList, InventoryService } from '@c8y/client';
import { memoize } from '@c8y/ngx-components';
import { RepositoryService, FirmwareBinary } from '@c8y/ngx-components/repository';
import { BulkOperationsService } from '@c8y/ngx-components/operations/bulk-operations-service';
import { property } from 'lodash-es';
var VersionOrPatchComponent = /** @class */ (function () {
    function VersionOrPatchComponent(repositoryService, inventoryService, bulkOpsService) {
        var _this = this;
        this.repositoryService = repositoryService;
        this.inventoryService = inventoryService;
        this.bulkOpsService = bulkOpsService;
        this.versionOrPatch = new EventEmitter();
        this.elementCount = 0;
        this.DD_LOW_COUNT = 10;
        this.firmware$ = this.bulkOpsService.firmwareId.pipe(distinctUntilChanged(), switchMap(function (id) { return _this.inventoryService.detail$(id).pipe(catchError(function (error) { return of(error); })); }), shareReplay(1));
        this.baseVersions$ = this.firmware$.pipe(distinctUntilKeyChanged('id'), switchMap(function (firmware) { return _this.repositoryService.listBaseVersions(firmware); }), tap(function (resp) {
            _this.elementCount = resp.data ? resp.data.length : 0;
        }), shareReplay(1));
        this.isLegacy$ = this.firmware$.pipe(map(function (firmware) { return _this.repositoryService.isLegacyEntry(firmware); }), shareReplay(1));
        this.expanded = {};
        this.DD_LOW_COUNT = this.bulkOpsService.DD_LOW_COUNT;
    }
    VersionOrPatchComponent.prototype.getBinaryName$ = function (binaryUrl) {
        return this.repositoryService.getBinaryName$(binaryUrl);
    };
    VersionOrPatchComponent.prototype.getBaseVersionAndPatches$ = function (baseVersion) {
        var _this = this;
        return this.firmware$.pipe(distinctUntilKeyChanged('id'), switchMap(function (firmware) {
            return _this.repositoryService.listBaseVersionAndPatches(firmware, baseVersion);
        }), shareReplay(1));
    };
    VersionOrPatchComponent.prototype.getPatchVersionsCount$ = function (baseVersion) {
        var _this = this;
        return this.firmware$.pipe(distinctUntilKeyChanged('id'), switchMap(function () { return _this.firmware$; }), switchMap(function (firmware) { return _this.repositoryService.getPatchVersionsCount$(firmware, baseVersion); }), shareReplay(1));
    };
    VersionOrPatchComponent.prototype.selectVersionOrPatch = function (selected, versionOrPatch) {
        if (selected) {
            this.versionOrPatch.emit(versionOrPatch);
        }
    };
    VersionOrPatchComponent.ctorParameters = function () { return [
        { type: RepositoryService },
        { type: InventoryService },
        { type: BulkOperationsService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], VersionOrPatchComponent.prototype, "selected", void 0);
    tslib_1.__decorate([
        Output()
    ], VersionOrPatchComponent.prototype, "versionOrPatch", void 0);
    tslib_1.__decorate([
        memoize()
    ], VersionOrPatchComponent.prototype, "getBinaryName$", null);
    tslib_1.__decorate([
        memoize(property('id'))
    ], VersionOrPatchComponent.prototype, "getBaseVersionAndPatches$", null);
    tslib_1.__decorate([
        memoize(property('id'))
    ], VersionOrPatchComponent.prototype, "getPatchVersionsCount$", null);
    VersionOrPatchComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-version-or-patch-step',
            template: "<c8y-list-group\n  class=\"m-b-16\"\n  [ngClass]=\"{ 'dd-low': elementCount <= DD_LOW_COUNT }\"\n  *ngIf=\"(baseVersions$ | async)?.data.length > 0\"\n>\n  <c8y-li *c8yFor=\"let baseVersion of baseVersions$ | async; let i = index; loadMore: 'auto'\">\n    <c8y-li-icon>\n      <i c8yIcon=\"c8y-firmware\"></i>\n    </c8y-li-icon>\n\n    <c8y-li-body class=\"content-flex-50\">\n      <div class=\"col-10\">\n        <p>{{ baseVersion.c8y_Firmware.version }}</p>\n      </div>\n      <div class=\"col-2\">\n        <span *ngIf=\"isLegacy$ | async\" class=\"label label-warning\">\n          {{ 'Legacy' | translate }}\n        </span>\n\n        <span *ngIf=\"!(isLegacy$ | async)\">\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) === null\">\n            <span class=\"label label-info\">\n              <i c8yIcon=\"circle-o-notch\" class=\"icon-spin\"></i>\n            </span>\n          </span>\n\n          <span *ngIf=\"(getPatchVersionsCount$(baseVersion) | async) !== null\">\n            <span [ngPlural]=\"getPatchVersionsCount$(baseVersion) | async\">\n              <ng-template ngPluralCase=\"=0\">\n                <span class=\"label label-default\"> <span translate>No patches</span></span>\n              </ng-template>\n              <ng-template ngPluralCase=\"=1\">\n                <span class=\"label label-info\">\n                  <span translate>1 patch</span>\n                </span>\n              </ng-template>\n              <ng-template ngPluralCase=\"other\">\n                <span class=\"label label-info\">\n                  <span\n                    ngNonBindable\n                    translate\n                    [translateParams]=\"{ count: getPatchVersionsCount$(baseVersion) | async }\"\n                    >{{ count }} patches</span\n                  ></span\n                >\n              </ng-template>\n            </span>\n          </span>\n        </span>\n      </div>\n    </c8y-li-body>\n\n    <c8y-li-collapse>\n      <c8y-list-group>\n        <c8y-li\n          *c8yFor=\"\n            let patchVersion of getBaseVersionAndPatches$(baseVersion) | async;\n            let i = index;\n            loadMore: 'auto'\n          \"\n        >\n          <c8y-li-radio\n            (onSelect)=\"selectVersionOrPatch($event, patchVersion)\"\n            [selected]=\"patchVersion === selected\"\n          ></c8y-li-radio>\n          <c8y-li-icon>\n            <i c8yIcon=\"c8y-firmware\"></i>\n          </c8y-li-icon>\n          <c8y-li-body class=\"content-flex-50\">\n            <div class=\"col-3\">\n              {{ patchVersion.c8y_Firmware.version }}\n            </div>\n            <div class=\"col-3\">\n              <span *ngIf=\"patchVersion.c8y_Patch; else version\" translate class=\"label label-info\"\n                >patch</span\n              >\n              <ng-template #version\n                ><span translate class=\"label label-primary\">version</span></ng-template\n              >\n            </div>\n            <div class=\"col-6 text-truncate\">\n              <span class=\"text-label-small m-r-4\" translate>\n                File\n              </span>\n              <span title=\"{{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\">\n                {{ getBinaryName$(patchVersion.c8y_Firmware.url) | async }}\n              </span>\n            </div>\n          </c8y-li-body>\n        </c8y-li>\n      </c8y-list-group>\n    </c8y-li-collapse>\n  </c8y-li>\n</c8y-list-group>\n"
        })
    ], VersionOrPatchComponent);
    return VersionOrPatchComponent;
}());
export { VersionOrPatchComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVyc2lvbi1vci1wYXRjaC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL29wZXJhdGlvbnMvc3RlcHBlci1idWxrLXR5cGUtZmlybXdhcmUvIiwic291cmNlcyI6WyJ2ZXJzaW9uLW9yLXBhdGNoLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN2RSxPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFDTCxXQUFXLEVBQ1gsR0FBRyxFQUNILFNBQVMsRUFDVCx1QkFBdUIsRUFDdkIsb0JBQW9CLEVBQ3BCLFVBQVUsRUFDVixHQUFHLEVBQ0osTUFBTSxnQkFBZ0IsQ0FBQztBQUN4QixPQUFPLEVBQUUsY0FBYyxFQUFFLFdBQVcsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUM1RSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDOUMsT0FBTyxFQUFFLGlCQUFpQixFQUFFLGNBQWMsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ25GLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLHdEQUF3RCxDQUFDO0FBQy9GLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFNckM7SUE2QkUsaUNBQ1UsaUJBQW9DLEVBQ3BDLGdCQUFrQyxFQUNsQyxjQUFxQztRQUgvQyxpQkFNQztRQUxTLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBbUI7UUFDcEMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFrQjtRQUNsQyxtQkFBYyxHQUFkLGNBQWMsQ0FBdUI7UUE5QnJDLG1CQUFjLEdBQWlDLElBQUksWUFBWSxFQUFrQixDQUFDO1FBRTVGLGlCQUFZLEdBQVcsQ0FBQyxDQUFDO1FBQ3pCLGlCQUFZLEdB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QUU7bUVBQW1GO0lBb0M1RjtRQURDLE9BQU8sRUFBRTtpRUFHVDtJQUdEO1FBREMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQzs0RUFTdkI7SUFHRDtRQURDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7eUVBUXZCO0lBN0RVLHVCQUF1QjtRQUpuQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsMkJBQTJCO1lBQ3JDLG84R0FBOEM7U0FDL0MsQ0FBQztPQUNXLHVCQUF1QixDQW9FbkM7SUFBRCw4QkFBQztDQUFBLEFBcEVELElBb0VDO1NBcEVZLHVCQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgc2hhcmVSZXBsYXksXG4gIG1hcCxcbiAgc3dpdGNoTWFwLFxuICBkaXN0aW5jdFVudGlsS2V5Q2hhbmdlZCxcbiAgZGlzdGluY3RVbnRpbENoYW5nZWQsXG4gIGNhdGNoRXJyb3IsXG4gIHRhcFxufSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBJTWFuYWdlZE9iamVjdCwgSVJlc3VsdExpc3QsIEludmVudG9yeVNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBtZW1vaXplIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cyc7XG5pbXBvcnQgeyBSZXBvc2l0b3J5U2VydmljZSwgRmlybXdhcmVCaW5hcnkgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzL3JlcG9zaXRvcnknO1xuaW1wb3J0IHsgQnVsa09wZXJhdGlvbnNTZXJ2aWNlIH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9vcGVyYXRpb25zL2J1bGstb3BlcmF0aW9ucy1zZXJ2aWNlJztcbmltcG9ydCB7IHByb3BlcnR5IH0gZnJvbSAnbG9kYXNoLWVzJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LXZlcnNpb24tb3ItcGF0Y2gtc3RlcCcsXG4gIHRlbXBsYXRlVXJsOiAndmVyc2lvbi1vci1wYXRjaC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgVmVyc2lvbk9yUGF0Y2hDb21wb25lbnQge1xuICBASW5wdXQoKSBzZWxlY3RlZDogSU1hbmFnZWRPYmplY3Q7XG4gIEBPdXRwdXQoKSB2ZXJzaW9uT3JQYXRjaDogRXZlbnRFbWl0dGVyPElNYW5hZ2VkT2JqZWN0PiA9IG5ldyBFdmVudEVtaXR0ZXI8SU1hbmFnZWRPYmplY3Q+KCk7XG5cbiAgZWxlbWVudENvdW50OiBudW1iZXIgPSAwO1xuICBERF9MT1dfQ09VTlQ6IG51bWJlciA9IDEwO1xuXG4gIGZpcm13YXJlJDogT2JzZXJ2YWJsZTxJTWFuYWdlZE9iamVjdD4gPSB0aGlzLmJ1bGtPcHNTZXJ2aWNlLmZpcm13YXJlSWQucGlwZShcbiAgICBkaXN0aW5jdFVudGlsQ2hhbmdlZCgpLFxuICAgIHN3aXRjaE1hcChpZCA9PiB0aGlzLmludmVudG9yeVNlcnZpY2UuZGV0YWlsJChpZCkucGlwZShjYXRjaEVycm9yKGVycm9yID0+IG9mKGVycm9yKSkpKSxcbiAgICBzaGFyZVJlcGxheSgxKVxuICApO1xuXG4gIGJhc2VWZXJzaW9ucyQ6IE9ic2VydmFibGU8SVJlc3VsdExpc3Q8SU1hbmFnZWRPYmplY3Q+PiA9IHRoaXMuZmlybXdhcmUkLnBpcGUoXG4gICAgZGlzdGluY3RVbnRpbEtleUNoYW5nZWQoJ2lkJyksXG4gICAgc3dpdGNoTWFwKGZpcm13YXJlID0+IHRoaXMucmVwb3NpdG9yeVNlcnZpY2UubGlzdEJhc2VWZXJzaW9ucyhmaXJtd2FyZSkpLFxuICAgIHRhcChyZXNwID0+IHtcbiAgICAgIHRoaXMuZWxlbWVudENvdW50ID0gcmVzcC5kYXRhID8gcmVzcC5kYXRhLmxlbmd0aCA6IDA7XG4gICAgfSksXG4gICAgc2hhcmVSZXBsYXkoMSlcbiAgKTtcblxuICBpc0xlZ2FjeSQ6IE9ic2VydmFibGU8Ym9vbGVhbj4gPSB0aGlzLmZpcm13YXJlJC5waXBlKFxuICAgIG1hcChmaXJtd2FyZSA9PiB0aGlzLnJlcG9zaXRvcnlTZXJ2aWNlLmlzTGVnYWN5RW50cnkoZmlybXdhcmUpKSxcbiAgICBzaGFyZVJlcGxheSgxKVxuICApO1xuXG4gIGV4cGFuZGVkOiB7IFtpZDogc3RyaW5nXTogYm9vbGVhbiB9ID0ge307XG5cbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZXBvc2l0b3J5U2VydmljZTogUmVwb3NpdG9yeVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBpbnZlbnRvcnlTZXJ2aWNlOiBJbnZlbnRvcnlTZXJ2aWNlLFxuICAgIHByaXZhdGUgYnVsa09wc1NlcnZpY2U6IEJ1bGtPcGVyYXRpb25zU2VydmljZVxuICApIHtcbiAgICB0aGlzLkREX0xPV19DT1VOVCA9IHRoaXMuYnVsa09wc1NlcnZpY2UuRERfTE9XX0NPVU5UO1xuICB9XG5cbiAgQG1lbW9pemUoKVxuICBnZXRCaW5hcnlOYW1lJChiaW5hcnlVcmwpIHtcbiAgICByZXR1cm4gdGhpcy5yZXBvc2l0b3J5U2VydmljZS5nZXRCaW5hcnlOYW1lJChiaW5hcnlVcmwpO1xuICB9XG5cbiAgQG1lbW9pemUocHJvcGVydHkoJ2lkJykpXG4gIGdldEJhc2VWZXJzaW9uQW5kUGF0Y2hlcyQoYmFzZVZlcnNpb24pIHtcbiAgICByZXR1cm4gdGhpcy5maXJtd2FyZSQucGlwZShcbiAgICAgIGRpc3RpbmN0VW50aWxLZXlDaGFuZ2VkKCdpZCcpLFxuICAgICAgc3dpdGNoTWFwKGZpcm13YXJlID0+XG4gICAgICAgIHRoaXMucmVwb3NpdG9yeVNlcnZpY2UubGlzdEJhc2VWZXJzaW9uQW5kUGF0Y2hlcyhmaXJtd2FyZSwgYmFzZVZlcnNpb24pXG4gICAgICApLFxuICAgICAgc2hhcmVSZXBsYXkoMSlcbiAgICApO1xuICB9XG5cbiAgQG1lbW9pemUocHJvcGVydHkoJ2lkJykpXG4gIGdldFBhdGNoVmVyc2lvbnNDb3VudCQoYmFzZVZlcnNpb246IEZpcm13YXJlQmluYXJ5KSB7XG4gICAgcmV0dXJuIHRoaXMuZmlybXdhcmUkLnBpcGUoXG4gICAgICBkaXN0aW5jdFVudGlsS2V5Q2hhbmdlZCgnaWQnKSxcbiAgICAgIHN3aXRjaE1hcCgoKSA9PiB0aGlzLmZpcm13YXJlJCksXG4gICAgICBzd2l0Y2hNYXAoZmlybXdhcmUgPT4gdGhpcy5yZXBvc2l0b3J5U2VydmljZS5nZXRQYXRjaFZlcnNpb25zQ291bnQkKGZpcm13YXJlLCBiYXNlVmVyc2lvbikpLFxuICAgICAgc2hhcmVSZXBsYXkoMSlcbiAgICApO1xuICB9XG5cbiAgc2VsZWN0VmVyc2lvbk9yUGF0Y2goc2VsZWN0ZWQ6IGJvb2xlYW4sIHZlcnNpb25PclBhdGNoOiBJTWFuYWdlZE9iamVjdCkge1xuICAgIGlmIChzZWxlY3RlZCkge1xuICAgICAgdGhpcy52ZXJzaW9uT3JQYXRjaC5lbWl0KHZlcnNpb25PclBhdGNoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==