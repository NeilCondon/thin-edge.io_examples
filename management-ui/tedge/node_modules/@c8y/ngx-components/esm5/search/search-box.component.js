import * as tslib_1 from "tslib";
import { Component, ViewChild } from '@angular/core';
import { Router } from '@angular/router';
import { IManagedObject, InventoryService, IResultList, Paging } from '@c8y/client';
import { TypeaheadComponent } from '@c8y/ngx-components';
import { DeviceGridService } from '@c8y/ngx-components/device-grid';
import { defer, empty, merge, of, pipe } from 'rxjs';
import { map, switchMap, tap } from 'rxjs/operators';
import { SearchService } from './search.service';
var SearchBoxComponent = /** @class */ (function () {
    function SearchBoxComponent(router, inventory, deviceGridService, searchService) {
        var _this = this;
        this.router = router;
        this.inventory = inventory;
        this.deviceGridService = deviceGridService;
        this.searchService = searchService;
        this.term = '';
        this.filterPipe = pipe(map(function (data) {
            return _this.searchService.filterOnlyAssets(data);
        }));
        this.recentSearchResults = [];
        this.isLoading = false;
        this.noMatch = false;
        this.RECENT_SEARCH_STORAGE_KEY = 'recent_search_view';
        this.MAX_RECENT_SEARCH_RESULTS = 5;
        this.DEFAULT_FILTER = {
            withTotalPages: true,
            pageSize: 5,
            withChildren: false
        };
        this.KEYCODE_ENTER = 13;
        this.KEYCODE_ESC = 27;
    }
    SearchBoxComponent.prototype.ngOnInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var recentSearchIds, data;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        recentSearchIds = JSON.parse(localStorage.getItem(this.RECENT_SEARCH_STORAGE_KEY));
                        if (!(recentSearchIds && recentSearchIds.length > 0)) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.inventory.list({ ids: recentSearchIds.join(',') })];
                    case 1:
                        data = (_a.sent()).data;
                        this.recentSearchResults = data;
                        this.recentlyRegisteredResults$ = defer(function () {
                            return _this.inventory.list(tslib_1.__assign({ q: '$orderby=creationTime desc' }, _this.DEFAULT_FILTER));
                        });
                        _a.label = 2;
                    case 2: return [2 /*return*/];
                }
            });
        });
    };
    SearchBoxComponent.prototype.onOpenChange = function (isOpen) {
        var _this = this;
        if (isOpen) {
            // needs to request an animation frame as
            // otherwise the typeahead is undefined
            requestAnimationFrame(function () {
                _this.subscribeOnSearch();
                _this.typeahead.dropdown.show();
                _this.typeahead.searchControl.nativeElement.focus();
            });
        }
    };
    SearchBoxComponent.prototype.open = function (event, mo) {
        event.stopPropagation();
        var isAlreadyRecent = this.recentSearchResults.find(function (_a) {
            var id = _a.id;
            return id === mo.id;
        });
        if (!isAlreadyRecent) {
            this.recentSearchResults.unshift(mo);
            this.recentSearchResults = this.recentSearchResults.slice(0, this.MAX_RECENT_SEARCH_RESULTS);
        }
        var recentSearchIds = this.recentSearchResults.map(function (_a) {
            var id = _a.id;
            return id;
        });
        localStorage.setItem(this.RECENT_SEARCH_STORAGE_KEY, JSON.stringify(recentSearchIds));
        this.router.navigateByUrl(this.deviceGridService.getHref(mo, '/'));
        this.dropdown.hide();
    };
    SearchBoxComponent.prototype.reset = function () {
        this.typeahead.onSearch.emit('');
        this.selected = undefined;
        this.typeahead.searchControl.nativeElement.focus();
    };
    SearchBoxComponent.prototype.keyDown = function (event) {
        var keyCode = event.keyCode;
        if (keyCode === this.KEYCODE_ENTER) {
            // enter hit can be faster then typeahead debounce,
            // therefore we take the term from the DOM element
            // itself:
            var searchTerm = event.target.value;
            this.navigate(['/assetsearch'], { queryParams: { search: searchTerm } });
            this.dropdown.hide();
        }
        else if (keyCode === this.KEYCODE_ESC) {
            if (this.term === '') {
                this.dropdown.hide();
            }
            this.reset();
        }
    };
    SearchBoxComponent.prototype.filter = function (on) {
        this.navigate(['/assetsearch'], { queryParams: { filter: on } });
        this.dropdown.hide();
    };
    SearchBoxComponent.prototype.openSearch = function () {
        this.router.navigateByUrl('/assetsearch');
        this.dropdown.hide();
    };
    SearchBoxComponent.prototype.subscribeOnSearch = function () {
        var _this = this;
        if (!this.results$) {
            this.results$ = this.typeahead.onSearch.pipe(tap(function (term) { return _this.onTypingStarted(term); }), switchMap(function (term) { return _this.mergeRequest(term); }));
        }
    };
    SearchBoxComponent.prototype.navigate = function (commands, extras) {
        var _this = this;
        this.router
            .navigateByUrl('/', { skipLocationChange: true })
            .then(function () { return _this.router.navigate(commands, extras); });
    };
    SearchBoxComponent.prototype.mergeRequest = function (term) {
        var _this = this;
        return merge(of({ data: [] }), this.queryInventoryService(term).pipe(tap(function (_a) {
            var data = _a.data, paging = _a.paging;
            return _this.onLoadingDone(data, paging);
        })));
    };
    SearchBoxComponent.prototype.queryInventoryService = function (term) {
        var _this = this;
        if (term) {
            return defer(function () { return _this.searchService.search(term); });
        }
        return empty();
    };
    SearchBoxComponent.prototype.onLoadingDone = function (data, paging) {
        this.isLoading = false;
        this.noMatch =
            paging && paging.nextPage === null && this.searchService.filterOnlyAssets(data).length === 0;
    };
    SearchBoxComponent.prototype.onTypingStarted = function (term) {
        this.noMatch = false;
        this.term = term;
        this.isLoading = term.length > 0;
    };
    SearchBoxComponent.ctorParameters = function () { return [
        { type: Router },
        { type: InventoryService },
        { type: DeviceGridService },
        { type: SearchService }
    ]; };
    tslib_1.__decorate([
        ViewChild(TypeaheadComponent, { static: false })
    ], SearchBoxComponent.prototype, "typeahead", void 0);
    tslib_1.__decorate([
        ViewChild('dropdown', { static: false })
    ], SearchBoxComponent.prototype, "dropdown", void 0);
    SearchBoxComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-search-box',
            template: "<div\n  class=\"dropdown\"\n  dropdown\n  #dropdown=\"bs-dropdown\"\n  [insideClick]=\"true\"\n  (isOpenChange)=\"onOpenChange($event)\"\n>\n  <button\n    class=\"main-header-button dropdown-toggle c8y-dropdown\"\n    dropdownToggle\n    type=\"button\"\n    title=\"Search\"\n    aria-controls=\"searchDropdown\"\n  >\n    <i c8yIcon=\"search\" class=\"icon-2x\"></i>\n  </button>\n\n  <div\n    id=\"searchDropdown\"\n    *dropdownMenu\n    class=\"search-header-menu dropdown-menu dropdown-menu-center\"\n  >\n    <form novalidate #searchForm=\"ngForm\" class=\"c8y-search-form\">\n      <c8y-typeahead\n        [(ngModel)]=\"selected\"\n        placeholder=\"{{ 'Search for groups or assets\u2026' | translate }}\"\n        (keydown)=\"keyDown($event)\"\n        (onIconClick)=\"reset()\"\n        [icon]=\"term ? 'times' : 'search'\"\n        [allowFreeEntries]=\"false\"\n        name=\"selected\"\n      >\n        <!-- filter buttons -->\n        <c8y-li *ngIf=\"term.length !== 0\" class=\"p-l-16 p-r-16\">\n          <div class=\"flex-row\">\n            <p class=\"m-r-4 text-muted\">\n              <em translate>Searching by exact match. Click for other search options:</em>\n            </p>\n            <div class=\"btn-group btn-group-sm\">\n              <button\n                class=\"btn btn-default\"\n                title=\"{{ 'Starts with' | translate }}\"\n                (click)=\"filter(term + '*')\"\n              >\n                {{ 'Starts with' | translate }}\n              </button>\n              <button\n                class=\"btn btn-default\"\n                title=\"{{ 'Contains' | translate }}\"\n                (click)=\"filter('*' + term + '*')\"\n              >\n                {{ 'Contains' | translate }}\n              </button>\n              <button\n                class=\"btn btn-default\"\n                title=\"{{ 'Ends with' | translate }}\"\n                (click)=\"filter('*' + term)\"\n              >\n                {{ 'Ends with' | translate }}\n              </button>\n            </div>\n          </div>\n        </c8y-li>\n\n        <!-- Recent search -->\n        <c8y-li\n          *ngIf=\"term.length === 0 && recentSearchResults.length > 0\"\n          [selectable]=\"false\"\n          class=\"p-l-24 p-r-24\"\n        >\n          <div class=\"legend form-block\">\n            <span translate>Recent search results</span>\n          </div>\n        </c8y-li>\n        <c8y-li\n          *ngFor=\"let result of term.length === 0 ? recentSearchResults : []\"\n          class=\"c8y-list__item--link m-l-16 m-r-16\"\n          (click)=\"open($event, result)\"\n        >\n          <c8y-li-icon>\n            <device-status [mo]=\"result\" *ngIf=\"!result.c8y_IsDeviceGroup\"></device-status>\n            <i\n              [c8yIcon]=\"'c8y-group-open'\"\n              class=\"c8y-icon-duocolor\"\n              *ngIf=\"result.c8y_IsDeviceGroup\"\n            ></i>\n          </c8y-li-icon>\n          {{ result.name || '--' }}\n        </c8y-li>\n\n        <!-- Recently registered devices -->\n        <c8y-li\n          *ngIf=\"term.length === 0 && (recentlyRegisteredResults$ | async)?.data?.length > 0\"\n          class=\"p-l-24 p-r-24\"\n          [selectable]=\"false\"\n        >\n          <div class=\"legend form-block\">\n            <span translate>Recently registered devices</span>\n          </div>\n        </c8y-li>\n        <c8y-li\n          *c8yFor=\"\n            let result of term.length === 0 ? recentlyRegisteredResults$ : { data: [] };\n            loadMore: 'none';\n            pipe: filterPipe\n          \"\n          class=\"c8y-list__item--link m-l-16 m-r-16\"\n          (click)=\"open($event, result)\"\n        >\n          <c8y-li-icon>\n            <device-status [mo]=\"result\" *ngIf=\"!result.c8y_IsDeviceGroup\"></device-status>\n            <i\n              [c8yIcon]=\"'c8y-group-open'\"\n              class=\"c8y-icon-duocolor\"\n              *ngIf=\"result.c8y_IsDeviceGroup\"\n            ></i>\n          </c8y-li-icon>\n          {{ result.name || '--' }}\n        </c8y-li>\n\n        <!-- Search results -->\n        <c8y-li *ngIf=\"term.length !== 0\" class=\"p-l-24 p-r-24\" [selectable]=\"false\">\n          <div class=\"legend form-block\">\n            <span translate>Search results</span>\n          </div>\n        </c8y-li>\n        <c8y-li\n          *c8yFor=\"\n            let result of results$;\n            loadMore: 'auto';\n            pipe: filterPipe;\n            notFound: notFoundTemplate;\n            loadingTemplate: loading;\n            loadNextLabel: 'Find more\u2026'\n          \"\n          class=\"c8y-list__item--link  m-l-16 m-r-16\"\n          (click)=\"open($event, result)\"\n        >\n          <c8y-li-icon>\n            <device-status [mo]=\"result\" *ngIf=\"!result.c8y_IsDeviceGroup\"></device-status>\n            <i\n              [c8yIcon]=\"'c8y-group-open'\"\n              class=\"c8y-icon-duocolor\"\n              *ngIf=\"result.c8y_IsDeviceGroup\"\n            ></i>\n          </c8y-li-icon>\n          {{ result.name || '--' }}\n        </c8y-li>\n\n        <!-- No search results found entry -->\n        <ng-template #notFoundTemplate>\n          <c8y-li *ngIf=\"noMatch\" class=\"p-16 c8y-empty-state\" [selectable]=\"false\">\n            <c8y-li-icon [icon]=\"'search'\"></c8y-li-icon>\n            <p><strong translate>No match found.</strong></p>\n            <small translate>\n              Use a filter or go to the asset data table to show all devices and groups.\n            </small>\n          </c8y-li>\n        </ng-template>\n\n        <!-- loading bar first entries -->\n        <c8y-li *ngIf=\"isLoading\" class=\"p-t-32 p-b-0 p-relative\">\n          <div class=\"spinner\" style=\"right:0;\">\n            <div class=\"rect1\"></div>\n            <div class=\"rect2\"></div>\n            <div class=\"rect3\"></div>\n            <div class=\"rect4\"></div>\n            <div class=\"rect5\"></div>\n          </div>\n        </c8y-li>\n\n        <!-- loading bar for loading more entries (inventory roles) -->\n        <ng-template #loading>\n          <c8y-li class=\"text-center p-t-32 p-b-0 p-relative\">\n            <div class=\"spinner\" style=\"right:0;\">\n              <div class=\"rect1\"></div>\n              <div class=\"rect2\"></div>\n              <div class=\"rect3\"></div>\n              <div class=\"rect4\"></div>\n              <div class=\"rect5\"></div>\n            </div>\n          </c8y-li>\n        </ng-template>\n\n        <!-- more filter possibilities -->\n        <c8y-li class=\"m-t-24 bg-gray-lighter p-t-16 p-b-16 p-l-24 p-r-24\" [selectable]=\"false\">\n          <div class=\"flex-row\">\n            <i c8yIcon=\"info-circle\" class=\"text-info m-r-4\"></i>\n            <p translate class=\"m-r-8\">Need more filter possibilities?</p>\n            <button\n              type=\"button\"\n              class=\"m-l-auto btn btn-default btn-sm\"\n              translate\n              (mousedown)=\"openSearch()\"\n            >\n              Go to the asset data table\n            </button>\n          </div>\n        </c8y-li>\n      </c8y-typeahead>\n    </form>\n  </div>\n</div>\n"
        })
    ], SearchBoxComponent);
    return SearchBoxComponent;
}());
export { SearchBoxComponent };
//# sourceMappingURL=data:application/json;base64,