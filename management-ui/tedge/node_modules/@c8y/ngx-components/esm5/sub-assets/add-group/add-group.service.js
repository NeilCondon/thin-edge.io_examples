import * as tslib_1 from "tslib";
import { Injectable } from '@angular/core';
import { IIdentified, IManagedObject, InventoryService } from '@c8y/client';
import { GroupFragment } from '@c8y/ngx-components/assets-navigator';
var AddGroupService = /** @class */ (function () {
    function AddGroupService(inventoryService) {
        this.inventoryService = inventoryService;
        this.GROUP_FRAGMENT_TYPE = 'c8y_IsDeviceGroup';
    }
    AddGroupService.prototype.createGroupAndAssignDevices = function (groupForm, groupContextId, selectedDevices) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var group, name, description, newGroupMO;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        name = groupForm.name, description = groupForm.description;
                        newGroupMO = this.getGroupMO(name, description, groupContextId);
                        if (!groupContextId) return [3 /*break*/, 2];
                        return [4 /*yield*/, this.inventoryService.childAssetsCreate(newGroupMO, groupContextId)];
                    case 1:
                        group = (_a.sent()).data;
                        return [3 /*break*/, 4];
                    case 2: return [4 /*yield*/, this.inventoryService.create(newGroupMO)];
                    case 3:
                        group = (_a.sent()).data;
                        _a.label = 4;
                    case 4:
                        if (!(selectedDevices.length > 0)) return [3 /*break*/, 6];
                        return [4 /*yield*/, this.assignDevices(group.id, selectedDevices)];
                    case 5:
                        _a.sent();
                        _a.label = 6;
                    case 6: return [2 /*return*/, group];
                }
            });
        });
    };
    AddGroupService.prototype.getGroupMO = function (name, description, groupContextId) {
        var _a;
        if (description === void 0) { description = ''; }
        var group = (_a = {
                type: this.getGroupType(groupContextId)
            },
            _a[this.GROUP_FRAGMENT_TYPE] = {},
            _a.name = name,
            _a.description = description,
            _a);
        return group;
    };
    AddGroupService.prototype.getGroupType = function (groupContextId) {
        return groupContextId ? GroupFragment.subGroupType : GroupFragment.groupType;
    };
    AddGroupService.prototype.assignDevices = function (id, selectedDevices) {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var promises;
            var _this = this;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        promises = [];
                        selectedDevices.forEach(function (moId) {
                            promises.push(_this.inventoryService.childAssetsAdd(moId, id));
                        });
                        return [4 /*yield*/, Promise.all(promises)];
                    case 1: return [2 /*return*/, _a.sent()];
                }
            });
        });
    };
    AddGroupService.ctorParameters = function () { return [
        { type: InventoryService }
    ]; };
    AddGroupService = tslib_1.__decorate([
        Injectable()
    ], AddGroupService);
    return AddGroupService;
}());
export { AddGroupService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRkLWdyb3VwLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3N1Yi1hc3NldHMvIiwic291cmNlcyI6WyJhZGQtZ3JvdXAvYWRkLWdyb3VwLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxjQUFjLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFFNUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBR3JFO0lBR0UseUJBQW9CLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBRjlDLHdCQUFtQixHQUFHLG1CQUFtQixDQUFDO0lBRU8sQ0FBQztJQUVwRCxxREFBMkIsR0FBakMsVUFDRSxTQUFvQixFQUNwQixjQUErQixFQUMvQixlQUF5Qjs7Ozs7O3dCQUdqQixJQUFJLEdBQWtCLFNBQVMsS0FBM0IsRUFBRSxXQUFXLEdBQUssU0FBUyxZQUFkLENBQWU7d0JBQ2xDLFVBQVUsR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRSxXQUFXLEVBQUUsY0FBYyxDQUFDLENBQUM7NkJBRWxFLGNBQWMsRUFBZCx3QkFBYzt3QkFDUCxxQkFBTSxJQUFJLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsVUFBVSxFQUFFLGNBQWMsQ0FBQyxFQUFBOzt3QkFBbEYsS0FBSyxHQUFHLENBQUMsU0FBeUUsQ0FBQyxDQUFDLElBQUksQ0FBQzs7NEJBRWhGLHFCQUFNLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLEVBQUE7O3dCQUF2RCxLQUFLLEdBQUcsQ0FBQyxTQUE4QyxDQUFDLENBQUMsSUFBSSxDQUFDOzs7NkJBRzVELENBQUEsZUFBZSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUEsRUFBMUIsd0JBQTBCO3dCQUM1QixxQkFBTSxJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxFQUFFLEVBQUUsZUFBZSxDQUFDLEVBQUE7O3dCQUFuRCxTQUFtRCxDQUFDOzs0QkFHdEQsc0JBQU8sS0FBSyxFQUFDOzs7O0tBQ2Q7SUFFTyxvQ0FBVSxHQUFsQixVQUNFLElBQVksRUFDWixXQUF3QixFQUN4QixjQUErQjs7UUFEL0IsNEJBQUEsRUFBQSxnQkFBd0I7UUFHeEIsSUFBTSxLQUFLO2dCQUNULElBQUksRUFBRSxJQUFJLENBQUMsWUFBWSxDQUFDLGNBQWMsQ0FBQzs7WUFDdkMsR0FBQyxJQUFJLENBQUMsbUJBQW1CLElBQUcsRUFBRTtZQUM5QixPQUFJLE9BQUE7WUFDSixjQUFXLGNBQUE7ZUFDWixDQUFDO1FBRUYsT0FBTyxLQUFLLENBQUM7SUFDZixDQUFDO0lBRU8sc0NBQVksR0FBcEIsVUFDRSxjQUErQjtRQUUvQixPQUFPLGNBQWMsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQztJQUMvRSxDQUFDO0lBRWEsdUNBQWEsR0FBM0IsVUFBNEIsRUFBbUIsRUFBRSxlQUF5Qjs7Ozs7Ozt3QkFDbEUsUUFBUSxHQUFHLEVBQUUsQ0FBQzt3QkFFcEIsZUFBZSxDQUFDLE9BQU8sQ0FBQyxVQUFBLElBQUk7NEJBQzFCLFFBQVEsQ0FBQyxJQUFJLENBQUMsS0FBSSxDQUFDLGdCQUFnQixDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQzt3QkFDaEUsQ0FBQyxDQUFDLENBQUM7d0JBRUkscUJBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFBQTs0QkFBbEMsc0JBQU8sU0FBMkIsRUFBQzs7OztLQUNwQzs7Z0JBckRxQyxnQkFBZ0I7O0lBSDNDLGVBQWU7UUFEM0IsVUFBVSxFQUFFO09BQ0EsZUFBZSxDQXlEM0I7SUFBRCxzQkFBQztDQUFBLEFBekRELElBeURDO1NBekRZLGVBQWUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJSWRlbnRpZmllZCwgSU1hbmFnZWRPYmplY3QsIEludmVudG9yeVNlcnZpY2UgfSBmcm9tICdAYzh5L2NsaWVudCc7XG5pbXBvcnQgeyBHcm91cEZvcm0gfSBmcm9tICcuL2FkZC1ncm91cC5tb2RlbCc7XG5pbXBvcnQgeyBHcm91cEZyYWdtZW50IH0gZnJvbSAnQGM4eS9uZ3gtY29tcG9uZW50cy9hc3NldHMtbmF2aWdhdG9yJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIEFkZEdyb3VwU2VydmljZSB7XG4gIHByaXZhdGUgR1JPVVBfRlJBR01FTlRfVFlQRSA9ICdjOHlfSXNEZXZpY2VHcm91cCc7XG5cbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbnZlbnRvcnlTZXJ2aWNlOiBJbnZlbnRvcnlTZXJ2aWNlKSB7fVxuXG4gIGFzeW5jIGNyZWF0ZUdyb3VwQW5kQXNzaWduRGV2aWNlcyhcbiAgICBncm91cEZvcm06IEdyb3VwRm9ybSxcbiAgICBncm91cENvbnRleHRJZDogc3RyaW5nIHwgbnVtYmVyLFxuICAgIHNlbGVjdGVkRGV2aWNlczogc3RyaW5nW11cbiAgKTogUHJvbWlzZTxJTWFuYWdlZE9iamVjdCB8IElJZGVudGlmaWVkPiB7XG4gICAgbGV0IGdyb3VwOiBJTWFuYWdlZE9iamVjdCB8IElJZGVudGlmaWVkO1xuICAgIGNvbnN0IHsgbmFtZSwgZGVzY3JpcHRpb24gfSA9IGdyb3VwRm9ybTtcbiAgICBjb25zdCBuZXdHcm91cE1PID0gdGhpcy5nZXRHcm91cE1PKG5hbWUsIGRlc2NyaXB0aW9uLCBncm91cENvbnRleHRJZCk7XG5cbiAgICBpZiAoZ3JvdXBDb250ZXh0SWQpIHtcbiAgICAgIGdyb3VwID0gKGF3YWl0IHRoaXMuaW52ZW50b3J5U2VydmljZS5jaGlsZEFzc2V0c0NyZWF0ZShuZXdHcm91cE1PLCBncm91cENvbnRleHRJZCkpLmRhdGE7XG4gICAgfSBlbHNlIHtcbiAgICAgIGdyb3VwID0gKGF3YWl0IHRoaXMuaW52ZW50b3J5U2VydmljZS5jcmVhdGUobmV3R3JvdXBNTykpLmRhdGE7XG4gICAgfVxuXG4gICAgaWYgKHNlbGVjdGVkRGV2aWNlcy5sZW5ndGggPiAwKSB7XG4gICAgICBhd2FpdCB0aGlzLmFzc2lnbkRldmljZXMoZ3JvdXAuaWQsIHNlbGVjdGVkRGV2aWNlcyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdyb3VwO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRHcm91cE1PKFxuICAgIG5hbWU6IHN0cmluZyxcbiAgICBkZXNjcmlwdGlvbjogc3RyaW5nID0gJycsXG4gICAgZ3JvdXBDb250ZXh0SWQ6IHN0cmluZyB8IG51bWJlclxuICApOiBQYXJ0aWFsPElNYW5hZ2VkT2JqZWN0PiB7XG4gICAgY29uc3QgZ3JvdXAgPSB7XG4gICAgICB0eXBlOiB0aGlzLmdldEdyb3VwVHlwZShncm91cENvbnRleHRJZCksXG4gICAgICBbdGhpcy5HUk9VUF9GUkFHTUVOVF9UWVBFXToge30sXG4gICAgICBuYW1lLFxuICAgICAgZGVzY3JpcHRpb25cbiAgICB9O1xuXG4gICAgcmV0dXJuIGdyb3VwO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRHcm91cFR5cGUoXG4gICAgZ3JvdXBDb250ZXh0SWQ6IHN0cmluZyB8IG51bWJlclxuICApOiBHcm91cEZyYWdtZW50LnN1Ykdyb3VwVHlwZSB8IEdyb3VwRnJhZ21lbnQuZ3JvdXBUeXBlIHtcbiAgICByZXR1cm4gZ3JvdXBDb250ZXh0SWQgPyBHcm91cEZyYWdtZW50LnN1Ykdyb3VwVHlwZSA6IEdyb3VwRnJhZ21lbnQuZ3JvdXBUeXBlO1xuICB9XG5cbiAgcHJpdmF0ZSBhc3luYyBhc3NpZ25EZXZpY2VzKGlkOiBzdHJpbmcgfCBudW1iZXIsIHNlbGVjdGVkRGV2aWNlczogc3RyaW5nW10pIHtcbiAgICBjb25zdCBwcm9taXNlcyA9IFtdO1xuXG4gICAgc2VsZWN0ZWREZXZpY2VzLmZvckVhY2gobW9JZCA9PiB7XG4gICAgICBwcm9taXNlcy5wdXNoKHRoaXMuaW52ZW50b3J5U2VydmljZS5jaGlsZEFzc2V0c0FkZChtb0lkLCBpZCkpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIGF3YWl0IFByb21pc2UuYWxsKHByb21pc2VzKTtcbiAgfVxufVxuIl19