import * as tslib_1 from "tslib";
import { Component, Input, ViewChild } from '@angular/core';
import { gettext, Status } from '@c8y/ngx-components';
import { TranslateService } from '@ngx-translate/core';
import { Subject } from 'rxjs';
var DeleteAssetsModalComponent = /** @class */ (function () {
    function DeleteAssetsModalComponent(translateService) {
        this.translateService = translateService;
        this.showWithCascadeCheckbox = true;
        this.showWithDeviceUserCheckbox = false;
        this.closeSubject = new Subject();
        this.labels = { ok: gettext('Delete'), cancel: gettext('Cancel') };
        this.title = gettext('Delete asset');
        this.status = Status.DANGER;
        this.config = {
            cascade: false,
            withDeviceUser: false
        };
    }
    DeleteAssetsModalComponent.prototype.ngOnInit = function () {
        this.message = this.translateService.instant(gettext('You are about to delete asset: "{{name}}". This operation is irreversible. Do you want to proceed?'), { name: this.asset.name });
    };
    DeleteAssetsModalComponent.prototype.ngAfterViewInit = function () {
        return tslib_1.__awaiter(this, void 0, void 0, function () {
            var error_1;
            return tslib_1.__generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        _a.trys.push([0, 2, , 3]);
                        return [4 /*yield*/, this.modalRef.result];
                    case 1:
                        _a.sent();
                        this.onClose();
                        return [3 /*break*/, 3];
                    case 2:
                        error_1 = _a.sent();
                        this.onDismiss();
                        return [3 /*break*/, 3];
                    case 3: return [2 /*return*/];
                }
            });
        });
    };
    DeleteAssetsModalComponent.prototype.onClose = function () {
        this.closeSubject.next(this.config);
        this.closeSubject.complete();
    };
    DeleteAssetsModalComponent.prototype.onDismiss = function () {
        this.closeSubject.complete();
    };
    DeleteAssetsModalComponent.ctorParameters = function () { return [
        { type: TranslateService }
    ]; };
    tslib_1.__decorate([
        Input()
    ], DeleteAssetsModalComponent.prototype, "showWithCascadeCheckbox", void 0);
    tslib_1.__decorate([
        Input()
    ], DeleteAssetsModalComponent.prototype, "showWithDeviceUserCheckbox", void 0);
    tslib_1.__decorate([
        Input()
    ], DeleteAssetsModalComponent.prototype, "asset", void 0);
    tslib_1.__decorate([
        ViewChild('modalRef', { static: false })
    ], DeleteAssetsModalComponent.prototype, "modalRef", void 0);
    DeleteAssetsModalComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-delete-assets-modal',
            template: "<c8y-confirm-modal [title]=\"title\" [status]=\"status\" [labels]=\"labels\" #modalRef>\n  <form #assetsForm=\"ngForm\">\n    <p class=\"text-wrap m-b-16\">\n      {{ message | translate }}\n    </p>\n    <c8y-form-group *ngIf=\"showWithCascadeCheckbox\" class=\"m-b-0\">\n      <label title=\"{{ 'Delete devices' | translate }}\" class=\"c8y-checkbox\">\n        <input type=\"checkbox\" name=\"cascade\" [(ngModel)]=\"config.cascade\" />\n        <span></span>\n        <span>\n          {{ 'Also delete all devices inside selected asset and its subassets.' | translate }}\n        </span>\n      </label>\n    </c8y-form-group>\n    <c8y-form-group *ngIf=\"showWithDeviceUserCheckbox\" class=\"m-b-0\">\n      <label title=\"{{ 'Delete associated device owner' | translate }}\" class=\"c8y-checkbox\">\n        <input type=\"checkbox\" name=\"withDeviceUser\" [(ngModel)]=\"config.withDeviceUser\" />\n        <span></span>\n        <span>\n          {{ 'Also delete associated device owner.' | translate }}\n        </span>\n      </label>\n    </c8y-form-group>\n  </form>\n</c8y-confirm-modal>\n"
        })
    ], DeleteAssetsModalComponent);
    return DeleteAssetsModalComponent;
}());
export { DeleteAssetsModalComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsZXRlLWFzc2V0cy1tb2RhbC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3N1Yi1hc3NldHMvIiwic291cmNlcyI6WyJkZWxldGUtYXNzZXRzLW1vZGFsL2RlbGV0ZS1hc3NldHMtbW9kYWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFNUQsT0FBTyxFQUVMLE9BQU8sRUFFUCxNQUFNLEVBRVAsTUFBTSxxQkFBcUIsQ0FBQztBQUM3QixPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBTy9CO0lBZUUsb0NBQW9CLGdCQUFrQztRQUFsQyxxQkFBZ0IsR0FBaEIsZ0JBQWdCLENBQWtCO1FBZDdDLDRCQUF1QixHQUFZLElBQUksQ0FBQztRQUN4QywrQkFBMEIsR0FBWSxLQUFLLENBQUM7UUFHckQsaUJBQVksR0FBbUMsSUFBSSxPQUFPLEVBQUUsQ0FBQztRQUM3RCxXQUFNLEdBQWdCLEVBQUUsRUFBRSxFQUFFLE9BQU8sQ0FBQyxRQUFRLENBQUMsRUFBRSxNQUFNLEVBQUUsT0FBTyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUM7UUFDM0UsVUFBSyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUNoQyxXQUFNLEdBQWUsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNuQyxXQUFNLEdBQTBCO1lBQzlCLE9BQU8sRUFBRSxLQUFLO1lBQ2QsY0FBYyxFQUFFLEtBQUs7U0FDdEIsQ0FBQztJQUd1RCxDQUFDO0lBRTFELDZDQUFRLEdBQVI7UUFDRSxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxPQUFPLENBQzFDLE9BQU8sQ0FDTCxvR0FBb0csQ0FDckcsRUFDRCxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUMxQixDQUFDO0lBQ0osQ0FBQztJQUVLLG9EQUFlLEdBQXJCOzs7Ozs7O3dCQUVJLHFCQUFNLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFBOzt3QkFBMUIsU0FBMEIsQ0FBQzt3QkFDM0IsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDOzs7O3dCQUVmLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQzs7Ozs7O0tBRXBCO0lBRUQsNENBQU8sR0FBUDtRQUNFLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUNwQyxJQUFJLENBQUMsWUFBWSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQy9CLENBQUM7SUFFRCw4Q0FBUyxHQUFUO1FBQ0UsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUMvQixDQUFDOztnQkEzQnFDLGdCQUFnQjs7SUFkN0M7UUFBUixLQUFLLEVBQUU7K0VBQXlDO0lBQ3hDO1FBQVIsS0FBSyxFQUFFO2tGQUE2QztJQUM1QztRQUFSLEtBQUssRUFBRTs2REFBdUI7SUFDVztRQUF6QyxTQUFTLENBQUMsVUFBVSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxDQUFDO2dFQUFpQztJQUovRCwwQkFBMEI7UUFKdEMsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLHlCQUF5QjtZQUNuQyx5bENBQW1EO1NBQ3BELENBQUM7T0FDVywwQkFBMEIsQ0EyQ3RDO0lBQUQsaUNBQUM7Q0FBQSxBQTNDRCxJQTJDQztTQTNDWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IElNYW5hZ2VkT2JqZWN0IH0gZnJvbSAnQGM4eS9jbGllbnQnO1xuaW1wb3J0IHtcbiAgQ29uZmlybU1vZGFsQ29tcG9uZW50LFxuICBnZXR0ZXh0LFxuICBNb2RhbExhYmVscyxcbiAgU3RhdHVzLFxuICBTdGF0dXNUeXBlXG59IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgVHJhbnNsYXRlU2VydmljZSB9IGZyb20gJ0BuZ3gtdHJhbnNsYXRlL2NvcmUnO1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRGVsZXRlTW9kYWxDaGVja2JveGVzIH0gZnJvbSAnLi9kZWxldGUtYXNzZXRzLW1vZGFsLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnYzh5LWRlbGV0ZS1hc3NldHMtbW9kYWwnLFxuICB0ZW1wbGF0ZVVybDogJy4vZGVsZXRlLWFzc2V0cy1tb2RhbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgRGVsZXRlQXNzZXRzTW9kYWxDb21wb25lbnQge1xuICBASW5wdXQoKSBzaG93V2l0aENhc2NhZGVDaGVja2JveDogYm9vbGVhbiA9IHRydWU7XG4gIEBJbnB1dCgpIHNob3dXaXRoRGV2aWNlVXNlckNoZWNrYm94OiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIGFzc2V0OiBJTWFuYWdlZE9iamVjdDtcbiAgQFZpZXdDaGlsZCgnbW9kYWxSZWYnLCB7IHN0YXRpYzogZmFsc2UgfSkgbW9kYWxSZWY6IENvbmZpcm1Nb2RhbENvbXBvbmVudDtcbiAgY2xvc2VTdWJqZWN0OiBTdWJqZWN0PERlbGV0ZU1vZGFsQ2hlY2tib3hlcz4gPSBuZXcgU3ViamVjdCgpO1xuICBsYWJlbHM6IE1vZGFsTGFiZWxzID0geyBvazogZ2V0dGV4dCgnRGVsZXRlJyksIGNhbmNlbDogZ2V0dGV4dCgnQ2FuY2VsJykgfTtcbiAgdGl0bGUgPSBnZXR0ZXh0KCdEZWxldGUgYXNzZXQnKTtcbiAgc3RhdHVzOiBTdGF0dXNUeXBlID0gU3RhdHVzLkRBTkdFUjtcbiAgY29uZmlnOiBEZWxldGVNb2RhbENoZWNrYm94ZXMgPSB7XG4gICAgY2FzY2FkZTogZmFsc2UsXG4gICAgd2l0aERldmljZVVzZXI6IGZhbHNlXG4gIH07XG4gIG1lc3NhZ2U6IHN0cmluZztcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIHRyYW5zbGF0ZVNlcnZpY2U6IFRyYW5zbGF0ZVNlcnZpY2UpIHt9XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5tZXNzYWdlID0gdGhpcy50cmFuc2xhdGVTZXJ2aWNlLmluc3RhbnQoXG4gICAgICBnZXR0ZXh0KFxuICAgICAgICAnWW91IGFyZSBhYm91dCB0byBkZWxldGUgYXNzZXQ6IFwie3tuYW1lfX1cIi4gVGhpcyBvcGVyYXRpb24gaXMgaXJyZXZlcnNpYmxlLiBEbyB5b3Ugd2FudCB0byBwcm9jZWVkPydcbiAgICAgICksXG4gICAgICB7IG5hbWU6IHRoaXMuYXNzZXQubmFtZSB9XG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0cnkge1xuICAgICAgYXdhaXQgdGhpcy5tb2RhbFJlZi5yZXN1bHQ7XG4gICAgICB0aGlzLm9uQ2xvc2UoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhpcy5vbkRpc21pc3MoKTtcbiAgICB9XG4gIH1cblxuICBvbkNsb3NlKCkge1xuICAgIHRoaXMuY2xvc2VTdWJqZWN0Lm5leHQodGhpcy5jb25maWcpO1xuICAgIHRoaXMuY2xvc2VTdWJqZWN0LmNvbXBsZXRlKCk7XG4gIH1cblxuICBvbkRpc21pc3MoKSB7XG4gICAgdGhpcy5jbG9zZVN1YmplY3QuY29tcGxldGUoKTtcbiAgfVxufVxuIl19