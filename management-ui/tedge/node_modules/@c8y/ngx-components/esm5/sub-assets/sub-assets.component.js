import * as tslib_1 from "tslib";
import { Component, EventEmitter } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { AppStateService, DisplayOptions } from '@c8y/ngx-components';
import { DeviceGroupService } from '@c8y/ngx-components/assets-navigator';
import { SubAssetsService } from './sub-assets.service';
var SubAssetsComponent = /** @class */ (function () {
    function SubAssetsComponent(route, appState, deviceGroupService, subAssetsService) {
        var _this = this;
        this.route = route;
        this.appState = appState;
        this.deviceGroupService = deviceGroupService;
        this.subAssetsService = subAssetsService;
        this.toggle = false;
        this.showAddGroup = false;
        this.showAssignDevices = false;
        this.showGroupInfo = true;
        this.showAssignChildDevices = false;
        this.refresh = new EventEmitter();
        this.filterable = true;
        this.dataSub = this.route.parent.data.subscribe(function (_a) {
            var contextData = _a.contextData;
            _this.title = contextData.name;
            _this.currentGroupId = contextData.id;
            _this.group = contextData;
            _this.filterable = !_this.deviceGroupService.isDynamicGroup(contextData);
        });
    }
    SubAssetsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.appState.state$.subscribe(function (state) {
            _this.showGroupInfo = state.app.name === 'cockpit' || state.app.name === 'devicemanagement';
        });
        this.displayOptions = {
            striped: true,
            bordered: false,
            gridHeader: true,
            filter: !this.isSmartGroup()
        };
    };
    SubAssetsComponent.prototype.groupChange = function (group) {
        /**
         * Group is cached in the context-route guard. To avoid loading old data (when switching tabs) we need to update
         * this object in the cache.
         */
        Object.assign(this.group, group);
        this.title = group.name;
        this.refresh.emit();
    };
    SubAssetsComponent.prototype.isSmartGroup = function () {
        return this.subAssetsService.isSmartGroup(this.group);
    };
    SubAssetsComponent.prototype.ngOnDestroy = function () {
        if (this.dataSub) {
            this.dataSub.unsubscribe();
        }
    };
    SubAssetsComponent.ctorParameters = function () { return [
        { type: ActivatedRoute },
        { type: AppStateService },
        { type: DeviceGroupService },
        { type: SubAssetsService }
    ]; };
    SubAssetsComponent = tslib_1.__decorate([
        Component({
            selector: 'c8y-sub-assets',
            template: "<c8y-title>\n  {{ title }}\n</c8y-title>\n\n<c8y-action-bar-item [placement]=\"'right'\" *ngIf=\"!isSmartGroup()\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Add group' | translate }}\"\n    (click)=\"showAddGroup = !showAddGroup\"\n  >\n    <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i><span translate>Add group</span>\n  </button>\n</c8y-action-bar-item>\n\n<c8y-action-bar-item [placement]=\"'right'\" *ngIf=\"!isSmartGroup()\">\n  <button\n    class=\"btn btn-link\"\n    title=\"{{ 'Assign devices' | translate }}\"\n    (click)=\"showAssignDevices = !showAssignDevices\"\n  >\n    <i c8yIcon=\"plus-circle\" class=\"m-r-4\"></i><span translate>Assign devices</span>\n  </button>\n</c8y-action-bar-item>\n\n<div class=\"card content-fullpage d-flex d-col\">\n  <c8y-group-info\n    *ngIf=\"showGroupInfo\"\n    [group]=\"group\"\n    (onGroupChange)=\"groupChange($event)\"\n  ></c8y-group-info>\n  <c8y-sub-assets-grid\n    [refresh]=\"refresh\"\n    [parent-group]=\"group\"\n    [filterable]=\"filterable\"\n    [displayOptions]=\"displayOptions\"\n    class=\"d-contents\"\n  ></c8y-sub-assets-grid>\n</div>\n\n<div [ngClass]=\"{ drawerOpen: showAddGroup }\">\n  <div class=\"bottom-drawer\">\n    <c8y-add-group\n      [currentGroupId]=\"currentGroupId\"\n      [refresh]=\"refresh\"\n      (onCancel)=\"showAddGroup = false\"\n      *ngIf=\"showAddGroup\"\n    ></c8y-add-group>\n  </div>\n</div>\n\n<div [ngClass]=\"{ drawerOpen: showAssignDevices }\">\n  <div class=\"bottom-drawer\">\n    <div class=\"d-flex d-col no-align-items fit-h\">\n      <c8y-assign-devices\n        class=\"d-contents\"\n        (onCancel)=\"showAssignDevices = false\"\n        [refresh]=\"refresh\"\n        [currentGroupId]=\"currentGroupId\"\n        (onShowChildDevices)=\"showAssignChildDevices=$event\"\n        (selectedDevice)=\"showChildrenForDevice=$event\"\n        *ngIf=\"showAssignDevices\"\n      ></c8y-assign-devices>\n    </div>\n  </div>\n</div>\n\n<div [ngClass]=\"{ drawerOpen: showAssignChildDevices }\" *ngIf=\"showAssignChildDevices\">\n  <div class=\"bottom-drawer m-t-40\">\n    <div class=\"d-flex d-col no-align-items fit-h\">\n      <c8y-assign-child-devices\n        class=\"d-contents\"\n        (onCancel)=\"showAssignChildDevices = false\"\n        [refresh]=\"refresh\"\n        [currentGroupId]=\"currentGroupId\"\n        [parentDevice]=\"showChildrenForDevice\"\n      ></c8y-assign-child-devices>\n    </div>\n  </div>\n</div>\n"
        })
    ], SubAssetsComponent);
    return SubAssetsComponent;
}());
export { SubAssetsComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3ViLWFzc2V0cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AYzh5L25neC1jb21wb25lbnRzL3N1Yi1hc3NldHMvIiwic291cmNlcyI6WyJzdWItYXNzZXRzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQXFCLE1BQU0sZUFBZSxDQUFDO0FBQzNFLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBRTFFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBTXhEO0lBZ0JFLDRCQUNVLEtBQXFCLEVBQ3JCLFFBQXlCLEVBQ3pCLGtCQUFzQyxFQUN0QyxnQkFBa0M7UUFKNUMsaUJBWUM7UUFYUyxVQUFLLEdBQUwsS0FBSyxDQUFnQjtRQUNyQixhQUFRLEdBQVIsUUFBUSxDQUFpQjtRQUN6Qix1QkFBa0IsR0FBbEIsa0JBQWtCLENBQW9CO1FBQ3RDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7UUFoQjVDLFdBQU0sR0FBWSxLQUFLLENBQUM7UUFDeEIsaUJBQVksR0FBWSxLQUFLLENBQUM7UUFDOUIsc0JBQWlCLEdBQVksS0FBSyxDQUFDO1FBR25DLGtCQUFhLEdBQVksSUFBSSxDQUFDO1FBQzlCLDJCQUFzQixHQUFZLEtBQUssQ0FBQztRQUN4QyxZQUFPLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDaEQsZUFBVSxHQUFZLElBQUksQ0FBQztRQVV6QixJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsVUFBQyxFQUFlO2dCQUFiLDRCQUFXO1lBQzVELEtBQUksQ0FBQyxLQUFLLEdBQUcsV0FBVyxDQUFDLElBQUksQ0FBQztZQUM5QixLQUFJLENBQUMsY0FBYyxHQUFHLFdBQVcsQ0FBQyxFQUFFLENBQUM7WUFDckMsS0FBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUM7WUFDekIsS0FBSSxDQUFDLFVBQVUsR0FBRyxDQUFDLEtBQUksQ0FBQyxrQkFBa0IsQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDekUsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDO0lBRUQscUNBQVEsR0FBUjtRQUFBLGlCQVdDO1FBVkMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLFVBQUEsS0FBSztZQUNsQyxLQUFJLENBQUMsYUFBYSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsSUFBSSxLQUFLLFNBQVMsSUFBSSxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksS0FBSyxrQkFBa0IsQ0FBQztRQUM3RixDQUFDLENBQUMsQ0FBQztRQUVILElBQUksQ0FBQyxjQUFjLEdBQUc7WUFDcEIsT0FBTyxFQUFFLElBQUk7WUFDYixRQUFRLEVBQUUsS0FBSztZQUNmLFVBQVUsRUFBRSxJQUFJO1lBQ2hCLE1BQU0sRUFBRSxDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUU7U0FDN0IsQ0FBQztJQUNKLENBQUM7SUFFRCx3Q0FBVyxHQUFYLFVBQVksS0FBcUI7UUFDL0I7OztXQUdHO1FBQ0gsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ2pDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQztRQUN4QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3RCLENBQUM7SUFFRCx5Q0FBWSxHQUFaO1FBQ0UsT0FBTyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsd0NBQVcsR0FBWDtRQUNFLElBQUksSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNoQixJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzVCO0lBQ0gsQ0FBQzs7Z0JBNUNnQixjQUFjO2dCQUNYLGVBQWU7Z0JBQ0wsa0JBQWtCO2dCQUNwQixnQkFBZ0I7O0lBcEJqQyxrQkFBa0I7UUFKOUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGdCQUFnQjtZQUMxQixxN0VBQTBDO1NBQzNDLENBQUM7T0FDVyxrQkFBa0IsQ0E4RDlCO0lBQUQseUJBQUM7Q0FBQSxBQTlERCxJQThEQztTQTlEWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgT25EZXN0cm95LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEFjdGl2YXRlZFJvdXRlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IElJZGVudGlmaWVkLCBJTWFuYWdlZE9iamVjdCB9IGZyb20gJ0BjOHkvY2xpZW50JztcbmltcG9ydCB7IEFwcFN0YXRlU2VydmljZSwgRGlzcGxheU9wdGlvbnMgfSBmcm9tICdAYzh5L25neC1jb21wb25lbnRzJztcbmltcG9ydCB7IERldmljZUdyb3VwU2VydmljZSB9IGZyb20gJ0BjOHkvbmd4LWNvbXBvbmVudHMvYXNzZXRzLW5hdmlnYXRvcic7XG5pbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IFN1YkFzc2V0c1NlcnZpY2UgfSBmcm9tICcuL3N1Yi1hc3NldHMuc2VydmljZSc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2M4eS1zdWItYXNzZXRzJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3N1Yi1hc3NldHMuY29tcG9uZW50Lmh0bWwnXG59KVxuZXhwb3J0IGNsYXNzIFN1YkFzc2V0c0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgY3VycmVudEdyb3VwSWQ6IElJZGVudGlmaWVkO1xuICBzaG93Q2hpbGRyZW5Gb3JEZXZpY2U6IElNYW5hZ2VkT2JqZWN0O1xuICB0aXRsZTogc3RyaW5nO1xuICB0b2dnbGU6IGJvb2xlYW4gPSBmYWxzZTtcbiAgc2hvd0FkZEdyb3VwOiBib29sZWFuID0gZmFsc2U7XG4gIHNob3dBc3NpZ25EZXZpY2VzOiBib29sZWFuID0gZmFsc2U7XG4gIHJlcXVlc3RJblByb2dyZXNzOiBib29sZWFuO1xuICBncm91cDogSU1hbmFnZWRPYmplY3Q7XG4gIHNob3dHcm91cEluZm86IGJvb2xlYW4gPSB0cnVlO1xuICBzaG93QXNzaWduQ2hpbGREZXZpY2VzOiBib29sZWFuID0gZmFsc2U7XG4gIHJlZnJlc2g6IEV2ZW50RW1pdHRlcjxhbnk+ID0gbmV3IEV2ZW50RW1pdHRlcigpO1xuICBmaWx0ZXJhYmxlOiBib29sZWFuID0gdHJ1ZTtcbiAgZGlzcGxheU9wdGlvbnM6IERpc3BsYXlPcHRpb25zO1xuICBwcml2YXRlIGRhdGFTdWI6IFN1YnNjcmlwdGlvbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHJvdXRlOiBBY3RpdmF0ZWRSb3V0ZSxcbiAgICBwcml2YXRlIGFwcFN0YXRlOiBBcHBTdGF0ZVNlcnZpY2UsXG4gICAgcHJpdmF0ZSBkZXZpY2VHcm91cFNlcnZpY2U6IERldmljZUdyb3VwU2VydmljZSxcbiAgICBwcml2YXRlIHN1YkFzc2V0c1NlcnZpY2U6IFN1YkFzc2V0c1NlcnZpY2VcbiAgKSB7XG4gICAgdGhpcy5kYXRhU3ViID0gdGhpcy5yb3V0ZS5wYXJlbnQuZGF0YS5zdWJzY3JpYmUoKHsgY29udGV4dERhdGEgfSkgPT4ge1xuICAgICAgdGhpcy50aXRsZSA9IGNvbnRleHREYXRhLm5hbWU7XG4gICAgICB0aGlzLmN1cnJlbnRHcm91cElkID0gY29udGV4dERhdGEuaWQ7XG4gICAgICB0aGlzLmdyb3VwID0gY29udGV4dERhdGE7XG4gICAgICB0aGlzLmZpbHRlcmFibGUgPSAhdGhpcy5kZXZpY2VHcm91cFNlcnZpY2UuaXNEeW5hbWljR3JvdXAoY29udGV4dERhdGEpO1xuICAgIH0pO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5hcHBTdGF0ZS5zdGF0ZSQuc3Vic2NyaWJlKHN0YXRlID0+IHtcbiAgICAgIHRoaXMuc2hvd0dyb3VwSW5mbyA9IHN0YXRlLmFwcC5uYW1lID09PSAnY29ja3BpdCcgfHwgc3RhdGUuYXBwLm5hbWUgPT09ICdkZXZpY2VtYW5hZ2VtZW50JztcbiAgICB9KTtcblxuICAgIHRoaXMuZGlzcGxheU9wdGlvbnMgPSB7XG4gICAgICBzdHJpcGVkOiB0cnVlLFxuICAgICAgYm9yZGVyZWQ6IGZhbHNlLFxuICAgICAgZ3JpZEhlYWRlcjogdHJ1ZSxcbiAgICAgIGZpbHRlcjogIXRoaXMuaXNTbWFydEdyb3VwKClcbiAgICB9O1xuICB9XG5cbiAgZ3JvdXBDaGFuZ2UoZ3JvdXA6IElNYW5hZ2VkT2JqZWN0KTogdm9pZCB7XG4gICAgLyoqXG4gICAgICogR3JvdXAgaXMgY2FjaGVkIGluIHRoZSBjb250ZXh0LXJvdXRlIGd1YXJkLiBUbyBhdm9pZCBsb2FkaW5nIG9sZCBkYXRhICh3aGVuIHN3aXRjaGluZyB0YWJzKSB3ZSBuZWVkIHRvIHVwZGF0ZVxuICAgICAqIHRoaXMgb2JqZWN0IGluIHRoZSBjYWNoZS5cbiAgICAgKi9cbiAgICBPYmplY3QuYXNzaWduKHRoaXMuZ3JvdXAsIGdyb3VwKTtcbiAgICB0aGlzLnRpdGxlID0gZ3JvdXAubmFtZTtcbiAgICB0aGlzLnJlZnJlc2guZW1pdCgpO1xuICB9XG5cbiAgaXNTbWFydEdyb3VwKCkge1xuICAgIHJldHVybiB0aGlzLnN1YkFzc2V0c1NlcnZpY2UuaXNTbWFydEdyb3VwKHRoaXMuZ3JvdXApO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgaWYgKHRoaXMuZGF0YVN1Yikge1xuICAgICAgdGhpcy5kYXRhU3ViLnVuc3Vic2NyaWJlKCk7XG4gICAgfVxuICB9XG59XG4iXX0=