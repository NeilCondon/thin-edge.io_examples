{"version":3,"file":"c8y-ngx-components-operations-stepper-bulk-type-configuration.js","sources":["ng://@c8y/ngx-components/operations/stepper-bulk-type-configuration/stepper-bulk-type-configuration.component.ts","ng://@c8y/ngx-components/operations/stepper-bulk-type-configuration/stepper-bulk-type-configuration.module.ts","ng://@c8y/ngx-components/operations/stepper-bulk-type-configuration/c8y-ngx-components-operations-stepper-bulk-type-configuration.ts"],"sourcesContent":["import { CdkStep } from '@angular/cdk/stepper';\nimport { Component } from '@angular/core';\nimport { IManagedObject, IOperation, IResultList } from '@c8y/client';\nimport { C8yStepper, gettext } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get, isEqual, uniqWith } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, from, Observable, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';\nimport { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport {\n  BulkOperationsService,\n  OperationDetails\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-configuration',\n  templateUrl: 'stepper-bulk-type-configuration.component.html'\n})\nexport class StepperBulkTypeConfigurationComponent extends BaseStepperComponent {\n  readonly NO_DEVICE_TYPE_AVAILABLE = gettext('Undefined`device type`');\n  selectedConfiguration: IManagedObject;\n  elementCount: number = 0;\n  DD_LOW_COUNT: number = 10;\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  configType$: BehaviorSubject<string> = new BehaviorSubject('');\n  configTypes = [];\n  selectedConfigType = { name: '' };\n  configurations$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.configType$\n  ).pipe(\n    switchMap(([name, configType]) => this.getConfiguration(name, configType)),\n    shareReplay(1)\n  );\n  private configTypeSubscription: Subscription;\n\n  constructor(\n    private bulkOperationService: BulkOperationsService,\n    private repositoryService: RepositoryService,\n    private translate: TranslateService\n  ) {\n    super();\n    this.DD_LOW_COUNT = this.bulkOperationService.DD_LOW_COUNT;\n    this.loadConfigurationTypes();\n  }\n\n  loadConfigurationTypes() {\n    this.configTypeSubscription = this.configType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { configurationType: `*${searchStr}*` };\n          return from(\n            this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query })\n          );\n        })\n      )\n      .subscribe(result => {\n        const { data } = result;\n        this.configTypes = uniqWith(data.map(val => ({ name: val.configurationType })), isEqual);\n      });\n  }\n  ngOnDestroy(): void {\n    this.configTypeSubscription.unsubscribe();\n  }\n\n  selectConfiguration(configuration: IManagedObject) {\n    this.selectedConfiguration = configuration;\n  }\n\n  goToSecondStep($event: { stepper: C8yStepper; step: CdkStep }) {\n    $event.stepper.next();\n    this.getConfigBinary();\n    this.deviceTypes = this.selectedConfiguration.deviceType;\n  }\n\n  async getConfigBinary() {\n    if (this.selectedConfiguration.url) {\n      this.selectedConfiguration.binary = await this.repositoryService.getBinaryText(\n        this.selectedConfiguration.url,\n        { allowExternal: true, noAlerts: true }\n      );\n    }\n  }\n\n  getDeviceTypeTitle(configuration: IManagedObject): string {\n    return get(configuration, 'deviceType', this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    const configuration = {\n      type: this.selectedConfiguration.configurationType,\n      url: this.selectedConfiguration.url\n    };\n\n    return {\n      name: gettext('Configuration update'),\n      description: get(this.selectedConfiguration, 'name'),\n      prototype: ({\n        description: `Update configuration to: ${this.selectedConfiguration.name}.`,\n        c8y_DownloadConfigFile: configuration\n      } as unknown) as IOperation\n    };\n  }\n\n  private getConfiguration(name?: string, configurationType?: string) {\n    const query: any = name ? { name: `*${name}*` } : {};\n    if (configurationType) {\n      query.__or = [{ configurationType }, { __not: { __has: `configurationType` } }];\n    }\n    return this.repositoryService.listRepositoryEntries(RepositoryType.CONFIGURATION, { query });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport {\n  HOOK_LIST_BULK_TYPE,\n  baseUrl,\n  BulkOperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\nimport { StepperBulkTypeConfigurationComponent } from './stepper-bulk-type-configuration.component';\n\n/** Module for the 'Configuration update' operation type stepper */\n@NgModule({\n  declarations: [StepperBulkTypeConfigurationComponent],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BulkOperationStepperModule,\n    RepositoryModule\n  ],\n  providers: [\n    {\n      provide: HOOK_LIST_BULK_TYPE,\n      useValue: {\n        type: BulkOperationType.CONFIGURATION,\n        c8yIcon: 'cogs',\n        name: gettext('Configuration update'),\n        path: `${baseUrl}configuration`,\n        component: StepperBulkTypeConfigurationComponent,\n        fragments: ['c8y_DownloadConfigFile', 'c8y_Configuration'],\n        selected: false\n      },\n      multi: true\n    }\n  ],\n  entryComponents: [StepperBulkTypeConfigurationComponent],\n  exports: [StepperBulkTypeConfigurationComponent]\n})\nexport class StepperBulkTypeConfigurationModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__extends"],"mappings":"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"}