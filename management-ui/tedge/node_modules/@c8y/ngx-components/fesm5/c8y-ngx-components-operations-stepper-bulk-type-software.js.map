{"version":3,"file":"c8y-ngx-components-operations-stepper-bulk-type-software.js","sources":["ng://@c8y/ngx-components/operations/stepper-bulk-type-software/select-software-step.component.ts","ng://@c8y/ngx-components/operations/stepper-bulk-type-software/confirm-software-selection-step.component.ts","ng://@c8y/ngx-components/operations/stepper-bulk-type-software/stepper-bulk-type-software.component.ts","ng://@c8y/ngx-components/operations/stepper-bulk-type-software/stepper-bulk-type-software.module.ts","ng://@c8y/ngx-components/operations/stepper-bulk-type-software/c8y-ngx-components-operations-stepper-bulk-type-software.ts"],"sourcesContent":["import { Component, EventEmitter, Output, QueryList, ViewChildren } from '@angular/core';\nimport { IManagedObject, IResultList } from '@c8y/client';\nimport { gettext, ListItemRadioComponent, memoize } from '@c8y/ngx-components';\nimport { RepositoryService, RepositoryType } from '@c8y/ngx-components/repository';\nimport { TranslateService } from '@ngx-translate/core';\nimport { get, isEqual, property, uniqWith } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, from, Observable, Subscription } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, shareReplay, switchMap } from 'rxjs/operators';\nimport { ISelectedSoftware } from './select-software.model';\n\n@Component({\n  selector: 'c8y-select-software-step',\n  templateUrl: 'select-software-step.component.html'\n})\nexport class SelectSoftwareStepComponent {\n  @Output() software: EventEmitter<ISelectedSoftware> = new EventEmitter<ISelectedSoftware>();\n  textFilter$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceType$: BehaviorSubject<string> = new BehaviorSubject('');\n  deviceTypes = [];\n  selectedDeviceType = { name: '' };\n  isLegacy = this.repositoryService.isLegacyEntry.bind(this.repositoryService);\n  software$: Observable<IResultList<IManagedObject>> = combineLatest(\n    this.textFilter$,\n    this.deviceType$\n  ).pipe(\n    switchMap(([name, deviceType]) => this.getSoftware(name, deviceType)),\n    shareReplay(1)\n  );\n  readonly NO_DEVICE_TYPE_AVAILABLE = gettext('No device type available');\n  @ViewChildren(ListItemRadioComponent) radioButtons: QueryList<ListItemRadioComponent>;\n\n  private deviceTypeSubscription: Subscription;\n\n  constructor(\n    private repositoryService: RepositoryService,\n    private translate: TranslateService\n  ) {\n    this.loadDeviceTypes();\n  }\n\n  @memoize(property('id'))\n  getBaseVersionsCount$(software: IManagedObject): Observable<number> {\n    return this.repositoryService.getBaseVersionsCount$(software).pipe(shareReplay(1));\n  }\n\n  @memoize(property('id'))\n  getVersions(software: IManagedObject) {\n    return this.repositoryService.listAllVersions(software);\n  }\n\n  getDeviceTypeTitle(software: IManagedObject): string {\n    return get(\n      software,\n      'c8y_Filter.type',\n      this.translate.instant(this.NO_DEVICE_TYPE_AVAILABLE));\n  }\n\n  loadDeviceTypes() {\n    this.deviceTypeSubscription = this.deviceType$\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n        switchMap(searchStr => {\n          const query = { 'c8y_Filter.type': `*${searchStr}*` };\n          return from(\n            this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query })\n          );\n        })\n      )\n      .subscribe(result => {\n        const { data } = result;\n        this.deviceTypes = uniqWith(data.map(val => ({ name: val.c8y_Filter.type })), isEqual);\n      });\n  }\n\n  ngOnDestroy() {\n    this.deviceTypeSubscription.unsubscribe();\n  }\n\n  resetSelection() {\n    this.radioButtons.map(radio => radio.reset());\n  }\n\n  selectSoftware({ option, software }) {\n    software.selectedId = option.id;\n    option.action = 'install';\n    this.emitSoftware({ option, software });\n  }\n\n  emitSoftware({ option, software }) {\n    const emitData = Object.assign(\n      {},\n      { software },\n      { version: option },\n      { action: option.action }\n    );\n    this.software.emit(emitData);\n  }\n\n  private getSoftware(name?: string, deviceType?: string) {\n    const query: any = name ? { name: `*${name}*` } : {};\n    if (deviceType) {\n      query.__or = [{ 'c8y_Filter.type': deviceType }, { __not: { __has: `c8y_Filter.type` } }];\n    }\n    return this.repositoryService.listRepositoryEntries(RepositoryType.SOFTWARE, { query });\n  }\n}\n","import { Component, Input, SimpleChanges, OnChanges } from '@angular/core';\nimport { gettext } from '@c8y/ngx-components';\nimport { has, uniq } from 'lodash-es';\nimport { ISelectedSoftware } from './select-software.model';\n\n@Component({\n  selector: 'c8y-confirm-software-selection-step',\n  templateUrl: 'confirm-software-selection-step.component.html'\n})\nexport class ConfirmSoftwareSelectionStepComponent implements OnChanges {\n  @Input() selectedItems: ISelectedSoftware[];\n  title: string;\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedItems) {\n      const deviceTypes: string[] = this.deviceTypes;\n      this.title = deviceTypes && deviceTypes.length ? deviceTypes.join(', ') : gettext('Undefined`device type`');\n    }\n  }\n\n  get selectedToInstall() {\n    return this.selectedItems.filter(software => software.action === 'install');\n  }\n\n  get selectedToDelete() {\n    return this.selectedItems.filter(software => software.action === 'delete');\n  }\n\n  get deviceTypes() {\n    return uniq(\n      this.selectedItems\n        .filter(val => has(val, ['software', 'c8y_Filter', 'type']))\n        .map(val => val.software.c8y_Filter.type)\n    );\n  }\n}\n","import { CdkStep } from '@angular/cdk/stepper';\nimport { Component, ViewChild } from '@angular/core';\nimport { IOperation } from '@c8y/client';\nimport { C8yStepper, gettext, ModalService, Status } from '@c8y/ngx-components';\nimport { TranslateService } from '@ngx-translate/core';\nimport { uniq } from 'lodash-es';\nimport { BaseStepperComponent } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport { OperationDetails } from '@c8y/ngx-components/operations/bulk-operations-service';\nimport { SelectSoftwareStepComponent } from './select-software-step.component';\nimport { ISelectedSoftware, ISoftwareUpdateOperationPrototype } from './select-software.model';\n\n@Component({\n  selector: 'c8y-stepper-bulk-type-software',\n  templateUrl: 'stepper-bulk-type-software.component.html'\n})\nexport class StepperBulkTypeSoftwareComponent extends BaseStepperComponent {\n  readonly descriptionTemplateSingle: string = gettext(\n    'Update software to: {{ name }} (version {{ version }})'\n  );\n  readonly descriptionTemplateOneOther: string = gettext(\n    'Update software to: {{ name }} (version {{ version }}) and one other'\n  );\n  readonly descriptionTemplateMultiple: string = gettext(\n    'Update software to: {{ name }} (version {{ version }}) and {{ count }} others'\n  );\n\n  selectedSoftware: ISelectedSoftware[] = [];\n  @ViewChild(SelectSoftwareStepComponent, { static: false })\n  selectSoftware: SelectSoftwareStepComponent;\n\n  constructor(private modal: ModalService, private translate: TranslateService) {\n    super();\n  }\n\n  onSoftwareSelected(selectedItem) {\n    this.selectedSoftware = this.selectedSoftware.filter(\n      item => item.software.id !== selectedItem.software.id\n    );\n    this.selectedSoftware.push(selectedItem);\n  }\n\n  async confirmSoftwareSelection($event: { stepper: C8yStepper; step: CdkStep }) {\n    const deviceTypes: string[] = this.getUniqueDeviceTypes();\n    this.deviceTypes = deviceTypes;\n    if (deviceTypes.length > 1) {\n      try {\n        await this.modal.confirm(\n          gettext('Selected software for various device types'),\n          gettext('Operation may fail due to unsupported software. Do you want to proceed?'),\n          Status.WARNING,\n          { ok: gettext('Confirm'), cancel: gettext('Cancel') }\n        );\n        $event.stepper.next();\n      } catch (ex) {\n        this.selectedSoftware = [];\n        this.selectSoftware.resetSelection();\n      }\n    } else {\n      $event.stepper.next();\n    }\n  }\n\n  protected retrieveOperationPrototype(): OperationDetails {\n    const softwareList: ISoftwareUpdateOperationPrototype[] = this.selectedSoftware.map(item => ({\n      name: item.software.name,\n      version: item.version.c8y_Software.version,\n      url: item.version.c8y_Software.url,\n      action: item.action\n    }));\n\n    const interpolationParams: object = {\n      name: softwareList[0].name,\n      version: softwareList[0].version,\n      count: softwareList.length - 1\n    };\n    let description: string;\n    switch (softwareList.length) {\n      case 1:\n        description = this.translate.instant(this.descriptionTemplateSingle, interpolationParams);\n        break;\n      case 2:\n        description = this.translate.instant(this.descriptionTemplateOneOther, interpolationParams);\n        break;\n      default:\n        description = this.translate.instant(this.descriptionTemplateMultiple, interpolationParams);\n    }\n\n    return {\n      name: gettext('Software update'),\n      prototype: ({\n        description,\n        c8y_SoftwareUpdate: softwareList\n      } as unknown) as IOperation\n    };\n  }\n\n  private getUniqueDeviceTypes(): string[] {\n    return uniq(\n      this.selectedSoftware\n        .map(item => item.software.c8y_Filter && item.software.c8y_Filter.type)\n        .filter(type => !!type)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { CoreModule, FormsModule, gettext } from '@c8y/ngx-components';\nimport { RepositoryModule } from '@c8y/ngx-components/repository';\nimport { BulkOperationStepperModule } from '@c8y/ngx-components/operations/bulk-operation-stepper';\nimport {\n  HOOK_LIST_BULK_TYPE,\n  baseUrl,\n  BulkOperationType\n} from '@c8y/ngx-components/operations/bulk-operations-service';\n\nimport { ConfirmSoftwareSelectionStepComponent } from './confirm-software-selection-step.component';\nimport { SelectSoftwareStepComponent } from './select-software-step.component';\nimport { StepperBulkTypeSoftwareComponent } from './stepper-bulk-type-software.component';\n\n/** Module for the 'Software update' operation type stepper */\n@NgModule({\n  declarations: [\n    StepperBulkTypeSoftwareComponent,\n    ConfirmSoftwareSelectionStepComponent,\n    SelectSoftwareStepComponent\n  ],\n  imports: [\n    CoreModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BulkOperationStepperModule,\n    RepositoryModule\n  ],\n  providers: [\n    {\n      provide: HOOK_LIST_BULK_TYPE,\n      useValue: {\n        type: BulkOperationType.SOFTWARE,\n        c8yIcon: 'c8y-tools',\n        name: gettext('Software update'),\n        path: `${baseUrl}software`,\n        component: StepperBulkTypeSoftwareComponent,\n        fragments: ['c8y_SoftwareList', 'c8y_SoftwareUpdate'],\n        selected: false\n      },\n      multi: true\n    }\n  ],\n  entryComponents: [StepperBulkTypeSoftwareComponent],\n  exports: [StepperBulkTypeSoftwareComponent]\n})\nexport class StepperBulkTypeSoftwareModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__decorate","tslib_1.__extends"],"mappings":"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"}